(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[213],{

/***/ "./examples/docs/fr-FR/upload.md":
/*!***************************************!*\
  !*** ./examples/docs/fr-FR/upload.md ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _upload_md_vue_type_template_id_3f75d87e__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=3f75d87e */ \"./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e\");\n/* harmony import */ var _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./upload.md?vue&type=script&lang=js */ \"./examples/docs/fr-FR/upload.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _upload_md_vue_type_template_id_3f75d87e__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"3f75d87e\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('3f75d87e', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('3f75d87e', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./upload.md?vue&type=template&id=3f75d87e */ \"./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _upload_md_vue_type_template_id_3f75d87e__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=3f75d87e */ \"./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e\");\n(() => {\n    api.rerender('3f75d87e', _upload_md_vue_type_template_id_3f75d87e__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/fr-FR/upload.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3VwbG9hZC5tZD8wZmVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFrRTtBQUNWO0FBQ0w7QUFDbkQsMEVBQU0sVUFBVSwrRUFBTTtBQUN0QjtBQUNBLElBQUksSUFBVTtBQUNkLEVBQUUsMEVBQU07QUFDUjtBQUNBO0FBQ0Esb0NBQW9DLDBFQUFNO0FBQzFDLDJCQUEyQiwwRUFBTTtBQUNqQzs7QUFFQSxvQkFBb0IsZ0hBQTJDLEVBQUU7QUFBQTtBQUNqRSw2QkFBNkIsK0VBQU07QUFDbkMsR0FBRzs7QUFFSDs7QUFFQSwwRUFBTTs7QUFFUyx5SSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZnItRlIvdXBsb2FkLm1kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNmNzVkODdlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5zY3JpcHQucmVuZGVyID0gcmVuZGVyXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICBzY3JpcHQuX19obXJJZCA9IFwiM2Y3NWQ4N2VcIlxuICBjb25zdCBhcGkgPSBfX1ZVRV9ITVJfUlVOVElNRV9fXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFhcGkuY3JlYXRlUmVjb3JkKCczZjc1ZDg3ZScsIHNjcmlwdCkpIHtcbiAgICBhcGkucmVsb2FkKCczZjc1ZDg3ZScsIHNjcmlwdClcbiAgfVxuICBcbiAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3VwbG9hZC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zZjc1ZDg3ZVwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCczZjc1ZDg3ZScsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2ZyLUZSL3VwbG9hZC5tZFwiXG5cbmV4cG9ydCBkZWZhdWx0IHNjcmlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/upload.md\n");

/***/ }),

/***/ "./examples/docs/fr-FR/upload.md?vue&type=script&lang=js":
/*!***************************************************************!*\
  !*** ./examples/docs/fr-FR/upload.md?vue&type=script&lang=js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/upload.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3VwbG9hZC5tZD9mZjkxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQTJNIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9mci1GUi91cGxvYWQubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e":
/*!*********************************************************************!*\
  !*** ./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e ***!
  \*********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_3f75d87e__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=template&id=3f75d87e */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_3f75d87e__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3VwbG9hZC5tZD9iNTk5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9mci1GUi91cGxvYWQubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2Y3NWQ4N2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L3RlbXBsYXRlTG9hZGVyLmpzPz9yZWYtLTUhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNmNzVkODdlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/upload.md?vue&type=script&lang=js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/upload.md?vue&type=script&lang=js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"before-remove\": _ctx.beforeRemove,\n          multiple: \"\",\n          limit: 3,\n          \"on-exceed\": _ctx.handleExceed,\n          \"file-list\": _ctx.fileList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Cliquer pour envoyer\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Fichiers jpg/png avec une taille inférieure à 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"before-remove\", \"on-exceed\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePreview(file) {\n            console.log(file);\n          },\n\n          handleExceed(files, fileList) {\n            this.$message.warning(`La limite est 3, vous avez choisi ${files.length} fichiers, soit ${files.length + fileList.length} au total.`);\n          },\n\n          beforeRemove(file, fileList) {\n            return this.$confirm(`Supprimer le transfert de ${file.name} ?`);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createCommentVNode: _createCommentVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"avatar-uploader\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"show-file-list\": false,\n          \"on-success\": _ctx.handleAvatarSuccess,\n          \"before-upload\": _ctx.beforeAvatarUpload\n        }, {\n          default: _withCtx(() => [_ctx.imageUrl ? (_openBlock(), _createBlock(\"img\", {\n            key: 0,\n            src: _ctx.imageUrl,\n            class: \"avatar\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])) : (_openBlock(), _createBlock(\"i\", {\n            key: 1,\n            class: \"el-icon-plus avatar-uploader-icon\"\n          }))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-success\", \"before-upload\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            imageUrl: ''\n          };\n        },\n\n        methods: {\n          handleAvatarSuccess(res, file) {\n            this.imageUrl = URL.createObjectURL(file.raw);\n          },\n\n          beforeAvatarUpload(file) {\n            const isJPG = file.type === 'image/jpeg';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isJPG) {\n              this.$message.error('L\\'avatar doit être en JPG !');\n            }\n\n            if (!isLt2M) {\n              this.$message.error('L\\'avatar ne peut pas excéder 2Mb !');\n            }\n\n            return isJPG && isLt2M;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"list-type\": \"picture-card\",\n          \"on-preview\": _ctx.handlePictureCardPreview,\n          \"on-remove\": _ctx.handleRemove\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-plus\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\"]), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            dialogImageUrl: '',\n            dialogVisible: false\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePictureCardPreview(file) {\n            this.dialogImageUrl = file.url;\n            this.dialogVisible = true;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createCommentVNode: _createCommentVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"#\",\n          \"list-type\": \"picture-card\",\n          \"auto-upload\": false\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            slot: \"default\",\n            class: \"el-icon-plus\"\n          }), _createVNode(\"div\", {\n            slot: \"file\",\n            \"slot-scope\": \"{file}\"\n          }, [_createVNode(\"img\", {\n            class: \"el-upload-list__item-thumbnail\",\n            src: _ctx.file.url,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"]), _createVNode(\"span\", {\n            class: \"el-upload-list__item-actions\"\n          }, [_createVNode(\"span\", {\n            class: \"el-upload-list__item-preview\",\n            onClick: $event => _ctx.handlePictureCardPreview(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-zoom-in\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"]), !_ctx.disabled ? (_openBlock(), _createBlock(\"span\", {\n            key: 0,\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleDownload(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-download\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), !_ctx.disabled ? (_openBlock(), _createBlock(\"span\", {\n            key: 1,\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleRemove(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-delete\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])])]),\n          _: 1\n        }), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            dialogImageUrl: '',\n            dialogVisible: false,\n            disabled: false\n          };\n        },\n\n        methods: {\n          handleRemove(file) {\n            console.log(file);\n          },\n\n          handlePictureCardPreview(file) {\n            this.dialogImageUrl = file.url;\n            this.dialogVisible = true;\n          },\n\n          handleDownload(file) {\n            console.log(file);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          \"list-type\": \"picture\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Cliquer pour envoyer\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Fichiers jpg/png avec une taille inférieure à 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePreview(file) {\n            console.log(file);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-change\": _ctx.handleChange,\n          \"file-list\": _ctx.fileList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Cliquer pour envoyer\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Fichiers jpg/png avec une taille inférieure à 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-change\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleChange(file, fileList) {\n            this.fileList = fileList.slice(-3);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          drag: \"\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          multiple: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-upload\"\n          }), _createVNode(\"div\", {\n            class: \"el-upload__text\"\n          }, [_createTextVNode(\"Déposer les fichiers ici ou\"), _createVNode(\"em\", null, \"cliquez pour envoyer\")]), _createVNode(\"div\", {\n            class: \"el-upload__tip\",\n            slot: \"tip\"\n          }, \"Fichiers jpg/png avec une taille inférieure à 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]);\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo7\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          ref: \"upload\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"auto-upload\": false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            slot: \"trigger\",\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Choisir un fichier\")]),\n            _: 1\n          }), _createVNode(_component_el_button, {\n            style: {\n              \"margin-left\": \"10px\"\n            },\n            size: \"small\",\n            type: \"success\",\n            onClick: _ctx.submitUpload\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Envoyer au serveur\")]),\n            _: 1\n          }, 8\n          /* PROPS */\n          , [\"onClick\"]), _createVNode(\"div\", {\n            class: \"el-upload__tip\",\n            slot: \"tip\"\n          }, \"Fichiers jpg/png avec une taille inférieure à 500kb\")]),\n          _: 1\n        }, 512\n        /* NEED_PATCH */\n        );\n      }\n\n      const democomponentExport = {\n        methods: {\n          submitUpload() {\n            this.$refs.upload.submit();\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e ***!
  \*****************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"upload\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#upload\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Upload\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Permet d'uploader des fichiers en cliquant ou en les déplaçant sur le composant.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"cliquer-pour-envoyer\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#cliquer-pour-envoyer\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Cliquer pour envoyer\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Personnalisez le bouton d'envoi avec \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"slot\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Utilisez \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"limit\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" et \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-exceed\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour limiter le nombre maximal de fichiers et déterminer le comportement quand ce nombre est dépassé. De plus, vous pouvez annuler la suppression d'un fichier avec \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"before-remove\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :before-remove=\\\"beforeRemove\\\"\\n  multiple\\n  :limit=\\\"3\\\"\\n  :on-exceed=\\\"handleExceed\\\"\\n  :file-list=\\\"fileList\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Cliquer pour envoyer</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Fichiers jpg/png avec une taille inférieure à 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePreview(file) {\\n        console.log(file);\\n      },\\n      handleExceed(files, fileList) {\\n        this.$message.warning(`La limite est 3, vous avez choisi ${files.length} fichiers, soit ${files.length + fileList.length} au total.`);\\n      },\\n      beforeRemove(file, fileList) {\\n        return this.$confirm(`Supprimer le transfert de ${ file.name } ?`);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"envoi-d-avatar-utilisateur\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#envoi-d-avatar-utilisateur\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Envoi d'avatar utilisateur\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilisez \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"before-upload\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour restreindre le format et la taille du fichier à envoyer.\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"avatar-uploader\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :show-file-list=\\\"false\\\"\\n  :on-success=\\\"handleAvatarSuccess\\\"\\n  :before-upload=\\\"beforeAvatarUpload\\\">\\n  <img v-if=\\\"imageUrl\\\" :src=\\\"imageUrl\\\" class=\\\"avatar\\\">\\n  <i v-else class=\\\"el-icon-plus avatar-uploader-icon\\\"></i>\\n</el-upload>\\n\\n<style>\\n  .avatar-uploader .el-upload {\\n    border: 1px dashed #d9d9d9;\\n    border-radius: 6px;\\n    cursor: pointer;\\n    position: relative;\\n    overflow: hidden;\\n  }\\n  .avatar-uploader .el-upload:hover {\\n    border-color: #409EFF;\\n  }\\n  .avatar-uploader-icon {\\n    font-size: 28px;\\n    color: #8c939d;\\n    width: 178px;\\n    height: 178px;\\n    line-height: 178px;\\n    text-align: center;\\n  }\\n  .avatar {\\n    width: 178px;\\n    height: 178px;\\n    display: block;\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        imageUrl: ''\\n      };\\n    },\\n    methods: {\\n      handleAvatarSuccess(res, file) {\\n        this.imageUrl = URL.createObjectURL(file.raw);\\n      },\\n      beforeAvatarUpload(file) {\\n        const isJPG = file.type === 'image/jpeg';\\n        const isLt2M = file.size / 1024 / 1024 < 2;\\n\\n        if (!isJPG) {\\n          this.$message.error('L\\\\'avatar doit être en JPG !');\\n        }\\n        if (!isLt2M) {\\n          this.$message.error('L\\\\'avatar ne peut pas excéder 2Mb !');\\n        }\\n        return isJPG && isLt2M;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"mur-de-photos\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#mur-de-photos\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Mur de photos\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilisez \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"list-type\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour changer le style de la liste de fichiers.\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  list-type=\\\"picture-card\\\"\\n  :on-preview=\\\"handlePictureCardPreview\\\"\\n  :on-remove=\\\"handleRemove\\\">\\n  <i class=\\\"el-icon-plus\\\"></i>\\n</el-upload>\\n<el-dialog :visible.sync=\\\"dialogVisible\\\">\\n  <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" alt=\\\"\\\">\\n</el-dialog>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dialogImageUrl: '',\\n        dialogVisible: false\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePictureCardPreview(file) {\\n        this.dialogImageUrl = file.url;\\n        this.dialogVisible = true;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"custom-file-thumbnail\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#custom-file-thumbnail\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Custom file thumbnail\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"scoped-slot\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to change default thumbnail template.\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  action=\\\"#\\\"\\n  list-type=\\\"picture-card\\\"\\n  :auto-upload=\\\"false\\\">\\n    <i slot=\\\"default\\\" class=\\\"el-icon-plus\\\"></i>\\n    <div slot=\\\"file\\\" slot-scope=\\\"{file}\\\">\\n      <img\\n        class=\\\"el-upload-list__item-thumbnail\\\"\\n        :src=\\\"file.url\\\" alt=\\\"\\\"\\n      >\\n      <span class=\\\"el-upload-list__item-actions\\\">\\n        <span\\n          class=\\\"el-upload-list__item-preview\\\"\\n          @click=\\\"handlePictureCardPreview(file)\\\"\\n        >\\n          <i class=\\\"el-icon-zoom-in\\\"></i>\\n        </span>\\n        <span\\n          v-if=\\\"!disabled\\\"\\n          class=\\\"el-upload-list__item-delete\\\"\\n          @click=\\\"handleDownload(file)\\\"\\n        >\\n          <i class=\\\"el-icon-download\\\"></i>\\n        </span>\\n        <span\\n          v-if=\\\"!disabled\\\"\\n          class=\\\"el-upload-list__item-delete\\\"\\n          @click=\\\"handleRemove(file)\\\"\\n        >\\n          <i class=\\\"el-icon-delete\\\"></i>\\n        </span>\\n      </span>\\n    </div>\\n</el-upload>\\n<el-dialog :visible.sync=\\\"dialogVisible\\\">\\n  <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" alt=\\\"\\\">\\n</el-dialog>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dialogImageUrl: '',\\n        dialogVisible: false,\\n        disabled: false\\n      };\\n    },\\n    methods: {\\n      handleRemove(file) {\\n        console.log(file);\\n      },\\n      handlePictureCardPreview(file) {\\n        this.dialogImageUrl = file.url;\\n        this.dialogVisible = true;\\n      },\\n      handleDownload(file) {\\n        console.log(file);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"liste-de-fichiers-avec-miniatures\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#liste-de-fichiers-avec-miniatures\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Liste de fichiers avec miniatures\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :file-list=\\\"fileList\\\"\\n  list-type=\\\"picture\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Cliquer pour envoyer</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Fichiers jpg/png avec une taille inférieure à 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePreview(file) {\\n        console.log(file);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"controle-de-la-liste-de-fichiers\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#controle-de-la-liste-de-fichiers\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Contrôle de la liste de fichiers\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilisez \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-change\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour contrôler le comportement de la liste de fichiers.\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-change=\\\"handleChange\\\"\\n  :file-list=\\\"fileList\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Cliquer pour envoyer</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Fichiers jpg/png avec une taille inférieure à 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{\\n          name: 'food.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }, {\\n          name: 'food2.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }]\\n      };\\n    },\\n    methods: {\\n      handleChange(file, fileList) {\\n        this.fileList = fileList.slice(-3);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"envoi-en-deposant\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#envoi-en-deposant\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Envoi en déposant\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez déposer les fichiers par drag'n drop sur l'espace dédié.\", -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  drag\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :file-list=\\\"fileList\\\"\\n  multiple>\\n  <i class=\\\"el-icon-upload\\\"></i>\\n  <div class=\\\"el-upload__text\\\">Déposer les fichiers ici ou<em>cliquez pour envoyer</em></div>\\n  <div class=\\\"el-upload__tip\\\" slot=\\\"tip\\\">Fichiers jpg/png avec une taille inférieure à 500kb</div>\\n</el-upload>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"envoi-manuel\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#envoi-manuel\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Envoi manuel\")\n], -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  ref=\\\"upload\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :auto-upload=\\\"false\\\">\\n  <el-button slot=\\\"trigger\\\" size=\\\"small\\\" type=\\\"primary\\\">Choisir un fichier</el-button>\\n  <el-button style=\\\"margin-left: 10px;\\\" size=\\\"small\\\" type=\\\"success\\\" @click=\\\"submitUpload\\\">Envoyer au serveur</el-button>\\n  <div class=\\\"el-upload__tip\\\" slot=\\\"tip\\\">Fichiers jpg/png avec une taille inférieure à 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    methods: {\\n      submitUpload() {\\n        this.$refs.upload.submit();\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"attributs\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributs\\\">¶</a> Attributs</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>action</td><td>Requis, l&#39;url de requête.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>headers</td><td>Les headers de la requête.</td><td>object</td><td>—</td><td>—</td></tr><tr><td>multiple</td><td>Si envoyer de multiples fichiers est autorisé.</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>data</td><td>Options additionnelles de la requête.</td><td>object</td><td>—</td><td>—</td></tr><tr><td>name</td><td>Identifiant du fichier.</td><td>string</td><td>—</td><td>file</td></tr><tr><td>with-credentials</td><td>Si les cookies sont aussi envoyés.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-file-list</td><td>Si la liste des fichiers est affichée.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>drag</td><td>Si le mode drag&#39;n drop est activé.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>accept</td><td><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept\\\">Types de fichiers</a> acceptés, ne marche pas si <code>thumbnail-mode</code> est <code>true</code>.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>on-preview</td><td>Fonction pour quand le fichier est cliqué.</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>on-remove</td><td>Fonction pour quand des fichiers sont supprimés.</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-success</td><td>Fonction pour quand l&#39;upload a réussi.</td><td>function(response, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-error</td><td>Fonction pour quand l&#39;upload renvoi une erreur.</td><td>function(err, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-progress</td><td>Fonction pour quand l&#39;upload est en cours.</td><td>function(event, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-change</td><td>Fonction pour quand le statut d&#39;un fichier change (sélection, upload, erreur...).</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>before-upload</td><td>Fonction pour avant l&#39;upload. Si <code>false</code> est retourné ou une <code>Promise</code> qui est ensuite rejetée, l&#39;envoi sera annulé.</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>before-remove</td><td>Fonction pour avant la suppression de fichiers. Si <code>false</code> est retourné ou une <code>Promise</code> qui est ensuite rejetée, la suppression sera ensuite annulée.</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>thumbnail-mode</td><td>Si les miniatures sont affichées.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>file-list</td><td>Les fichiers envoyé par défaut, e.g. [{name: &#39;food.jpg&#39;, url: &#39;https://xxx.cdn.com/xxx.jpg&#39;}]</td><td>array</td><td>—</td><td>[]</td></tr><tr><td>list-type</td><td>Le type de liste de fichiers.</td><td>string</td><td>text/picture/picture-card</td><td>text</td></tr><tr><td>auto-upload</td><td>Si l&#39;envoi est automatique.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>http-request</td><td>Écrase le xhr par défaut, afin que vous puissiez implémenter votre propre fonction d&#39;envoi.</td><td>function</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>Si le composant est désactivé.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>limit</td><td>Nombre maximum d&#39;envoi autorisés.</td><td>number</td><td>—</td><td>—</td></tr><tr><td>on-exceed</td><td>Fonction pour quand la limite d&#39;envoi est dépassée.</td><td>function(files, fileList)</td><td>—</td><td>-</td></tr></tbody></table><h3 id=\\\"slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#slot\\\">¶</a> Slot</h3><table><thead><tr><th>Nom</th><th>Description</th></tr></thead><tbody><tr><td>trigger</td><td>Le contenu qui déclenche le Dialog du fichier.</td></tr><tr><td>tip</td><td>Le contenu des tips.</td></tr></tbody></table><h3 id=\\\"methodes\\\"><a class=\\\"header-anchor\\\" href=\\\"#methodes\\\">¶</a> Méthodes</h3><table><thead><tr><th>Méthode</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>clearFiles</td><td>Efface la liste (non supporté dans <code>before-upload</code>).</td><td>—</td></tr><tr><td>abort</td><td>Annule l&#39;envoi en cours.</td><td>（ file: fileList&#39;s item ）</td></tr><tr><td>submit</td><td>Envoi la liste de fichiers manuellement.</td><td>—</td></tr></tbody></table>\", 6)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_5\n      ]),\n      _: 1\n    }),\n    _hoisted_7,\n    _hoisted_8,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      _: 1\n    }),\n    _hoisted_10,\n    _hoisted_11,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      _: 1\n    }),\n    _hoisted_13,\n    _hoisted_14,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      _: 1\n    }),\n    _hoisted_16,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      _: 1\n    }),\n    _hoisted_18,\n    _hoisted_19,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_20\n      ]),\n      _: 1\n    }),\n    _hoisted_21,\n    _hoisted_22,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_23\n      ]),\n      _: 1\n    }),\n    _hoisted_24,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_25\n      ]),\n      _: 1\n    }),\n    _hoisted_26\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3VwbG9hZC5tZD9hMTNjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3FCQUVlLEtBQUssRUFBQyxxQkFBcUI7Z0NBQ2xDLHdEQUF5RSxRQUFyRSxFQUFFLEVBQUMsUUFBUTtlQUFDLHdEQUE2QztJQUExQyxLQUFLLEVBQUMsZUFBZTtJQUFDLElBQUksRUFBQyxTQUFTO0tBQUMsR0FBQzsyRUFBSSxTQUFPOztnQ0FDNUUsd0RBQXVGLFdBQXBGLGtGQUFnRjtnQ0FDbkYsd0RBQW1ILFFBQS9HLEVBQUUsRUFBQyxzQkFBc0I7ZUFBQyx3REFBMkQ7SUFBeEQsS0FBSyxFQUFDLGVBQWU7SUFBQyxJQUFJLEVBQUMsdUJBQXVCO0tBQUMsR0FBQzsyRUFBSSx1QkFBcUI7O2dDQUV0Ryx3REFDRjtlQURPLHdEQUFvVDs2RUFBalQsdUNBQXFDO2lCQUFBLHdEQUFpQixjQUFYLE1BQUk7NkVBQU8sYUFBVztpQkFBQSx3REFBa0IsY0FBWixPQUFLOzZFQUFPLE1BQUk7aUJBQUEsd0RBQXNCLGNBQWhCLFdBQVM7NkVBQU8sdUtBQXFLO2lCQUFBLHdEQUEwQixjQUFwQixlQUFhOzZFQUFPLEdBQUM7OztnQ0FHaFMsd0RBb0NoQjtlQXBDMkIsd0RBb0NqQyxVQXBDdUMsS0FBSyxFQUFDLE1BQU0sSUFBQyxvM0NBb0MzRDs7Z0NBQXFDLHdEQUFxSSxRQUFqSSxFQUFFLEVBQUMsNEJBQTRCO2VBQUMsd0RBQWlFO0lBQTlELEtBQUssRUFBQyxlQUFlO0lBQUMsSUFBSSxFQUFDLDZCQUE2QjtLQUFDLEdBQUM7MkVBQUksNkJBQTJCOztnQ0FDckssd0RBQXdHOzJFQUFyRyxXQUFTO2VBQUEsd0RBQTBCLGNBQXBCLGVBQWE7MkVBQU8sZ0VBQThEOztnQ0FJdkUsd0RBOERoQjtlQTlEMkIsd0RBOERqQyxVQTlEdUMsS0FBSyxFQUFDLE1BQU0sSUFBQyw2OENBOEQzRDs7aUNBQXFDLHdEQUE4RixRQUExRixFQUFFLEVBQUMsZUFBZTtlQUFDLHdEQUFvRDtJQUFqRCxLQUFLLEVBQUMsZUFBZTtJQUFDLElBQUksRUFBQyxnQkFBZ0I7S0FBQyxHQUFDOzJFQUFJLGdCQUFjOztpQ0FDOUgsd0RBQXFGOzJFQUFsRixXQUFTO2VBQUEsd0RBQXNCLGNBQWhCLFdBQVM7MkVBQU8saURBQStDOztpQ0FJcEQsd0RBNkJoQjtlQTdCMkIsd0RBNkJqQyxVQTdCdUMsS0FBSyxFQUFDLE1BQU0sSUFBQywwdEJBNkIzRDs7aUNBQXFDLHdEQUFzSCxRQUFsSCxFQUFFLEVBQUMsdUJBQXVCO2VBQUMsd0RBQTREO0lBQXpELEtBQUssRUFBQyxlQUFlO0lBQUMsSUFBSSxFQUFDLHdCQUF3QjtLQUFDLEdBQUM7MkVBQUksd0JBQXNCOztpQ0FDdEosd0RBQXlFOzJFQUF0RSxNQUFJO2VBQUEsd0RBQXdCLGNBQWxCLGFBQVc7MkVBQU8sd0NBQXNDOztpQ0FJeEMsd0RBNERoQjtlQTVEMkIsd0RBNERqQyxVQTVEdUMsS0FBSyxFQUFDLE1BQU0sSUFBQyx1aURBNEQzRDs7aUNBQXFDLHdEQUEwSixRQUF0SixFQUFFLEVBQUMsbUNBQW1DO2VBQUMsd0RBQXdFO0lBQXJFLEtBQUssRUFBQyxlQUFlO0lBQUMsSUFBSSxFQUFDLG9DQUFvQztLQUFDLEdBQUM7MkVBQUksb0NBQWtDOztpQ0FJN0osd0RBMkJoQjtlQTNCMkIsd0RBMkJqQyxVQTNCdUMsS0FBSyxFQUFDLE1BQU0sSUFBQyxpL0JBMkIzRDs7aUNBQXFDLHdEQUF1SixRQUFuSixFQUFFLEVBQUMsa0NBQWtDO2VBQUMsd0RBQXVFO0lBQXBFLEtBQUssRUFBQyxlQUFlO0lBQUMsSUFBSSxFQUFDLG1DQUFtQztLQUFDLEdBQUM7MkVBQUksbUNBQWlDOztpQ0FDdkwsd0RBQThGOzJFQUEzRixXQUFTO2VBQUEsd0RBQXNCLGNBQWhCLFdBQVM7MkVBQU8sMERBQXdEOztpQ0FJN0Qsd0RBNEJoQjtlQTVCMkIsd0RBNEJqQyxVQTVCdUMsS0FBSyxFQUFDLE1BQU0sSUFBQyw2N0JBNEIzRDs7aUNBQXFDLHdEQUEwRyxRQUF0RyxFQUFFLEVBQUMsbUJBQW1CO2VBQUMsd0RBQXdEO0lBQXJELEtBQUssRUFBQyxlQUFlO0lBQUMsSUFBSSxFQUFDLG9CQUFvQjtLQUFDLEdBQUM7MkVBQUksb0JBQWtCOztpQ0FDMUksd0RBQTJFLFdBQXhFLHNFQUFvRTtpQ0FJMUMsd0RBWWhCO2VBWjJCLHdEQVlqQyxVQVp1QyxLQUFLLEVBQUMsTUFBTSxJQUFDLDRjQVkzRDs7aUNBQXFDLHdEQUEyRixRQUF2RixFQUFFLEVBQUMsY0FBYztlQUFDLHdEQUFtRDtJQUFoRCxLQUFLLEVBQUMsZUFBZTtJQUFDLElBQUksRUFBQyxlQUFlO0tBQUMsR0FBQzsyRUFBSSxlQUFhOztpQ0FJOUYsd0RBa0JoQjtlQWxCMkIsd0RBa0JqQyxVQWxCdUMsS0FBSyxFQUFDLE1BQU0sSUFBQywrbUJBa0IzRDs7Ozs7Ozs7Ozs7Ozs7O21FQXpUTSx3REFxaUJVLFdBcmlCVixVQXFpQlU7SUFwaUJSLFVBQXlFO0lBQ2pGLFVBQXVGO0lBQ3ZGLFVBQW1IO0lBQ25ILHdEQXdDcUM7TUFyQ2xCLE1BQU0sc0RBQUMsQ0FBaUI7UUFBakIsd0RBQWlCOztNQUN4QixTQUFTLHNEQUFDLENBb0NoQjtRQXBDZ0IsVUFvQ2hCOzttRUF2Q0wsQ0FDRjtRQURFLFVBQ0Y7Ozs7SUFzQytCLFVBQXFJO0lBQzFLLFVBQXdHO0lBQ3hHLHdEQWlFcUM7TUEvRGxCLE1BQU0sc0RBQUMsQ0FBaUI7UUFBakIsd0RBQWlCOztNQUN4QixTQUFTLHNEQUFDLENBOERoQjtRQTlEZ0IsVUE4RGhCOzs7O0lBQXdCLFdBQThGO0lBQ25JLFdBQXFGO0lBQ3JGLHdEQWdDcUM7TUE5QmxCLE1BQU0sc0RBQUMsQ0FBaUI7UUFBakIsd0RBQWlCOztNQUN4QixTQUFTLHNEQUFDLENBNkJoQjtRQTdCZ0IsV0E2QmhCOzs7O0lBQXdCLFdBQXNIO0lBQzNKLFdBQXlFO0lBQ3pFLHdEQStEcUM7TUE3RGxCLE1BQU0sc0RBQUMsQ0FBaUI7UUFBakIsd0RBQWlCOztNQUN4QixTQUFTLHNEQUFDLENBNERoQjtRQTVEZ0IsV0E0RGhCOzs7O0lBQXdCLFdBQTBKO0lBQy9MLHdEQThCcUM7TUE1QmxCLE1BQU0sc0RBQUMsQ0FBaUI7UUFBakIsd0RBQWlCOztNQUN4QixTQUFTLHNEQUFDLENBMkJoQjtRQTNCZ0IsV0EyQmhCOzs7O0lBQXdCLFdBQXVKO0lBQzVMLFdBQThGO0lBQzlGLHdEQStCcUM7TUE3QmxCLE1BQU0sc0RBQUMsQ0FBaUI7UUFBakIsd0RBQWlCOztNQUN4QixTQUFTLHNEQUFDLENBNEJoQjtRQTVCZ0IsV0E0QmhCOzs7O0lBQXdCLFdBQTBHO0lBQy9JLFdBQTJFO0lBQzNFLHdEQWVxQztNQWJsQixNQUFNLHNEQUFDLENBQWlCO1FBQWpCLHdEQUFpQjs7TUFDeEIsU0FBUyxzREFBQyxDQVloQjtRQVpnQixXQVloQjs7OztJQUF3QixXQUEyRjtJQUNoSSx3REFxQnFDO01BbkJsQixNQUFNLHNEQUFDLENBQWlCO1FBQWpCLHdEQUFpQjs7TUFDeEIsU0FBUyxzREFBQyxDQWtCaEI7UUFsQmdCLFdBa0JoQjs7OztJQUF3QixXQUFrRiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvdGVtcGxhdGVMb2FkZXIuanM/IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8hLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3VwbG9hZC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zZjc1ZDg3ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIDx0ZW1wbGF0ZT5cbiAgICAgIDxzZWN0aW9uIGNsYXNzPVwiY29udGVudCBlbGVtZW50LWRvY1wiPlxuICAgICAgICA8aDIgaWQ9XCJ1cGxvYWRcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI3VwbG9hZFwiPsK2PC9hPiBVcGxvYWQ8L2gyPlxuPHA+UGVybWV0IGQndXBsb2FkZXIgZGVzIGZpY2hpZXJzIGVuIGNsaXF1YW50IG91IGVuIGxlcyBkw6lwbGHDp2FudCBzdXIgbGUgY29tcG9zYW50LjwvcD5cbjxoMyBpZD1cImNsaXF1ZXItcG91ci1lbnZveWVyXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNjbGlxdWVyLXBvdXItZW52b3llclwiPsK2PC9hPiBDbGlxdWVyIHBvdXIgZW52b3llcjwvaDM+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5QZXJzb25uYWxpc2V6IGxlIGJvdXRvbiBkJ2Vudm9pIGF2ZWMgPGNvZGU+c2xvdDwvY29kZT4uIFV0aWxpc2V6IDxjb2RlPmxpbWl0PC9jb2RlPiBldCA8Y29kZT5vbi1leGNlZWQ8L2NvZGU+IHBvdXIgbGltaXRlciBsZSBub21icmUgbWF4aW1hbCBkZSBmaWNoaWVycyBldCBkw6l0ZXJtaW5lciBsZSBjb21wb3J0ZW1lbnQgcXVhbmQgY2Ugbm9tYnJlIGVzdCBkw6lwYXNzw6kuIERlIHBsdXMsIHZvdXMgcG91dmV6IGFubnVsZXIgbGEgc3VwcHJlc3Npb24gZCd1biBmaWNoaWVyIGF2ZWMgPGNvZGU+YmVmb3JlLXJlbW92ZTwvY29kZT4uPC9wPlxuPC9kaXY+XG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW8wIC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtdXBsb2FkXG4gIGNsYXNzPSZxdW90O3VwbG9hZC1kZW1vJnF1b3Q7XG4gIGFjdGlvbj0mcXVvdDtodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJnF1b3Q7XG4gIDpvbi1wcmV2aWV3PSZxdW90O2hhbmRsZVByZXZpZXcmcXVvdDtcbiAgOm9uLXJlbW92ZT0mcXVvdDtoYW5kbGVSZW1vdmUmcXVvdDtcbiAgOmJlZm9yZS1yZW1vdmU9JnF1b3Q7YmVmb3JlUmVtb3ZlJnF1b3Q7XG4gIG11bHRpcGxlXG4gIDpsaW1pdD0mcXVvdDszJnF1b3Q7XG4gIDpvbi1leGNlZWQ9JnF1b3Q7aGFuZGxlRXhjZWVkJnF1b3Q7XG4gIDpmaWxlLWxpc3Q9JnF1b3Q7ZmlsZUxpc3QmcXVvdDsmZ3Q7XG4gICZsdDtlbC1idXR0b24gc2l6ZT0mcXVvdDtzbWFsbCZxdW90OyB0eXBlPSZxdW90O3ByaW1hcnkmcXVvdDsmZ3Q7Q2xpcXVlciBwb3VyIGVudm95ZXImbHQ7L2VsLWJ1dHRvbiZndDtcbiAgJmx0O2RpdiBzbG90PSZxdW90O3RpcCZxdW90OyBjbGFzcz0mcXVvdDtlbC11cGxvYWRfX3RpcCZxdW90OyZndDtGaWNoaWVycyBqcGcvcG5nIGF2ZWMgdW5lIHRhaWxsZSBpbmbDqXJpZXVyZSDDoCA1MDBrYiZsdDsvZGl2Jmd0O1xuJmx0Oy9lbC11cGxvYWQmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZpbGVMaXN0OiBbe25hbWU6ICdmb29kLmpwZWcnLCB1cmw6ICdodHRwczovL2Z1c3MxMC5lbGVtZWNkbi5jb20vMy82My80ZTdmM2ExNTQyOWJmZGE5OWJjZTQyYTE4Y2RkMWpwZWcuanBlZz9pbWFnZU1vZ3IyL3RodW1ibmFpbC8zNjB4MzYwL2Zvcm1hdC93ZWJwL3F1YWxpdHkvMTAwJ30sIHtuYW1lOiAnZm9vZDIuanBlZycsIHVybDogJ2h0dHBzOi8vZnVzczEwLmVsZW1lY2RuLmNvbS8zLzYzLzRlN2YzYTE1NDI5YmZkYTk5YmNlNDJhMThjZGQxanBlZy5qcGVnP2ltYWdlTW9ncjIvdGh1bWJuYWlsLzM2MHgzNjAvZm9ybWF0L3dlYnAvcXVhbGl0eS8xMDAnfV1cbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBoYW5kbGVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHtcbiAgICAgICAgY29uc29sZS5sb2coZmlsZSwgZmlsZUxpc3QpO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZVByZXZpZXcoZmlsZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhmaWxlKTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVFeGNlZWQoZmlsZXMsIGZpbGVMaXN0KSB7XG4gICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZyhgTGEgbGltaXRlIGVzdCAzLCB2b3VzIGF2ZXogY2hvaXNpICR7ZmlsZXMubGVuZ3RofSBmaWNoaWVycywgc29pdCAke2ZpbGVzLmxlbmd0aCArIGZpbGVMaXN0Lmxlbmd0aH0gYXUgdG90YWwuYCk7XG4gICAgICB9LFxuICAgICAgYmVmb3JlUmVtb3ZlKGZpbGUsIGZpbGVMaXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLiRjb25maXJtKGBTdXBwcmltZXIgbGUgdHJhbnNmZXJ0IGRlICR7IGZpbGUubmFtZSB9ID9gKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiZsdDsvc2NyaXB0Jmd0O1xuPC9jb2RlPjwvcHJlPjwvdGVtcGxhdGU+PC9kZW1vLWJsb2NrPjxoMyBpZD1cImVudm9pLWQtYXZhdGFyLXV0aWxpc2F0ZXVyXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNlbnZvaS1kLWF2YXRhci11dGlsaXNhdGV1clwiPsK2PC9hPiBFbnZvaSBkJ2F2YXRhciB1dGlsaXNhdGV1cjwvaDM+XG48cD5VdGlsaXNleiA8Y29kZT5iZWZvcmUtdXBsb2FkPC9jb2RlPiBwb3VyIHJlc3RyZWluZHJlIGxlIGZvcm1hdCBldCBsYSB0YWlsbGUgZHUgZmljaGllciDDoCBlbnZveWVyLjwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICBcbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzEgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDtlbC11cGxvYWRcbiAgY2xhc3M9JnF1b3Q7YXZhdGFyLXVwbG9hZGVyJnF1b3Q7XG4gIGFjdGlvbj0mcXVvdDtodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJnF1b3Q7XG4gIDpzaG93LWZpbGUtbGlzdD0mcXVvdDtmYWxzZSZxdW90O1xuICA6b24tc3VjY2Vzcz0mcXVvdDtoYW5kbGVBdmF0YXJTdWNjZXNzJnF1b3Q7XG4gIDpiZWZvcmUtdXBsb2FkPSZxdW90O2JlZm9yZUF2YXRhclVwbG9hZCZxdW90OyZndDtcbiAgJmx0O2ltZyB2LWlmPSZxdW90O2ltYWdlVXJsJnF1b3Q7IDpzcmM9JnF1b3Q7aW1hZ2VVcmwmcXVvdDsgY2xhc3M9JnF1b3Q7YXZhdGFyJnF1b3Q7Jmd0O1xuICAmbHQ7aSB2LWVsc2UgY2xhc3M9JnF1b3Q7ZWwtaWNvbi1wbHVzIGF2YXRhci11cGxvYWRlci1pY29uJnF1b3Q7Jmd0OyZsdDsvaSZndDtcbiZsdDsvZWwtdXBsb2FkJmd0O1xuXG4mbHQ7c3R5bGUmZ3Q7XG4gIC5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZCB7XG4gICAgYm9yZGVyOiAxcHggZGFzaGVkICNkOWQ5ZDk7XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAuYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQ6aG92ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzQwOUVGRjtcbiAgfVxuICAuYXZhdGFyLXVwbG9hZGVyLWljb24ge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICBjb2xvcjogIzhjOTM5ZDtcbiAgICB3aWR0aDogMTc4cHg7XG4gICAgaGVpZ2h0OiAxNzhweDtcbiAgICBsaW5lLWhlaWdodDogMTc4cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIC5hdmF0YXIge1xuICAgIHdpZHRoOiAxNzhweDtcbiAgICBoZWlnaHQ6IDE3OHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4mbHQ7L3N0eWxlJmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGltYWdlVXJsOiAnJ1xuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGhhbmRsZUF2YXRhclN1Y2Nlc3MocmVzLCBmaWxlKSB7XG4gICAgICAgIHRoaXMuaW1hZ2VVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUucmF3KTtcbiAgICAgIH0sXG4gICAgICBiZWZvcmVBdmF0YXJVcGxvYWQoZmlsZSkge1xuICAgICAgICBjb25zdCBpc0pQRyA9IGZpbGUudHlwZSA9PT0gJ2ltYWdlL2pwZWcnO1xuICAgICAgICBjb25zdCBpc0x0Mk0gPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNCAmbHQ7IDI7XG5cbiAgICAgICAgaWYgKCFpc0pQRykge1xuICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ0xcXCdhdmF0YXIgZG9pdCDDqnRyZSBlbiBKUEcgIScpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNMdDJNKSB7XG4gICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcignTFxcJ2F2YXRhciBuZSBwZXV0IHBhcyBleGPDqWRlciAyTWIgIScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpc0pQRyAmYW1wOyZhbXA7IGlzTHQyTTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiZsdDsvc2NyaXB0Jmd0O1xuPC9jb2RlPjwvcHJlPjwvdGVtcGxhdGU+PC9kZW1vLWJsb2NrPjxoMyBpZD1cIm11ci1kZS1waG90b3NcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI211ci1kZS1waG90b3NcIj7CtjwvYT4gTXVyIGRlIHBob3RvczwvaDM+XG48cD5VdGlsaXNleiA8Y29kZT5saXN0LXR5cGU8L2NvZGU+IHBvdXIgY2hhbmdlciBsZSBzdHlsZSBkZSBsYSBsaXN0ZSBkZSBmaWNoaWVycy48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgXG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW8yIC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtdXBsb2FkXG4gIGFjdGlvbj0mcXVvdDtodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJnF1b3Q7XG4gIGxpc3QtdHlwZT0mcXVvdDtwaWN0dXJlLWNhcmQmcXVvdDtcbiAgOm9uLXByZXZpZXc9JnF1b3Q7aGFuZGxlUGljdHVyZUNhcmRQcmV2aWV3JnF1b3Q7XG4gIDpvbi1yZW1vdmU9JnF1b3Q7aGFuZGxlUmVtb3ZlJnF1b3Q7Jmd0O1xuICAmbHQ7aSBjbGFzcz0mcXVvdDtlbC1pY29uLXBsdXMmcXVvdDsmZ3Q7Jmx0Oy9pJmd0O1xuJmx0Oy9lbC11cGxvYWQmZ3Q7XG4mbHQ7ZWwtZGlhbG9nIDp2aXNpYmxlLnN5bmM9JnF1b3Q7ZGlhbG9nVmlzaWJsZSZxdW90OyZndDtcbiAgJmx0O2ltZyB3aWR0aD0mcXVvdDsxMDAlJnF1b3Q7IDpzcmM9JnF1b3Q7ZGlhbG9nSW1hZ2VVcmwmcXVvdDsgYWx0PSZxdW90OyZxdW90OyZndDtcbiZsdDsvZWwtZGlhbG9nJmd0O1xuJmx0O3NjcmlwdCZndDtcbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaWFsb2dJbWFnZVVybDogJycsXG4gICAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlXG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgaGFuZGxlUmVtb3ZlKGZpbGUsIGZpbGVMaXN0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGZpbGUsIGZpbGVMaXN0KTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVQaWN0dXJlQ2FyZFByZXZpZXcoZmlsZSkge1xuICAgICAgICB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gZmlsZS51cmw7XG4gICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJjdXN0b20tZmlsZS10aHVtYm5haWxcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2N1c3RvbS1maWxlLXRodW1ibmFpbFwiPsK2PC9hPiBDdXN0b20gZmlsZSB0aHVtYm5haWw8L2gzPlxuPHA+VXNlIDxjb2RlPnNjb3BlZC1zbG90PC9jb2RlPiB0byBjaGFuZ2UgZGVmYXVsdCB0aHVtYm5haWwgdGVtcGxhdGUuPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIFxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMyAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLXVwbG9hZFxuICBhY3Rpb249JnF1b3Q7IyZxdW90O1xuICBsaXN0LXR5cGU9JnF1b3Q7cGljdHVyZS1jYXJkJnF1b3Q7XG4gIDphdXRvLXVwbG9hZD0mcXVvdDtmYWxzZSZxdW90OyZndDtcbiAgICAmbHQ7aSBzbG90PSZxdW90O2RlZmF1bHQmcXVvdDsgY2xhc3M9JnF1b3Q7ZWwtaWNvbi1wbHVzJnF1b3Q7Jmd0OyZsdDsvaSZndDtcbiAgICAmbHQ7ZGl2IHNsb3Q9JnF1b3Q7ZmlsZSZxdW90OyBzbG90LXNjb3BlPSZxdW90O3tmaWxlfSZxdW90OyZndDtcbiAgICAgICZsdDtpbWdcbiAgICAgICAgY2xhc3M9JnF1b3Q7ZWwtdXBsb2FkLWxpc3RfX2l0ZW0tdGh1bWJuYWlsJnF1b3Q7XG4gICAgICAgIDpzcmM9JnF1b3Q7ZmlsZS51cmwmcXVvdDsgYWx0PSZxdW90OyZxdW90O1xuICAgICAgJmd0O1xuICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ZWwtdXBsb2FkLWxpc3RfX2l0ZW0tYWN0aW9ucyZxdW90OyZndDtcbiAgICAgICAgJmx0O3NwYW5cbiAgICAgICAgICBjbGFzcz0mcXVvdDtlbC11cGxvYWQtbGlzdF9faXRlbS1wcmV2aWV3JnF1b3Q7XG4gICAgICAgICAgQGNsaWNrPSZxdW90O2hhbmRsZVBpY3R1cmVDYXJkUHJldmlldyhmaWxlKSZxdW90O1xuICAgICAgICAmZ3Q7XG4gICAgICAgICAgJmx0O2kgY2xhc3M9JnF1b3Q7ZWwtaWNvbi16b29tLWluJnF1b3Q7Jmd0OyZsdDsvaSZndDtcbiAgICAgICAgJmx0Oy9zcGFuJmd0O1xuICAgICAgICAmbHQ7c3BhblxuICAgICAgICAgIHYtaWY9JnF1b3Q7IWRpc2FibGVkJnF1b3Q7XG4gICAgICAgICAgY2xhc3M9JnF1b3Q7ZWwtdXBsb2FkLWxpc3RfX2l0ZW0tZGVsZXRlJnF1b3Q7XG4gICAgICAgICAgQGNsaWNrPSZxdW90O2hhbmRsZURvd25sb2FkKGZpbGUpJnF1b3Q7XG4gICAgICAgICZndDtcbiAgICAgICAgICAmbHQ7aSBjbGFzcz0mcXVvdDtlbC1pY29uLWRvd25sb2FkJnF1b3Q7Jmd0OyZsdDsvaSZndDtcbiAgICAgICAgJmx0Oy9zcGFuJmd0O1xuICAgICAgICAmbHQ7c3BhblxuICAgICAgICAgIHYtaWY9JnF1b3Q7IWRpc2FibGVkJnF1b3Q7XG4gICAgICAgICAgY2xhc3M9JnF1b3Q7ZWwtdXBsb2FkLWxpc3RfX2l0ZW0tZGVsZXRlJnF1b3Q7XG4gICAgICAgICAgQGNsaWNrPSZxdW90O2hhbmRsZVJlbW92ZShmaWxlKSZxdW90O1xuICAgICAgICAmZ3Q7XG4gICAgICAgICAgJmx0O2kgY2xhc3M9JnF1b3Q7ZWwtaWNvbi1kZWxldGUmcXVvdDsmZ3Q7Jmx0Oy9pJmd0O1xuICAgICAgICAmbHQ7L3NwYW4mZ3Q7XG4gICAgICAmbHQ7L3NwYW4mZ3Q7XG4gICAgJmx0Oy9kaXYmZ3Q7XG4mbHQ7L2VsLXVwbG9hZCZndDtcbiZsdDtlbC1kaWFsb2cgOnZpc2libGUuc3luYz0mcXVvdDtkaWFsb2dWaXNpYmxlJnF1b3Q7Jmd0O1xuICAmbHQ7aW1nIHdpZHRoPSZxdW90OzEwMCUmcXVvdDsgOnNyYz0mcXVvdDtkaWFsb2dJbWFnZVVybCZxdW90OyBhbHQ9JnF1b3Q7JnF1b3Q7Jmd0O1xuJmx0Oy9lbC1kaWFsb2cmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRpYWxvZ0ltYWdlVXJsOiAnJyxcbiAgICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsXG4gICAgICAgIGRpc2FibGVkOiBmYWxzZVxuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGhhbmRsZVJlbW92ZShmaWxlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGZpbGUpO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZVBpY3R1cmVDYXJkUHJldmlldyhmaWxlKSB7XG4gICAgICAgIHRoaXMuZGlhbG9nSW1hZ2VVcmwgPSBmaWxlLnVybDtcbiAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVEb3dubG9hZChmaWxlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGZpbGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwibGlzdGUtZGUtZmljaGllcnMtYXZlYy1taW5pYXR1cmVzXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNsaXN0ZS1kZS1maWNoaWVycy1hdmVjLW1pbmlhdHVyZXNcIj7CtjwvYT4gTGlzdGUgZGUgZmljaGllcnMgYXZlYyBtaW5pYXR1cmVzPC9oMz5cbjxkZW1vLWJsb2NrPlxuICAgICAgICBcbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzQgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDtlbC11cGxvYWRcbiAgY2xhc3M9JnF1b3Q7dXBsb2FkLWRlbW8mcXVvdDtcbiAgYWN0aW9uPSZxdW90O2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cy8mcXVvdDtcbiAgOm9uLXByZXZpZXc9JnF1b3Q7aGFuZGxlUHJldmlldyZxdW90O1xuICA6b24tcmVtb3ZlPSZxdW90O2hhbmRsZVJlbW92ZSZxdW90O1xuICA6ZmlsZS1saXN0PSZxdW90O2ZpbGVMaXN0JnF1b3Q7XG4gIGxpc3QtdHlwZT0mcXVvdDtwaWN0dXJlJnF1b3Q7Jmd0O1xuICAmbHQ7ZWwtYnV0dG9uIHNpemU9JnF1b3Q7c21hbGwmcXVvdDsgdHlwZT0mcXVvdDtwcmltYXJ5JnF1b3Q7Jmd0O0NsaXF1ZXIgcG91ciBlbnZveWVyJmx0Oy9lbC1idXR0b24mZ3Q7XG4gICZsdDtkaXYgc2xvdD0mcXVvdDt0aXAmcXVvdDsgY2xhc3M9JnF1b3Q7ZWwtdXBsb2FkX190aXAmcXVvdDsmZ3Q7RmljaGllcnMganBnL3BuZyBhdmVjIHVuZSB0YWlsbGUgaW5mw6lyaWV1cmUgw6AgNTAwa2ImbHQ7L2RpdiZndDtcbiZsdDsvZWwtdXBsb2FkJmd0O1xuJmx0O3NjcmlwdCZndDtcbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWxlTGlzdDogW3tuYW1lOiAnZm9vZC5qcGVnJywgdXJsOiAnaHR0cHM6Ly9mdXNzMTAuZWxlbWVjZG4uY29tLzMvNjMvNGU3ZjNhMTU0MjliZmRhOTliY2U0MmExOGNkZDFqcGVnLmpwZWc/aW1hZ2VNb2dyMi90aHVtYm5haWwvMzYweDM2MC9mb3JtYXQvd2VicC9xdWFsaXR5LzEwMCd9LCB7bmFtZTogJ2Zvb2QyLmpwZWcnLCB1cmw6ICdodHRwczovL2Z1c3MxMC5lbGVtZWNkbi5jb20vMy82My80ZTdmM2ExNTQyOWJmZGE5OWJjZTQyYTE4Y2RkMWpwZWcuanBlZz9pbWFnZU1vZ3IyL3RodW1ibmFpbC8zNjB4MzYwL2Zvcm1hdC93ZWJwL3F1YWxpdHkvMTAwJ31dXG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgaGFuZGxlUmVtb3ZlKGZpbGUsIGZpbGVMaXN0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGZpbGUsIGZpbGVMaXN0KTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVQcmV2aWV3KGZpbGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coZmlsZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJjb250cm9sZS1kZS1sYS1saXN0ZS1kZS1maWNoaWVyc1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjY29udHJvbGUtZGUtbGEtbGlzdGUtZGUtZmljaGllcnNcIj7CtjwvYT4gQ29udHLDtGxlIGRlIGxhIGxpc3RlIGRlIGZpY2hpZXJzPC9oMz5cbjxwPlV0aWxpc2V6IDxjb2RlPm9uLWNoYW5nZTwvY29kZT4gcG91ciBjb250csO0bGVyIGxlIGNvbXBvcnRlbWVudCBkZSBsYSBsaXN0ZSBkZSBmaWNoaWVycy48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgXG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW81IC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtdXBsb2FkXG4gIGNsYXNzPSZxdW90O3VwbG9hZC1kZW1vJnF1b3Q7XG4gIGFjdGlvbj0mcXVvdDtodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJnF1b3Q7XG4gIDpvbi1jaGFuZ2U9JnF1b3Q7aGFuZGxlQ2hhbmdlJnF1b3Q7XG4gIDpmaWxlLWxpc3Q9JnF1b3Q7ZmlsZUxpc3QmcXVvdDsmZ3Q7XG4gICZsdDtlbC1idXR0b24gc2l6ZT0mcXVvdDtzbWFsbCZxdW90OyB0eXBlPSZxdW90O3ByaW1hcnkmcXVvdDsmZ3Q7Q2xpcXVlciBwb3VyIGVudm95ZXImbHQ7L2VsLWJ1dHRvbiZndDtcbiAgJmx0O2RpdiBzbG90PSZxdW90O3RpcCZxdW90OyBjbGFzcz0mcXVvdDtlbC11cGxvYWRfX3RpcCZxdW90OyZndDtGaWNoaWVycyBqcGcvcG5nIGF2ZWMgdW5lIHRhaWxsZSBpbmbDqXJpZXVyZSDDoCA1MDBrYiZsdDsvZGl2Jmd0O1xuJmx0Oy9lbC11cGxvYWQmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZpbGVMaXN0OiBbe1xuICAgICAgICAgIG5hbWU6ICdmb29kLmpwZWcnLFxuICAgICAgICAgIHVybDogJ2h0dHBzOi8vZnVzczEwLmVsZW1lY2RuLmNvbS8zLzYzLzRlN2YzYTE1NDI5YmZkYTk5YmNlNDJhMThjZGQxanBlZy5qcGVnP2ltYWdlTW9ncjIvdGh1bWJuYWlsLzM2MHgzNjAvZm9ybWF0L3dlYnAvcXVhbGl0eS8xMDAnXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiAnZm9vZDIuanBlZycsXG4gICAgICAgICAgdXJsOiAnaHR0cHM6Ly9mdXNzMTAuZWxlbWVjZG4uY29tLzMvNjMvNGU3ZjNhMTU0MjliZmRhOTliY2U0MmExOGNkZDFqcGVnLmpwZWc/aW1hZ2VNb2dyMi90aHVtYm5haWwvMzYweDM2MC9mb3JtYXQvd2VicC9xdWFsaXR5LzEwMCdcbiAgICAgICAgfV1cbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBoYW5kbGVDaGFuZ2UoZmlsZSwgZmlsZUxpc3QpIHtcbiAgICAgICAgdGhpcy5maWxlTGlzdCA9IGZpbGVMaXN0LnNsaWNlKC0zKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiZsdDsvc2NyaXB0Jmd0O1xuPC9jb2RlPjwvcHJlPjwvdGVtcGxhdGU+PC9kZW1vLWJsb2NrPjxoMyBpZD1cImVudm9pLWVuLWRlcG9zYW50XCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNlbnZvaS1lbi1kZXBvc2FudFwiPsK2PC9hPiBFbnZvaSBlbiBkw6lwb3NhbnQ8L2gzPlxuPHA+Vm91cyBwb3V2ZXogZMOpcG9zZXIgbGVzIGZpY2hpZXJzIHBhciBkcmFnJ24gZHJvcCBzdXIgbCdlc3BhY2UgZMOpZGnDqS48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgXG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW82IC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtdXBsb2FkXG4gIGNsYXNzPSZxdW90O3VwbG9hZC1kZW1vJnF1b3Q7XG4gIGRyYWdcbiAgYWN0aW9uPSZxdW90O2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cy8mcXVvdDtcbiAgOm9uLXByZXZpZXc9JnF1b3Q7aGFuZGxlUHJldmlldyZxdW90O1xuICA6b24tcmVtb3ZlPSZxdW90O2hhbmRsZVJlbW92ZSZxdW90O1xuICA6ZmlsZS1saXN0PSZxdW90O2ZpbGVMaXN0JnF1b3Q7XG4gIG11bHRpcGxlJmd0O1xuICAmbHQ7aSBjbGFzcz0mcXVvdDtlbC1pY29uLXVwbG9hZCZxdW90OyZndDsmbHQ7L2kmZ3Q7XG4gICZsdDtkaXYgY2xhc3M9JnF1b3Q7ZWwtdXBsb2FkX190ZXh0JnF1b3Q7Jmd0O0TDqXBvc2VyIGxlcyBmaWNoaWVycyBpY2kgb3UmbHQ7ZW0mZ3Q7Y2xpcXVleiBwb3VyIGVudm95ZXImbHQ7L2VtJmd0OyZsdDsvZGl2Jmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2VsLXVwbG9hZF9fdGlwJnF1b3Q7IHNsb3Q9JnF1b3Q7dGlwJnF1b3Q7Jmd0O0ZpY2hpZXJzIGpwZy9wbmcgYXZlYyB1bmUgdGFpbGxlIGluZsOpcmlldXJlIMOgIDUwMGtiJmx0Oy9kaXYmZ3Q7XG4mbHQ7L2VsLXVwbG9hZCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJlbnZvaS1tYW51ZWxcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2Vudm9pLW1hbnVlbFwiPsK2PC9hPiBFbnZvaSBtYW51ZWw8L2gzPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIFxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNyAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLXVwbG9hZFxuICBjbGFzcz0mcXVvdDt1cGxvYWQtZGVtbyZxdW90O1xuICByZWY9JnF1b3Q7dXBsb2FkJnF1b3Q7XG4gIGFjdGlvbj0mcXVvdDtodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJnF1b3Q7XG4gIDphdXRvLXVwbG9hZD0mcXVvdDtmYWxzZSZxdW90OyZndDtcbiAgJmx0O2VsLWJ1dHRvbiBzbG90PSZxdW90O3RyaWdnZXImcXVvdDsgc2l6ZT0mcXVvdDtzbWFsbCZxdW90OyB0eXBlPSZxdW90O3ByaW1hcnkmcXVvdDsmZ3Q7Q2hvaXNpciB1biBmaWNoaWVyJmx0Oy9lbC1idXR0b24mZ3Q7XG4gICZsdDtlbC1idXR0b24gc3R5bGU9JnF1b3Q7bWFyZ2luLWxlZnQ6IDEwcHg7JnF1b3Q7IHNpemU9JnF1b3Q7c21hbGwmcXVvdDsgdHlwZT0mcXVvdDtzdWNjZXNzJnF1b3Q7IEBjbGljaz0mcXVvdDtzdWJtaXRVcGxvYWQmcXVvdDsmZ3Q7RW52b3llciBhdSBzZXJ2ZXVyJmx0Oy9lbC1idXR0b24mZ3Q7XG4gICZsdDtkaXYgY2xhc3M9JnF1b3Q7ZWwtdXBsb2FkX190aXAmcXVvdDsgc2xvdD0mcXVvdDt0aXAmcXVvdDsmZ3Q7RmljaGllcnMganBnL3BuZyBhdmVjIHVuZSB0YWlsbGUgaW5mw6lyaWV1cmUgw6AgNTAwa2ImbHQ7L2RpdiZndDtcbiZsdDsvZWwtdXBsb2FkJmd0O1xuJmx0O3NjcmlwdCZndDtcbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIG1ldGhvZHM6IHtcbiAgICAgIHN1Ym1pdFVwbG9hZCgpIHtcbiAgICAgICAgdGhpcy4kcmVmcy51cGxvYWQuc3VibWl0KCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJhdHRyaWJ1dHNcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2F0dHJpYnV0c1wiPsK2PC9hPiBBdHRyaWJ1dHM8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPkF0dHJpYnV0PC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48dGg+VHlwZTwvdGg+XG48dGg+VmFsZXVycyBhY2NlcHTDqWVzPC90aD5cbjx0aD5Ew6lmYXV0PC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPmFjdGlvbjwvdGQ+XG48dGQ+UmVxdWlzLCBsJ3VybCBkZSByZXF1w6p0ZS48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5oZWFkZXJzPC90ZD5cbjx0ZD5MZXMgaGVhZGVycyBkZSBsYSByZXF1w6p0ZS48L3RkPlxuPHRkPm9iamVjdDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5tdWx0aXBsZTwvdGQ+XG48dGQ+U2kgZW52b3llciBkZSBtdWx0aXBsZXMgZmljaGllcnMgZXN0IGF1dG9yaXPDqS48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZGF0YTwvdGQ+XG48dGQ+T3B0aW9ucyBhZGRpdGlvbm5lbGxlcyBkZSBsYSByZXF1w6p0ZS48L3RkPlxuPHRkPm9iamVjdDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5uYW1lPC90ZD5cbjx0ZD5JZGVudGlmaWFudCBkdSBmaWNoaWVyLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZpbGU8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD53aXRoLWNyZWRlbnRpYWxzPC90ZD5cbjx0ZD5TaSBsZXMgY29va2llcyBzb250IGF1c3NpIGVudm95w6lzLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNob3ctZmlsZS1saXN0PC90ZD5cbjx0ZD5TaSBsYSBsaXN0ZSBkZXMgZmljaGllcnMgZXN0IGFmZmljaMOpZS48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+dHJ1ZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmRyYWc8L3RkPlxuPHRkPlNpIGxlIG1vZGUgZHJhZyduIGRyb3AgZXN0IGFjdGl2w6kuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+YWNjZXB0PC90ZD5cbjx0ZD48YSBocmVmPVwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I2F0dHItYWNjZXB0XCI+VHlwZXMgZGUgZmljaGllcnM8L2E+IGFjY2VwdMOpcywgbmUgbWFyY2hlIHBhcyBzaSA8Y29kZT50aHVtYm5haWwtbW9kZTwvY29kZT4gZXN0IDxjb2RlPnRydWU8L2NvZGU+LjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm9uLXByZXZpZXc8L3RkPlxuPHRkPkZvbmN0aW9uIHBvdXIgcXVhbmQgbGUgZmljaGllciBlc3QgY2xpcXXDqS48L3RkPlxuPHRkPmZ1bmN0aW9uKGZpbGUpPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm9uLXJlbW92ZTwvdGQ+XG48dGQ+Rm9uY3Rpb24gcG91ciBxdWFuZCBkZXMgZmljaGllcnMgc29udCBzdXBwcmltw6lzLjwvdGQ+XG48dGQ+ZnVuY3Rpb24oZmlsZSwgZmlsZUxpc3QpPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm9uLXN1Y2Nlc3M8L3RkPlxuPHRkPkZvbmN0aW9uIHBvdXIgcXVhbmQgbCd1cGxvYWQgYSByw6l1c3NpLjwvdGQ+XG48dGQ+ZnVuY3Rpb24ocmVzcG9uc2UsIGZpbGUsIGZpbGVMaXN0KTwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5vbi1lcnJvcjwvdGQ+XG48dGQ+Rm9uY3Rpb24gcG91ciBxdWFuZCBsJ3VwbG9hZCByZW52b2kgdW5lIGVycmV1ci48L3RkPlxuPHRkPmZ1bmN0aW9uKGVyciwgZmlsZSwgZmlsZUxpc3QpPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm9uLXByb2dyZXNzPC90ZD5cbjx0ZD5Gb25jdGlvbiBwb3VyIHF1YW5kIGwndXBsb2FkIGVzdCBlbiBjb3Vycy48L3RkPlxuPHRkPmZ1bmN0aW9uKGV2ZW50LCBmaWxlLCBmaWxlTGlzdCk8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+b24tY2hhbmdlPC90ZD5cbjx0ZD5Gb25jdGlvbiBwb3VyIHF1YW5kIGxlIHN0YXR1dCBkJ3VuIGZpY2hpZXIgY2hhbmdlIChzw6lsZWN0aW9uLCB1cGxvYWQsIGVycmV1ci4uLikuPC90ZD5cbjx0ZD5mdW5jdGlvbihmaWxlLCBmaWxlTGlzdCk8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+YmVmb3JlLXVwbG9hZDwvdGQ+XG48dGQ+Rm9uY3Rpb24gcG91ciBhdmFudCBsJ3VwbG9hZC4gU2kgPGNvZGU+ZmFsc2U8L2NvZGU+IGVzdCByZXRvdXJuw6kgb3UgdW5lIDxjb2RlPlByb21pc2U8L2NvZGU+IHF1aSBlc3QgZW5zdWl0ZSByZWpldMOpZSwgbCdlbnZvaSBzZXJhIGFubnVsw6kuPC90ZD5cbjx0ZD5mdW5jdGlvbihmaWxlKTwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5iZWZvcmUtcmVtb3ZlPC90ZD5cbjx0ZD5Gb25jdGlvbiBwb3VyIGF2YW50IGxhIHN1cHByZXNzaW9uIGRlIGZpY2hpZXJzLiBTaSA8Y29kZT5mYWxzZTwvY29kZT4gZXN0IHJldG91cm7DqSBvdSB1bmUgPGNvZGU+UHJvbWlzZTwvY29kZT4gcXVpIGVzdCBlbnN1aXRlIHJlamV0w6llLCBsYSBzdXBwcmVzc2lvbiBzZXJhIGVuc3VpdGUgYW5udWzDqWUuPC90ZD5cbjx0ZD5mdW5jdGlvbihmaWxlLCBmaWxlTGlzdCk8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dGh1bWJuYWlsLW1vZGU8L3RkPlxuPHRkPlNpIGxlcyBtaW5pYXR1cmVzIHNvbnQgYWZmaWNow6llcy48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5maWxlLWxpc3Q8L3RkPlxuPHRkPkxlcyBmaWNoaWVycyBlbnZvecOpIHBhciBkw6lmYXV0LCBlLmcuIFt7bmFtZTogJ2Zvb2QuanBnJywgdXJsOiAnaHR0cHM6Ly94eHguY2RuLmNvbS94eHguanBnJ31dPC90ZD5cbjx0ZD5hcnJheTwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5bXTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmxpc3QtdHlwZTwvdGQ+XG48dGQ+TGUgdHlwZSBkZSBsaXN0ZSBkZSBmaWNoaWVycy48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+dGV4dC9waWN0dXJlL3BpY3R1cmUtY2FyZDwvdGQ+XG48dGQ+dGV4dDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmF1dG8tdXBsb2FkPC90ZD5cbjx0ZD5TaSBsJ2Vudm9pIGVzdCBhdXRvbWF0aXF1ZS48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+dHJ1ZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmh0dHAtcmVxdWVzdDwvdGQ+XG48dGQ+w4ljcmFzZSBsZSB4aHIgcGFyIGTDqWZhdXQsIGFmaW4gcXVlIHZvdXMgcHVpc3NpZXogaW1wbMOpbWVudGVyIHZvdHJlIHByb3ByZSBmb25jdGlvbiBkJ2Vudm9pLjwvdGQ+XG48dGQ+ZnVuY3Rpb248L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZGlzYWJsZWQ8L3RkPlxuPHRkPlNpIGxlIGNvbXBvc2FudCBlc3QgZMOpc2FjdGl2w6kuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bGltaXQ8L3RkPlxuPHRkPk5vbWJyZSBtYXhpbXVtIGQnZW52b2kgYXV0b3Jpc8Opcy48L3RkPlxuPHRkPm51bWJlcjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5vbi1leGNlZWQ8L3RkPlxuPHRkPkZvbmN0aW9uIHBvdXIgcXVhbmQgbGEgbGltaXRlIGQnZW52b2kgZXN0IGTDqXBhc3PDqWUuPC90ZD5cbjx0ZD5mdW5jdGlvbihmaWxlcywgZmlsZUxpc3QpPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPi08L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwic2xvdFwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjc2xvdFwiPsK2PC9hPiBTbG90PC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5Ob208L3RoPlxuPHRoPkRlc2NyaXB0aW9uPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnRyaWdnZXI8L3RkPlxuPHRkPkxlIGNvbnRlbnUgcXVpIGTDqWNsZW5jaGUgbGUgRGlhbG9nIGR1IGZpY2hpZXIuPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dGlwPC90ZD5cbjx0ZD5MZSBjb250ZW51IGRlcyB0aXBzLjwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJtZXRob2Rlc1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjbWV0aG9kZXNcIj7CtjwvYT4gTcOpdGhvZGVzPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5Nw6l0aG9kZTwvdGg+XG48dGg+RGVzY3JpcHRpb248L3RoPlxuPHRoPlBhcmFtw6h0cmVzPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPmNsZWFyRmlsZXM8L3RkPlxuPHRkPkVmZmFjZSBsYSBsaXN0ZSAobm9uIHN1cHBvcnTDqSBkYW5zIDxjb2RlPmJlZm9yZS11cGxvYWQ8L2NvZGU+KS48L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmFib3J0PC90ZD5cbjx0ZD5Bbm51bGUgbCdlbnZvaSBlbiBjb3Vycy48L3RkPlxuPHRkPu+8iCBmaWxlOiBmaWxlTGlzdCdzIGl0ZW0g77yJPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+c3VibWl0PC90ZD5cbjx0ZD5FbnZvaSBsYSBsaXN0ZSBkZSBmaWNoaWVycyBtYW51ZWxsZW1lbnQuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuXG4gICAgICA8L3NlY3Rpb24+XG4gICAgPC90ZW1wbGF0ZT5cbiAgICA8c2NyaXB0PlxuICAgICAgaW1wb3J0IGhsanMgZnJvbSAnaGlnaGxpZ2h0LmpzJ1xuICAgICAgaW1wb3J0ICogYXMgVnVlIGZyb20gXCJ2dWVcIlxuICAgICAgZXhwb3J0IGRlZmF1bHQge1xuICAgICAgICBuYW1lOiAnY29tcG9uZW50LWRvYycsXG4gICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICBcImVsZW1lbnQtZGVtbzBcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgY3JlYXRlVGV4dFZOb2RlOiBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eDogX3dpdGhDdHgsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1idXR0b25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF91cGxvYWQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXVwbG9hZFwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF91cGxvYWQsIHtcbiAgICBjbGFzczogXCJ1cGxvYWQtZGVtb1wiLFxuICAgIGFjdGlvbjogXCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvXCIsXG4gICAgXCJvbi1wcmV2aWV3XCI6IF9jdHguaGFuZGxlUHJldmlldyxcbiAgICBcIm9uLXJlbW92ZVwiOiBfY3R4LmhhbmRsZVJlbW92ZSxcbiAgICBcImJlZm9yZS1yZW1vdmVcIjogX2N0eC5iZWZvcmVSZW1vdmUsXG4gICAgbXVsdGlwbGU6IFwiXCIsXG4gICAgbGltaXQ6IDMsXG4gICAgXCJvbi1leGNlZWRcIjogX2N0eC5oYW5kbGVFeGNlZWQsXG4gICAgXCJmaWxlLWxpc3RcIjogX2N0eC5maWxlTGlzdFxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgIHNpemU6IFwic21hbGxcIixcbiAgICAgICAgdHlwZTogXCJwcmltYXJ5XCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJDbGlxdWVyIHBvdXIgZW52b3llclwiKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwge1xuICAgICAgICBzbG90OiBcInRpcFwiLFxuICAgICAgICBjbGFzczogXCJlbC11cGxvYWRfX3RpcFwiXG4gICAgICB9LCBcIkZpY2hpZXJzIGpwZy9wbmcgYXZlYyB1bmUgdGFpbGxlIGluZsOpcmlldXJlIMOgIDUwMGtiXCIpXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJvbi1wcmV2aWV3XCIsIFwib24tcmVtb3ZlXCIsIFwiYmVmb3JlLXJlbW92ZVwiLCBcIm9uLWV4Y2VlZFwiLCBcImZpbGUtbGlzdFwiXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZpbGVMaXN0OiBbe25hbWU6ICdmb29kLmpwZWcnLCB1cmw6ICdodHRwczovL2Z1c3MxMC5lbGVtZWNkbi5jb20vMy82My80ZTdmM2ExNTQyOWJmZGE5OWJjZTQyYTE4Y2RkMWpwZWcuanBlZz9pbWFnZU1vZ3IyL3RodW1ibmFpbC8zNjB4MzYwL2Zvcm1hdC93ZWJwL3F1YWxpdHkvMTAwJ30sIHtuYW1lOiAnZm9vZDIuanBlZycsIHVybDogJ2h0dHBzOi8vZnVzczEwLmVsZW1lY2RuLmNvbS8zLzYzLzRlN2YzYTE1NDI5YmZkYTk5YmNlNDJhMThjZGQxanBlZy5qcGVnP2ltYWdlTW9ncjIvdGh1bWJuYWlsLzM2MHgzNjAvZm9ybWF0L3dlYnAvcXVhbGl0eS8xMDAnfV1cbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBoYW5kbGVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHtcbiAgICAgICAgY29uc29sZS5sb2coZmlsZSwgZmlsZUxpc3QpO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZVByZXZpZXcoZmlsZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhmaWxlKTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVFeGNlZWQoZmlsZXMsIGZpbGVMaXN0KSB7XG4gICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZyhgTGEgbGltaXRlIGVzdCAzLCB2b3VzIGF2ZXogY2hvaXNpICR7ZmlsZXMubGVuZ3RofSBmaWNoaWVycywgc29pdCAke2ZpbGVzLmxlbmd0aCArIGZpbGVMaXN0Lmxlbmd0aH0gYXUgdG90YWwuYCk7XG4gICAgICB9LFxuICAgICAgYmVmb3JlUmVtb3ZlKGZpbGUsIGZpbGVMaXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLiRjb25maXJtKGBTdXBwcmltZXIgbGUgdHJhbnNmZXJ0IGRlICR7IGZpbGUubmFtZSB9ID9gKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW8xXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlOiBfY3JlYXRlQ29tbWVudFZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eDogX3dpdGhDdHggfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX3VwbG9hZCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtdXBsb2FkXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX3VwbG9hZCwge1xuICAgIGNsYXNzOiBcImF2YXRhci11cGxvYWRlclwiLFxuICAgIGFjdGlvbjogXCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvXCIsXG4gICAgXCJzaG93LWZpbGUtbGlzdFwiOiBmYWxzZSxcbiAgICBcIm9uLXN1Y2Nlc3NcIjogX2N0eC5oYW5kbGVBdmF0YXJTdWNjZXNzLFxuICAgIFwiYmVmb3JlLXVwbG9hZFwiOiBfY3R4LmJlZm9yZUF2YXRhclVwbG9hZFxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgKF9jdHguaW1hZ2VVcmwpXG4gICAgICAgID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKFwiaW1nXCIsIHtcbiAgICAgICAgICAgIGtleTogMCxcbiAgICAgICAgICAgIHNyYzogX2N0eC5pbWFnZVVybCxcbiAgICAgICAgICAgIGNsYXNzOiBcImF2YXRhclwiXG4gICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wic3JjXCJdKSlcbiAgICAgICAgOiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soXCJpXCIsIHtcbiAgICAgICAgICAgIGtleTogMSxcbiAgICAgICAgICAgIGNsYXNzOiBcImVsLWljb24tcGx1cyBhdmF0YXItdXBsb2FkZXItaWNvblwiXG4gICAgICAgICAgfSkpXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJvbi1zdWNjZXNzXCIsIFwiYmVmb3JlLXVwbG9hZFwiXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGltYWdlVXJsOiAnJ1xuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGhhbmRsZUF2YXRhclN1Y2Nlc3MocmVzLCBmaWxlKSB7XG4gICAgICAgIHRoaXMuaW1hZ2VVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUucmF3KTtcbiAgICAgIH0sXG4gICAgICBiZWZvcmVBdmF0YXJVcGxvYWQoZmlsZSkge1xuICAgICAgICBjb25zdCBpc0pQRyA9IGZpbGUudHlwZSA9PT0gJ2ltYWdlL2pwZWcnO1xuICAgICAgICBjb25zdCBpc0x0Mk0gPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNCA8IDI7XG5cbiAgICAgICAgaWYgKCFpc0pQRykge1xuICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ0xcXCdhdmF0YXIgZG9pdCDDqnRyZSBlbiBKUEcgIScpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNMdDJNKSB7XG4gICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcignTFxcJ2F2YXRhciBuZSBwZXV0IHBhcyBleGPDqWRlciAyTWIgIScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpc0pQRyAmJiBpc0x0Mk07XG4gICAgICB9XG4gICAgfVxuICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vMlwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eDogX3dpdGhDdHgsIEZyYWdtZW50OiBfRnJhZ21lbnQsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfdXBsb2FkID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC11cGxvYWRcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9kaWFsb2cgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWRpYWxvZ1wiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfdXBsb2FkLCB7XG4gICAgICBhY3Rpb246IFwiaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzL1wiLFxuICAgICAgXCJsaXN0LXR5cGVcIjogXCJwaWN0dXJlLWNhcmRcIixcbiAgICAgIFwib24tcHJldmlld1wiOiBfY3R4LmhhbmRsZVBpY3R1cmVDYXJkUHJldmlldyxcbiAgICAgIFwib24tcmVtb3ZlXCI6IF9jdHguaGFuZGxlUmVtb3ZlXG4gICAgfSwge1xuICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICBfY3JlYXRlVk5vZGUoXCJpXCIsIHsgY2xhc3M6IFwiZWwtaWNvbi1wbHVzXCIgfSlcbiAgICAgIF0pLFxuICAgICAgXzogMVxuICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm9uLXByZXZpZXdcIiwgXCJvbi1yZW1vdmVcIl0pLFxuICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RpYWxvZywgeyB2aXNpYmxlOiBfY3R4LmRpYWxvZ1Zpc2libGUgfSwge1xuICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICBfY3JlYXRlVk5vZGUoXCJpbWdcIiwge1xuICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICBzcmM6IF9jdHguZGlhbG9nSW1hZ2VVcmwsXG4gICAgICAgICAgYWx0OiBcIlwiXG4gICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcInNyY1wiXSlcbiAgICAgIF0pLFxuICAgICAgXzogMVxuICAgIH0sIDggLyogUFJPUFMgKi8sIFtcInZpc2libGVcIl0pXG4gIF0sIDY0IC8qIFNUQUJMRV9GUkFHTUVOVCAqLykpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRpYWxvZ0ltYWdlVXJsOiAnJyxcbiAgICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2VcbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBoYW5kbGVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHtcbiAgICAgICAgY29uc29sZS5sb2coZmlsZSwgZmlsZUxpc3QpO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZVBpY3R1cmVDYXJkUHJldmlldyhmaWxlKSB7XG4gICAgICAgIHRoaXMuZGlhbG9nSW1hZ2VVcmwgPSBmaWxlLnVybDtcbiAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW8zXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlOiBfY3JlYXRlQ29tbWVudFZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eDogX3dpdGhDdHgsIEZyYWdtZW50OiBfRnJhZ21lbnQgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX3VwbG9hZCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtdXBsb2FkXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfZGlhbG9nID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1kaWFsb2dcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW1xuICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3VwbG9hZCwge1xuICAgICAgYWN0aW9uOiBcIiNcIixcbiAgICAgIFwibGlzdC10eXBlXCI6IFwicGljdHVyZS1jYXJkXCIsXG4gICAgICBcImF1dG8tdXBsb2FkXCI6IGZhbHNlXG4gICAgfSwge1xuICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICBfY3JlYXRlVk5vZGUoXCJpXCIsIHtcbiAgICAgICAgICBzbG90OiBcImRlZmF1bHRcIixcbiAgICAgICAgICBjbGFzczogXCJlbC1pY29uLXBsdXNcIlxuICAgICAgICB9KSxcbiAgICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHtcbiAgICAgICAgICBzbG90OiBcImZpbGVcIixcbiAgICAgICAgICBcInNsb3Qtc2NvcGVcIjogXCJ7ZmlsZX1cIlxuICAgICAgICB9LCBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKFwiaW1nXCIsIHtcbiAgICAgICAgICAgIGNsYXNzOiBcImVsLXVwbG9hZC1saXN0X19pdGVtLXRodW1ibmFpbFwiLFxuICAgICAgICAgICAgc3JjOiBfY3R4LmZpbGUudXJsLFxuICAgICAgICAgICAgYWx0OiBcIlwiXG4gICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wic3JjXCJdKSxcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZWwtdXBsb2FkLWxpc3RfX2l0ZW0tYWN0aW9uc1wiIH0sIFtcbiAgICAgICAgICAgIF9jcmVhdGVWTm9kZShcInNwYW5cIiwge1xuICAgICAgICAgICAgICBjbGFzczogXCJlbC11cGxvYWQtbGlzdF9faXRlbS1wcmV2aWV3XCIsXG4gICAgICAgICAgICAgIG9uQ2xpY2s6ICRldmVudCA9PiAoX2N0eC5oYW5kbGVQaWN0dXJlQ2FyZFByZXZpZXcoX2N0eC5maWxlKSlcbiAgICAgICAgICAgIH0sIFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKFwiaVwiLCB7IGNsYXNzOiBcImVsLWljb24tem9vbS1pblwiIH0pXG4gICAgICAgICAgICBdLCA4IC8qIFBST1BTICovLCBbXCJvbkNsaWNrXCJdKSxcbiAgICAgICAgICAgICghX2N0eC5kaXNhYmxlZClcbiAgICAgICAgICAgICAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soXCJzcGFuXCIsIHtcbiAgICAgICAgICAgICAgICAgIGtleTogMCxcbiAgICAgICAgICAgICAgICAgIGNsYXNzOiBcImVsLXVwbG9hZC1saXN0X19pdGVtLWRlbGV0ZVwiLFxuICAgICAgICAgICAgICAgICAgb25DbGljazogJGV2ZW50ID0+IChfY3R4LmhhbmRsZURvd25sb2FkKF9jdHguZmlsZSkpXG4gICAgICAgICAgICAgICAgfSwgW1xuICAgICAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKFwiaVwiLCB7IGNsYXNzOiBcImVsLWljb24tZG93bmxvYWRcIiB9KVxuICAgICAgICAgICAgICAgIF0sIDggLyogUFJPUFMgKi8sIFtcIm9uQ2xpY2tcIl0pKVxuICAgICAgICAgICAgICA6IF9jcmVhdGVDb21tZW50Vk5vZGUoXCJ2LWlmXCIsIHRydWUpLFxuICAgICAgICAgICAgKCFfY3R4LmRpc2FibGVkKVxuICAgICAgICAgICAgICA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhcInNwYW5cIiwge1xuICAgICAgICAgICAgICAgICAga2V5OiAxLFxuICAgICAgICAgICAgICAgICAgY2xhc3M6IFwiZWwtdXBsb2FkLWxpc3RfX2l0ZW0tZGVsZXRlXCIsXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrOiAkZXZlbnQgPT4gKF9jdHguaGFuZGxlUmVtb3ZlKF9jdHguZmlsZSkpXG4gICAgICAgICAgICAgICAgfSwgW1xuICAgICAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKFwiaVwiLCB7IGNsYXNzOiBcImVsLWljb24tZGVsZXRlXCIgfSlcbiAgICAgICAgICAgICAgICBdLCA4IC8qIFBST1BTICovLCBbXCJvbkNsaWNrXCJdKSlcbiAgICAgICAgICAgICAgOiBfY3JlYXRlQ29tbWVudFZOb2RlKFwidi1pZlwiLCB0cnVlKVxuICAgICAgICAgIF0pXG4gICAgICAgIF0pXG4gICAgICBdKSxcbiAgICAgIF86IDFcbiAgICB9KSxcbiAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9kaWFsb2csIHsgdmlzaWJsZTogX2N0eC5kaWFsb2dWaXNpYmxlIH0sIHtcbiAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgX2NyZWF0ZVZOb2RlKFwiaW1nXCIsIHtcbiAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgc3JjOiBfY3R4LmRpYWxvZ0ltYWdlVXJsLFxuICAgICAgICAgIGFsdDogXCJcIlxuICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJzcmNcIl0pXG4gICAgICBdKSxcbiAgICAgIF86IDFcbiAgICB9LCA4IC8qIFBST1BTICovLCBbXCJ2aXNpYmxlXCJdKVxuICBdLCA2NCAvKiBTVEFCTEVfRlJBR01FTlQgKi8pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaWFsb2dJbWFnZVVybDogJycsXG4gICAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2VcbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBoYW5kbGVSZW1vdmUoZmlsZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhmaWxlKTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVQaWN0dXJlQ2FyZFByZXZpZXcoZmlsZSkge1xuICAgICAgICB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gZmlsZS51cmw7XG4gICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7XG4gICAgICB9LFxuICAgICAgaGFuZGxlRG93bmxvYWQoZmlsZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhmaWxlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW80XCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IGNyZWF0ZVRleHRWTm9kZTogX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHg6IF93aXRoQ3R4LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtYnV0dG9uXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfdXBsb2FkID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC11cGxvYWRcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZWxfdXBsb2FkLCB7XG4gICAgY2xhc3M6IFwidXBsb2FkLWRlbW9cIixcbiAgICBhY3Rpb246IFwiaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzL1wiLFxuICAgIFwib24tcHJldmlld1wiOiBfY3R4LmhhbmRsZVByZXZpZXcsXG4gICAgXCJvbi1yZW1vdmVcIjogX2N0eC5oYW5kbGVSZW1vdmUsXG4gICAgXCJmaWxlLWxpc3RcIjogX2N0eC5maWxlTGlzdCxcbiAgICBcImxpc3QtdHlwZVwiOiBcInBpY3R1cmVcIlxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgIHNpemU6IFwic21hbGxcIixcbiAgICAgICAgdHlwZTogXCJwcmltYXJ5XCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJDbGlxdWVyIHBvdXIgZW52b3llclwiKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwge1xuICAgICAgICBzbG90OiBcInRpcFwiLFxuICAgICAgICBjbGFzczogXCJlbC11cGxvYWRfX3RpcFwiXG4gICAgICB9LCBcIkZpY2hpZXJzIGpwZy9wbmcgYXZlYyB1bmUgdGFpbGxlIGluZsOpcmlldXJlIMOgIDUwMGtiXCIpXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJvbi1wcmV2aWV3XCIsIFwib24tcmVtb3ZlXCIsIFwiZmlsZS1saXN0XCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsZUxpc3Q6IFt7bmFtZTogJ2Zvb2QuanBlZycsIHVybDogJ2h0dHBzOi8vZnVzczEwLmVsZW1lY2RuLmNvbS8zLzYzLzRlN2YzYTE1NDI5YmZkYTk5YmNlNDJhMThjZGQxanBlZy5qcGVnP2ltYWdlTW9ncjIvdGh1bWJuYWlsLzM2MHgzNjAvZm9ybWF0L3dlYnAvcXVhbGl0eS8xMDAnfSwge25hbWU6ICdmb29kMi5qcGVnJywgdXJsOiAnaHR0cHM6Ly9mdXNzMTAuZWxlbWVjZG4uY29tLzMvNjMvNGU3ZjNhMTU0MjliZmRhOTliY2U0MmExOGNkZDFqcGVnLmpwZWc/aW1hZ2VNb2dyMi90aHVtYm5haWwvMzYweDM2MC9mb3JtYXQvd2VicC9xdWFsaXR5LzEwMCd9XVxuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIGhhbmRsZVJlbW92ZShmaWxlLCBmaWxlTGlzdCkge1xuICAgICAgICBjb25zb2xlLmxvZyhmaWxlLCBmaWxlTGlzdCk7XG4gICAgICB9LFxuICAgICAgaGFuZGxlUHJldmlldyhmaWxlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGZpbGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzVcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgY3JlYXRlVGV4dFZOb2RlOiBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eDogX3dpdGhDdHgsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1idXR0b25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF91cGxvYWQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXVwbG9hZFwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF91cGxvYWQsIHtcbiAgICBjbGFzczogXCJ1cGxvYWQtZGVtb1wiLFxuICAgIGFjdGlvbjogXCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvXCIsXG4gICAgXCJvbi1jaGFuZ2VcIjogX2N0eC5oYW5kbGVDaGFuZ2UsXG4gICAgXCJmaWxlLWxpc3RcIjogX2N0eC5maWxlTGlzdFxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgIHNpemU6IFwic21hbGxcIixcbiAgICAgICAgdHlwZTogXCJwcmltYXJ5XCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJDbGlxdWVyIHBvdXIgZW52b3llclwiKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwge1xuICAgICAgICBzbG90OiBcInRpcFwiLFxuICAgICAgICBjbGFzczogXCJlbC11cGxvYWRfX3RpcFwiXG4gICAgICB9LCBcIkZpY2hpZXJzIGpwZy9wbmcgYXZlYyB1bmUgdGFpbGxlIGluZsOpcmlldXJlIMOgIDUwMGtiXCIpXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJvbi1jaGFuZ2VcIiwgXCJmaWxlLWxpc3RcIl0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWxlTGlzdDogW3tcbiAgICAgICAgICBuYW1lOiAnZm9vZC5qcGVnJyxcbiAgICAgICAgICB1cmw6ICdodHRwczovL2Z1c3MxMC5lbGVtZWNkbi5jb20vMy82My80ZTdmM2ExNTQyOWJmZGE5OWJjZTQyYTE4Y2RkMWpwZWcuanBlZz9pbWFnZU1vZ3IyL3RodW1ibmFpbC8zNjB4MzYwL2Zvcm1hdC93ZWJwL3F1YWxpdHkvMTAwJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogJ2Zvb2QyLmpwZWcnLFxuICAgICAgICAgIHVybDogJ2h0dHBzOi8vZnVzczEwLmVsZW1lY2RuLmNvbS8zLzYzLzRlN2YzYTE1NDI5YmZkYTk5YmNlNDJhMThjZGQxanBlZy5qcGVnP2ltYWdlTW9ncjIvdGh1bWJuYWlsLzM2MHgzNjAvZm9ybWF0L3dlYnAvcXVhbGl0eS8xMDAnXG4gICAgICAgIH1dXG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgaGFuZGxlQ2hhbmdlKGZpbGUsIGZpbGVMaXN0KSB7XG4gICAgICAgIHRoaXMuZmlsZUxpc3QgPSBmaWxlTGlzdC5zbGljZSgtMyk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vNlwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4OiBfd2l0aEN0eCwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF91cGxvYWQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXVwbG9hZFwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF91cGxvYWQsIHtcbiAgICBjbGFzczogXCJ1cGxvYWQtZGVtb1wiLFxuICAgIGRyYWc6IFwiXCIsXG4gICAgYWN0aW9uOiBcImh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cy9cIixcbiAgICBcIm9uLXByZXZpZXdcIjogX2N0eC5oYW5kbGVQcmV2aWV3LFxuICAgIFwib24tcmVtb3ZlXCI6IF9jdHguaGFuZGxlUmVtb3ZlLFxuICAgIFwiZmlsZS1saXN0XCI6IF9jdHguZmlsZUxpc3QsXG4gICAgbXVsdGlwbGU6IFwiXCJcbiAgfSwge1xuICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgIF9jcmVhdGVWTm9kZShcImlcIiwgeyBjbGFzczogXCJlbC1pY29uLXVwbG9hZFwiIH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiZWwtdXBsb2FkX190ZXh0XCIgfSwgW1xuICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiRMOpcG9zZXIgbGVzIGZpY2hpZXJzIGljaSBvdVwiKSxcbiAgICAgICAgX2NyZWF0ZVZOb2RlKFwiZW1cIiwgbnVsbCwgXCJjbGlxdWV6IHBvdXIgZW52b3llclwiKVxuICAgICAgXSksXG4gICAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwge1xuICAgICAgICBjbGFzczogXCJlbC11cGxvYWRfX3RpcFwiLFxuICAgICAgICBzbG90OiBcInRpcFwiXG4gICAgICB9LCBcIkZpY2hpZXJzIGpwZy9wbmcgYXZlYyB1bmUgdGFpbGxlIGluZsOpcmlldXJlIMOgIDUwMGtiXCIpXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJvbi1wcmV2aWV3XCIsIFwib24tcmVtb3ZlXCIsIFwiZmlsZS1saXN0XCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHt9XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vN1wiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4OiBfd2l0aEN0eCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9idXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWJ1dHRvblwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3VwbG9hZCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtdXBsb2FkXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX3VwbG9hZCwge1xuICAgIGNsYXNzOiBcInVwbG9hZC1kZW1vXCIsXG4gICAgcmVmOiBcInVwbG9hZFwiLFxuICAgIGFjdGlvbjogXCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvXCIsXG4gICAgXCJhdXRvLXVwbG9hZFwiOiBmYWxzZVxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgIHNsb3Q6IFwidHJpZ2dlclwiLFxuICAgICAgICBzaXplOiBcInNtYWxsXCIsXG4gICAgICAgIHR5cGU6IFwicHJpbWFyeVwiXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiQ2hvaXNpciB1biBmaWNoaWVyXCIpXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwge1xuICAgICAgICBzdHlsZToge1wibWFyZ2luLWxlZnRcIjpcIjEwcHhcIn0sXG4gICAgICAgIHNpemU6IFwic21hbGxcIixcbiAgICAgICAgdHlwZTogXCJzdWNjZXNzXCIsXG4gICAgICAgIG9uQ2xpY2s6IF9jdHguc3VibWl0VXBsb2FkXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiRW52b3llciBhdSBzZXJ2ZXVyXCIpXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJvbkNsaWNrXCJdKSxcbiAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzOiBcImVsLXVwbG9hZF9fdGlwXCIsXG4gICAgICAgIHNsb3Q6IFwidGlwXCJcbiAgICAgIH0sIFwiRmljaGllcnMganBnL3BuZyBhdmVjIHVuZSB0YWlsbGUgaW5mw6lyaWV1cmUgw6AgNTAwa2JcIilcbiAgICBdKSxcbiAgICBfOiAxXG4gIH0sIDUxMiAvKiBORUVEX1BBVENIICovKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBtZXRob2RzOiB7XG4gICAgICBzdWJtaXRVcGxvYWQoKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudXBsb2FkLnN1Ym1pdCgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIDwvc2NyaXB0PlxuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/upload.md?vue&type=template&id=3f75d87e\n");

/***/ })

}]);