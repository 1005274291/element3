(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[184],{

/***/ "./examples/docs/fr-FR/input.md":
/*!**************************************!*\
  !*** ./examples/docs/fr-FR/input.md ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _input_md_vue_type_template_id_d0d209be__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.md?vue&type=template&id=d0d209be */ \"./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be\");\n/* harmony import */ var _input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input.md?vue&type=script&lang=js */ \"./examples/docs/fr-FR/input.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _input_md_vue_type_template_id_d0d209be__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"d0d209be\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('d0d209be', _input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('d0d209be', _input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./input.md?vue&type=template&id=d0d209be */ \"./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _input_md_vue_type_template_id_d0d209be__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input.md?vue&type=template&id=d0d209be */ \"./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be\");\n(() => {\n    api.rerender('d0d209be', _input_md_vue_type_template_id_d0d209be__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/fr-FR/input.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kPzk0MzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQWlFO0FBQ1Y7QUFDTDtBQUNsRCx5RUFBTSxVQUFVLDhFQUFNO0FBQ3RCO0FBQ0EsSUFBSSxJQUFVO0FBQ2QsRUFBRSx5RUFBTTtBQUNSO0FBQ0E7QUFDQSxvQ0FBb0MseUVBQU07QUFDMUMsMkJBQTJCLHlFQUFNO0FBQ2pDOztBQUVBLG9CQUFvQiw4R0FBMEMsRUFBRTtBQUFBO0FBQ2hFLDZCQUE2Qiw4RUFBTTtBQUNuQyxHQUFHOztBQUVIOztBQUVBLHlFQUFNOztBQUVTLHdJIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9mci1GUi9pbnB1dC5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL2lucHV0Lm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWQwZDIwOWJlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5wdXQubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5wdXQubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuc2NyaXB0LnJlbmRlciA9IHJlbmRlclxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgc2NyaXB0Ll9faG1ySWQgPSBcImQwZDIwOWJlXCJcbiAgY29uc3QgYXBpID0gX19WVUVfSE1SX1JVTlRJTUVfX1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghYXBpLmNyZWF0ZVJlY29yZCgnZDBkMjA5YmUnLCBzY3JpcHQpKSB7XG4gICAgYXBpLnJlbG9hZCgnZDBkMjA5YmUnLCBzY3JpcHQpXG4gIH1cbiAgXG4gIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9pbnB1dC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kMGQyMDliZVwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCdkMGQyMDliZScsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kXCJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/input.md\n");

/***/ }),

/***/ "./examples/docs/fr-FR/input.md?vue&type=script&lang=js":
/*!**************************************************************!*\
  !*** ./examples/docs/fr-FR/input.md?vue&type=script&lang=js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./input.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/input.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_input_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kP2IyMGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBME0iLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2lucHV0Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2lucHV0Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/input.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be":
/*!********************************************************************!*\
  !*** ./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be ***!
  \********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_input_md_vue_type_template_id_d0d209be__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./input.md?vue&type=template&id=d0d209be */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_input_md_vue_type_template_id_d0d209be__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kPzUzOTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWQwZDIwOWJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS01IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2lucHV0Lm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWQwZDIwOWJlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/input.md?vue&type=script&lang=js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/input.md?vue&type=script&lang=js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_component_el_input, {\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input,\n          \"onUpdate:modelValue\": $event => _ctx.input = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            input: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_component_el_input, {\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input,\n          \"onUpdate:modelValue\": $event => _ctx.input = $event,\n          disabled: true\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            input: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_component_el_input, {\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input,\n          \"onUpdate:modelValue\": $event => _ctx.input = $event,\n          clearable: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            input: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_component_el_input, {\n          placeholder: \"Entrez votre mot de passe\",\n          modelValue: _ctx.input,\n          \"onUpdate:modelValue\": $event => _ctx.input = $event,\n          \"show-password\": \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            input: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          class: \"demo-input-suffix\"\n        }, [_createVNode(\"span\", {\n          class: \"demo-input-label\"\n        }, \"Avec les attributs\"), _createVNode(_component_el_input, {\n          placeholder: \"Entrez une date\",\n          \"suffix-icon\": \"el-icon-date\",\n          modelValue: _ctx.input1,\n          \"onUpdate:modelValue\": $event => _ctx.input1 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input, {\n          placeholder: \"Entrez du texte\",\n          \"prefix-icon\": \"el-icon-search\",\n          modelValue: _ctx.input2,\n          \"onUpdate:modelValue\": $event => _ctx.input2 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"demo-input-suffix\"\n        }, [_createVNode(\"span\", {\n          class: \"demo-input-label\"\n        }, \"Avec les slots\"), _createVNode(_component_el_input, {\n          placeholder: \"Entrez une date\",\n          modelValue: _ctx.input3,\n          \"onUpdate:modelValue\": $event => _ctx.input3 = $event\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            slot: \"suffix\",\n            class: \"el-input__icon el-icon-date\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input, {\n          placeholder: \"Entrez du texte\",\n          modelValue: _ctx.input4,\n          \"onUpdate:modelValue\": $event => _ctx.input4 = $event\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            slot: \"prefix\",\n            class: \"el-input__icon el-icon-search\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            input1: '',\n            input2: '',\n            input3: '',\n            input4: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_component_el_input, {\n          type: \"textarea\",\n          rows: 2,\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.textarea,\n          \"onUpdate:modelValue\": $event => _ctx.textarea = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            textarea: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_input, {\n          type: \"textarea\",\n          autosize: \"\",\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.textarea1,\n          \"onUpdate:modelValue\": $event => _ctx.textarea1 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(\"div\", {\n          style: {\n            \"margin\": \"20px 0\"\n          }\n        }), _createVNode(_component_el_input, {\n          type: \"textarea\",\n          autosize: {\n            minRows: 2,\n            maxRows: 4\n          },\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.textarea2,\n          \"onUpdate:modelValue\": $event => _ctx.textarea2 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            textarea1: '',\n            textarea2: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo7\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_option = _resolveComponent(\"el-option\");\n\n        const _component_el_select = _resolveComponent(\"el-select\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", null, [_createVNode(_component_el_input, {\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input1,\n          \"onUpdate:modelValue\": $event => _ctx.input1 = $event\n        }, {\n          default: _withCtx(() => [_createVNode(\"template\", {\n            slot: \"prepend\"\n          }, \"Http://\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          style: {\n            \"margin-top\": \"15px\"\n          }\n        }, [_createVNode(_component_el_input, {\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input2,\n          \"onUpdate:modelValue\": $event => _ctx.input2 = $event\n        }, {\n          default: _withCtx(() => [_createVNode(\"template\", {\n            slot: \"append\"\n          }, \".com\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          style: {\n            \"margin-top\": \"15px\"\n          }\n        }, [_createVNode(_component_el_input, {\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input3,\n          \"onUpdate:modelValue\": $event => _ctx.input3 = $event,\n          class: \"input-with-select\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_select, {\n            modelValue: _ctx.select,\n            \"onUpdate:modelValue\": $event => _ctx.select = $event,\n            slot: \"prepend\",\n            placeholder: \"Choisir\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_option, {\n              label: \"Restaurant\",\n              value: \"1\"\n            }), _createVNode(_component_el_option, {\n              label: \"Num. Commande\",\n              value: \"2\"\n            }), _createVNode(_component_el_option, {\n              label: \"Tel\",\n              value: \"3\"\n            })]),\n            _: 1\n          }, 8\n          /* PROPS */\n          , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_button, {\n            slot: \"append\",\n            icon: \"el-icon-search\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            input1: '',\n            input2: '',\n            input3: '',\n            select: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo8\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(\"div\", {\n          class: \"demo-input-size\"\n        }, [_createVNode(_component_el_input, {\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input1,\n          \"onUpdate:modelValue\": $event => _ctx.input1 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input, {\n          size: \"medium\",\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input2,\n          \"onUpdate:modelValue\": $event => _ctx.input2 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input, {\n          size: \"small\",\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input3,\n          \"onUpdate:modelValue\": $event => _ctx.input3 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input, {\n          size: \"mini\",\n          placeholder: \"Entrez quelque chose\",\n          modelValue: _ctx.input4,\n          \"onUpdate:modelValue\": $event => _ctx.input4 = $event\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            input1: '',\n            input2: '',\n            input3: '',\n            input4: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo9\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n\n        const _component_el_col = _resolveComponent(\"el-col\");\n\n        const _component_el_row = _resolveComponent(\"el-row\");\n\n        return _openBlock(), _createBlock(_component_el_row, {\n          class: \"demo-autocomplete\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 12\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", {\n              class: \"sub-title\"\n            }, \"Liste des suggestions au focus\"), _createVNode(_component_el_autocomplete, {\n              class: \"inline-input\",\n              modelValue: _ctx.state1,\n              \"onUpdate:modelValue\": $event => _ctx.state1 = $event,\n              \"fetch-suggestions\": _ctx.querySearch,\n              placeholder: \"Entrez quelque chose\",\n              onSelect: _ctx.handleSelect\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"fetch-suggestions\", \"onSelect\"])]),\n            _: 1\n          }), _createVNode(_component_el_col, {\n            span: 12\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", {\n              class: \"sub-title\"\n            }, \"Liste des suggestions à l'écriture\"), _createVNode(_component_el_autocomplete, {\n              class: \"inline-input\",\n              modelValue: _ctx.state2,\n              \"onUpdate:modelValue\": $event => _ctx.state2 = $event,\n              \"fetch-suggestions\": _ctx.querySearch,\n              placeholder: \"Entrez quelque chose\",\n              \"trigger-on-focus\": false,\n              onSelect: _ctx.handleSelect\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"fetch-suggestions\", \"onSelect\"])]),\n            _: 1\n          })]),\n          _: 1\n        });\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            links: [],\n            state1: '',\n            state2: ''\n          };\n        },\n\n        methods: {\n          querySearch(queryString, cb) {\n            var links = this.links;\n            var results = queryString ? links.filter(this.createFilter(queryString)) : links; // call callback function to return suggestions\n\n            cb(results);\n          },\n\n          createFilter(queryString) {\n            return link => {\n              return link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n            };\n          },\n\n          loadAll() {\n            return [{\n              \"value\": \"vue\",\n              \"link\": \"https://github.com/vuejs/vue\"\n            }, {\n              \"value\": \"element\",\n              \"link\": \"https://github.com/ElemeFE/element\"\n            }, {\n              \"value\": \"cooking\",\n              \"link\": \"https://github.com/ElemeFE/cooking\"\n            }, {\n              \"value\": \"mint-ui\",\n              \"link\": \"https://github.com/ElemeFE/mint-ui\"\n            }, {\n              \"value\": \"vuex\",\n              \"link\": \"https://github.com/vuejs/vuex\"\n            }, {\n              \"value\": \"vue-router\",\n              \"link\": \"https://github.com/vuejs/vue-router\"\n            }, {\n              \"value\": \"babel\",\n              \"link\": \"https://github.com/babel/babel\"\n            }];\n          },\n\n          handleSelect(item) {\n            console.log(item);\n          }\n\n        },\n\n        mounted() {\n          this.links = this.loadAll();\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo10\": function () {\n      const {\n        createVNode: _createVNode,\n        toDisplayString: _toDisplayString,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n\n        return _openBlock(), _createBlock(_component_el_autocomplete, {\n          \"popper-class\": \"my-autocomplete\",\n          modelValue: _ctx.state,\n          \"onUpdate:modelValue\": $event => _ctx.state = $event,\n          \"fetch-suggestions\": _ctx.querySearch,\n          placeholder: \"Entrez quelque chose\",\n          onSelect: _ctx.handleSelect\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-edit el-input__icon\",\n            slot: \"suffix\",\n            onClick: _ctx.handleIconClick\n          }, null, 8\n          /* PROPS */\n          , [\"onClick\"]), _createVNode(\"template\", {\n            \"slot-scope\": \"{ item }\"\n          }, [_createVNode(\"div\", {\n            class: \"value\"\n          }, _toDisplayString(_ctx.item.value), 1\n          /* TEXT */\n          ), _createVNode(\"span\", {\n            class: \"link\"\n          }, _toDisplayString(_ctx.item.link), 1\n          /* TEXT */\n          )])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"fetch-suggestions\", \"onSelect\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            links: [],\n            state: ''\n          };\n        },\n\n        methods: {\n          querySearch(queryString, cb) {\n            var links = this.links;\n            var results = queryString ? links.filter(this.createFilter(queryString)) : links; // call callback function to return suggestion objects\n\n            cb(results);\n          },\n\n          createFilter(queryString) {\n            return link => {\n              return link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n            };\n          },\n\n          loadAll() {\n            return [{\n              \"value\": \"vue\",\n              \"link\": \"https://github.com/vuejs/vue\"\n            }, {\n              \"value\": \"element\",\n              \"link\": \"https://github.com/ElemeFE/element\"\n            }, {\n              \"value\": \"cooking\",\n              \"link\": \"https://github.com/ElemeFE/cooking\"\n            }, {\n              \"value\": \"mint-ui\",\n              \"link\": \"https://github.com/ElemeFE/mint-ui\"\n            }, {\n              \"value\": \"vuex\",\n              \"link\": \"https://github.com/vuejs/vuex\"\n            }, {\n              \"value\": \"vue-router\",\n              \"link\": \"https://github.com/vuejs/vue-router\"\n            }, {\n              \"value\": \"babel\",\n              \"link\": \"https://github.com/babel/babel\"\n            }];\n          },\n\n          handleSelect(item) {\n            console.log(item);\n          },\n\n          handleIconClick(ev) {\n            console.log(ev);\n          }\n\n        },\n\n        mounted() {\n          this.links = this.loadAll();\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo11\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n\n        return _openBlock(), _createBlock(_component_el_autocomplete, {\n          modelValue: _ctx.state,\n          \"onUpdate:modelValue\": $event => _ctx.state = $event,\n          \"fetch-suggestions\": _ctx.querySearchAsync,\n          placeholder: \"Entrez quelque chose\",\n          onSelect: _ctx.handleSelect\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"fetch-suggestions\", \"onSelect\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            links: [],\n            state: '',\n            timeout: null\n          };\n        },\n\n        methods: {\n          loadAll() {\n            return [{\n              \"value\": \"vue\",\n              \"link\": \"https://github.com/vuejs/vue\"\n            }, {\n              \"value\": \"element\",\n              \"link\": \"https://github.com/ElemeFE/element\"\n            }, {\n              \"value\": \"cooking\",\n              \"link\": \"https://github.com/ElemeFE/cooking\"\n            }, {\n              \"value\": \"mint-ui\",\n              \"link\": \"https://github.com/ElemeFE/mint-ui\"\n            }, {\n              \"value\": \"vuex\",\n              \"link\": \"https://github.com/vuejs/vuex\"\n            }, {\n              \"value\": \"vue-router\",\n              \"link\": \"https://github.com/vuejs/vue-router\"\n            }, {\n              \"value\": \"babel\",\n              \"link\": \"https://github.com/babel/babel\"\n            }];\n          },\n\n          querySearchAsync(queryString, cb) {\n            var links = this.links;\n            var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n            clearTimeout(this.timeout);\n            this.timeout = setTimeout(() => {\n              cb(results);\n            }, 3000 * Math.random());\n          },\n\n          createFilter(queryString) {\n            return link => {\n              return link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n            };\n          },\n\n          handleSelect(item) {\n            console.log(item);\n          }\n\n        },\n\n        mounted() {\n          this.links = this.loadAll();\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo12\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_input, {\n          type: \"text\",\n          placeholder: \"Please input\",\n          modelValue: _ctx.text,\n          \"onUpdate:modelValue\": $event => _ctx.text = $event,\n          maxlength: \"10\",\n          \"show-word-limit\": \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(\"div\", {\n          style: {\n            \"margin\": \"20px 0\"\n          }\n        }), _createVNode(_component_el_input, {\n          type: \"textarea\",\n          placeholder: \"Please input\",\n          modelValue: _ctx.textarea,\n          \"onUpdate:modelValue\": $event => _ctx.textarea = $event,\n          maxlength: \"30\",\n          \"show-word-limit\": \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            text: '',\n            textarea: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kPzM4ZDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbWhDTTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDZTtBQUNiLE1BQUksRUFBRSxlQURPO0FBRWIsWUFBVSxFQUFFO0FBQ1YscUJBQWtCLFlBQVc7QUFFbkMsWUFBTTtBQUFFLHdCQUFnQixFQUFFLGlCQUFwQjtBQUF1QyxtQkFBVyxFQUFFLFlBQXBEO0FBQWtFLGlCQUFTLEVBQUUsVUFBN0U7QUFBeUYsbUJBQVcsRUFBRTtBQUF0RyxVQUF1SCxnQ0FBN0g7O0FBRUosZUFBUyxNQUFULENBQWlCLElBQWpCLEVBQXVCLE1BQXZCLEVBQStCO0FBQzdCLGNBQU0sbUJBQWtCLEdBQUksaUJBQWlCLENBQUMsVUFBRCxDQUE3Qzs7QUFFQSxlQUFRLFVBQVUsSUFBSSxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDdEQscUJBQVcsRUFBRSxzQkFEeUM7QUFFdEQsb0JBQVUsRUFBRSxJQUFJLENBQUMsS0FGcUM7QUFHdEQsaUNBQXVCLE1BQUssSUFBTSxJQUFJLENBQUMsS0FBTCxHQUFhO0FBSE8sU0FBdEIsRUFJL0IsSUFKK0IsRUFJekI7QUFBRTtBQUp1QixVQUlWLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBSlUsQ0FBbEM7QUFLRjs7QUFFSSxZQUFNLG1CQUFrQixHQUFJO0FBQzlCLFlBQUksR0FBRztBQUNMLGlCQUFPO0FBQ0wsaUJBQUssRUFBRTtBQURGLFdBQVA7QUFHRjs7QUFMOEIsT0FBNUI7QUFPQSxhQUFPO0FBQ0wsZUFBTyxHQUFFO0FBQ1AsZUFBSyxTQUFMLENBQWUsTUFBSTtBQUNqQixrQkFBTSxNQUFLLEdBQUksUUFBUSxDQUFDLGdCQUFULENBQTBCLHFCQUExQixDQUFmO0FBQ0EsaUJBQUssQ0FBQyxTQUFOLENBQWdCLE9BQWhCLENBQXdCLElBQXhCLENBQTZCLE1BQTdCLEVBQXFDLG1EQUFJLENBQUMsY0FBMUM7QUFDRCxXQUhEO0FBSUQsU0FOSTs7QUFPTCxjQVBLO0FBUUwsV0FBRztBQVJFLE9BQVA7QUFVRCxLQS9Cd0IsRUFEUDtBQWdDYixxQkFBa0IsWUFBVztBQUVoQyxZQUFNO0FBQUUsd0JBQWdCLEVBQUUsaUJBQXBCO0FBQXVDLG1CQUFXLEVBQUUsWUFBcEQ7QUFBa0UsaUJBQVMsRUFBRSxVQUE3RTtBQUF5RixtQkFBVyxFQUFFO0FBQXRHLFVBQXVILGdDQUE3SDs7QUFFSixlQUFTLE1BQVQsQ0FBaUIsSUFBakIsRUFBdUIsTUFBdkIsRUFBK0I7QUFDN0IsY0FBTSxtQkFBa0IsR0FBSSxpQkFBaUIsQ0FBQyxVQUFELENBQTdDOztBQUVBLGVBQVEsVUFBVSxJQUFJLFlBQVksQ0FBQyxtQkFBRCxFQUFzQjtBQUN0RCxxQkFBVyxFQUFFLHNCQUR5QztBQUV0RCxvQkFBVSxFQUFFLElBQUksQ0FBQyxLQUZxQztBQUd0RCxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxLQUFMLEdBQWEsTUFITztBQUl0RCxrQkFBUSxFQUFFO0FBSjRDLFNBQXRCLEVBSy9CLElBTCtCLEVBS3pCO0FBQUU7QUFMdUIsVUFLVixDQUFDLFlBQUQsRUFBZSxxQkFBZixDQUxVLENBQWxDO0FBTUY7O0FBRUksWUFBTSxtQkFBa0IsR0FBSTtBQUM5QixZQUFJLEdBQUc7QUFDTCxpQkFBTztBQUNMLGlCQUFLLEVBQUU7QUFERixXQUFQO0FBR0Y7O0FBTDhCLE9BQTVCO0FBT0EsYUFBTztBQUNMLGVBQU8sR0FBRTtBQUNQLGVBQUssU0FBTCxDQUFlLE1BQUk7QUFDakIsa0JBQU0sTUFBSyxHQUFJLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixxQkFBMUIsQ0FBZjtBQUNBLGlCQUFLLENBQUMsU0FBTixDQUFnQixPQUFoQixDQUF3QixJQUF4QixDQUE2QixNQUE3QixFQUFxQyxtREFBSSxDQUFDLGNBQTFDO0FBQ0QsV0FIRDtBQUlELFNBTkk7O0FBT0wsY0FQSztBQVFMLFdBQUc7QUFSRSxPQUFQO0FBVUQsS0FoQ3FCLEVBaENKO0FBZ0ViLHFCQUFrQixZQUFXO0FBRWhDLFlBQU07QUFBRSx3QkFBZ0IsRUFBRSxpQkFBcEI7QUFBdUMsbUJBQVcsRUFBRSxZQUFwRDtBQUFrRSxpQkFBUyxFQUFFLFVBQTdFO0FBQXlGLG1CQUFXLEVBQUU7QUFBdEcsVUFBdUgsZ0NBQTdIOztBQUVKLGVBQVMsTUFBVCxDQUFpQixJQUFqQixFQUF1QixNQUF2QixFQUErQjtBQUM3QixjQUFNLG1CQUFrQixHQUFJLGlCQUFpQixDQUFDLFVBQUQsQ0FBN0M7O0FBRUEsZUFBUSxVQUFVLElBQUksWUFBWSxDQUFDLG1CQUFELEVBQXNCO0FBQ3RELHFCQUFXLEVBQUUsc0JBRHlDO0FBRXRELG9CQUFVLEVBQUUsSUFBSSxDQUFDLEtBRnFDO0FBR3RELGlDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLEtBQUwsR0FBYSxNQUhPO0FBSXRELG1CQUFTLEVBQUU7QUFKMkMsU0FBdEIsRUFLL0IsSUFMK0IsRUFLekI7QUFBRTtBQUx1QixVQUtWLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBTFUsQ0FBbEM7QUFNRjs7QUFFSSxZQUFNLG1CQUFrQixHQUFJO0FBQzlCLFlBQUksR0FBRztBQUNMLGlCQUFPO0FBQ0wsaUJBQUssRUFBRTtBQURGLFdBQVA7QUFHRjs7QUFMOEIsT0FBNUI7QUFPQSxhQUFPO0FBQ0wsZUFBTyxHQUFFO0FBQ1AsZUFBSyxTQUFMLENBQWUsTUFBSTtBQUNqQixrQkFBTSxNQUFLLEdBQUksUUFBUSxDQUFDLGdCQUFULENBQTBCLHFCQUExQixDQUFmO0FBQ0EsaUJBQUssQ0FBQyxTQUFOLENBQWdCLE9BQWhCLENBQXdCLElBQXhCLENBQTZCLE1BQTdCLEVBQXFDLG1EQUFJLENBQUMsY0FBMUM7QUFDRCxXQUhEO0FBSUQsU0FOSTs7QUFPTCxjQVBLO0FBUUwsV0FBRztBQVJFLE9BQVA7QUFVRCxLQWhDcUIsRUFoRUo7QUFnR2IscUJBQWtCLFlBQVc7QUFFaEMsWUFBTTtBQUFFLHdCQUFnQixFQUFFLGlCQUFwQjtBQUF1QyxtQkFBVyxFQUFFLFlBQXBEO0FBQWtFLGlCQUFTLEVBQUUsVUFBN0U7QUFBeUYsbUJBQVcsRUFBRTtBQUF0RyxVQUF1SCxnQ0FBN0g7O0FBRUosZUFBUyxNQUFULENBQWlCLElBQWpCLEVBQXVCLE1BQXZCLEVBQStCO0FBQzdCLGNBQU0sbUJBQWtCLEdBQUksaUJBQWlCLENBQUMsVUFBRCxDQUE3Qzs7QUFFQSxlQUFRLFVBQVUsSUFBSSxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDdEQscUJBQVcsRUFBRSwyQkFEeUM7QUFFdEQsb0JBQVUsRUFBRSxJQUFJLENBQUMsS0FGcUM7QUFHdEQsaUNBQXVCLE1BQUssSUFBTSxJQUFJLENBQUMsS0FBTCxHQUFhLE1BSE87QUFJdEQsMkJBQWlCO0FBSnFDLFNBQXRCLEVBSy9CLElBTCtCLEVBS3pCO0FBQUU7QUFMdUIsVUFLVixDQUFDLFlBQUQsRUFBZSxxQkFBZixDQUxVLENBQWxDO0FBTUY7O0FBRUksWUFBTSxtQkFBa0IsR0FBSTtBQUM1QixZQUFJLEdBQUc7QUFDTCxpQkFBTztBQUNMLGlCQUFLLEVBQUU7QUFERixXQUFQO0FBR0Y7O0FBTDRCLE9BQTVCO0FBT0EsYUFBTztBQUNMLGVBQU8sR0FBRTtBQUNQLGVBQUssU0FBTCxDQUFlLE1BQUk7QUFDakIsa0JBQU0sTUFBSyxHQUFJLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixxQkFBMUIsQ0FBZjtBQUNBLGlCQUFLLENBQUMsU0FBTixDQUFnQixPQUFoQixDQUF3QixJQUF4QixDQUE2QixNQUE3QixFQUFxQyxtREFBSSxDQUFDLGNBQTFDO0FBQ0QsV0FIRDtBQUlELFNBTkk7O0FBT0wsY0FQSztBQVFMLFdBQUc7QUFSRSxPQUFQO0FBVUQsS0FoQ3FCLEVBaEdKO0FBZ0liLHFCQUFrQixZQUFXO0FBRWhDLFlBQU07QUFBRSxtQkFBVyxFQUFFLFlBQWY7QUFBNkIsd0JBQWdCLEVBQUUsaUJBQS9DO0FBQWtFLGVBQU8sRUFBRSxRQUEzRTtBQUFxRixnQkFBUSxFQUFFLFNBQS9GO0FBQTBHLGlCQUFTLEVBQUUsVUFBckg7QUFBaUksbUJBQVcsRUFBRTtBQUE5SSxVQUErSixnQ0FBcks7O0FBRUosZUFBUyxNQUFULENBQWlCLElBQWpCLEVBQXVCLE1BQXZCLEVBQStCO0FBQzdCLGNBQU0sbUJBQWtCLEdBQUksaUJBQWlCLENBQUMsVUFBRCxDQUE3Qzs7QUFFQSxlQUFRLFVBQVUsSUFBSSxZQUFZLENBQUMsU0FBRCxFQUFZLElBQVosRUFBa0IsQ0FDbEQsWUFBWSxDQUFDLEtBQUQsRUFBUTtBQUFFLGVBQUssRUFBRTtBQUFULFNBQVIsRUFBd0MsQ0FDbEQsWUFBWSxDQUFDLE1BQUQsRUFBUztBQUFFLGVBQUssRUFBRTtBQUFULFNBQVQsRUFBd0Msb0JBQXhDLENBRHNDLEVBRWxELFlBQVksQ0FBQyxtQkFBRCxFQUFzQjtBQUNoQyxxQkFBVyxFQUFFLGlCQURtQjtBQUVoQyx5QkFBZSxjQUZpQjtBQUdoQyxvQkFBVSxFQUFFLElBQUksQ0FBQyxNQUhlO0FBSWhDLGlDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLE1BQUwsR0FBYztBQUpoQixTQUF0QixFQUtULElBTFMsRUFLSDtBQUFFO0FBTEMsVUFLWSxDQUFDLFlBQUQsRUFBZSxxQkFBZixDQUxaLENBRnNDLEVBUWxELFlBQVksQ0FBQyxtQkFBRCxFQUFzQjtBQUNoQyxxQkFBVyxFQUFFLGlCQURtQjtBQUVoQyx5QkFBZSxnQkFGaUI7QUFHaEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsTUFIZTtBQUloQyxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxNQUFMLEdBQWM7QUFKaEIsU0FBdEIsRUFLVCxJQUxTLEVBS0g7QUFBRTtBQUxDLFVBS1ksQ0FBQyxZQUFELEVBQWUscUJBQWYsQ0FMWixDQVJzQyxDQUF4QyxDQURzQyxFQWdCbEQsWUFBWSxDQUFDLEtBQUQsRUFBUTtBQUFFLGVBQUssRUFBRTtBQUFULFNBQVIsRUFBd0MsQ0FDbEQsWUFBWSxDQUFDLE1BQUQsRUFBUztBQUFFLGVBQUssRUFBRTtBQUFULFNBQVQsRUFBd0MsZ0JBQXhDLENBRHNDLEVBRWxELFlBQVksQ0FBQyxtQkFBRCxFQUFzQjtBQUNoQyxxQkFBVyxFQUFFLGlCQURtQjtBQUVoQyxvQkFBVSxFQUFFLElBQUksQ0FBQyxNQUZlO0FBR2hDLGlDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLE1BQUwsR0FBYztBQUhoQixTQUF0QixFQUlUO0FBQ0QsaUJBQU8sRUFBRSxRQUFRLENBQUMsTUFBTSxDQUN0QixZQUFZLENBQUMsR0FBRCxFQUFNO0FBQ2hCLGdCQUFJLEVBQUUsUUFEVTtBQUVoQixpQkFBSyxFQUFFO0FBRlMsV0FBTixDQURVLENBQVAsQ0FEaEI7QUFPRCxXQUFDLEVBQUU7QUFQRixTQUpTLEVBWVQ7QUFBRTtBQVpPLFVBWU0sQ0FBQyxZQUFELEVBQWUscUJBQWYsQ0FaTixDQUZzQyxFQWVsRCxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDaEMscUJBQVcsRUFBRSxpQkFEbUI7QUFFaEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsTUFGZTtBQUdoQyxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxNQUFMLEdBQWM7QUFIaEIsU0FBdEIsRUFJVDtBQUNELGlCQUFPLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FDdEIsWUFBWSxDQUFDLEdBQUQsRUFBTTtBQUNoQixnQkFBSSxFQUFFLFFBRFU7QUFFaEIsaUJBQUssRUFBRTtBQUZTLFdBQU4sQ0FEVSxDQUFQLENBRGhCO0FBT0QsV0FBQyxFQUFFO0FBUEYsU0FKUyxFQVlUO0FBQUU7QUFaTyxVQVlNLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBWk4sQ0Fmc0MsQ0FBeEMsQ0FoQnNDLENBQWxCLEVBNkMvQjtBQUFHO0FBN0M0QixTQUFsQztBQThDRjs7QUFFSSxZQUFNLG1CQUFrQixHQUFJO0FBQzlCLFlBQUksR0FBRztBQUNMLGlCQUFPO0FBQ0wsa0JBQU0sRUFBRSxFQURIO0FBRUwsa0JBQU0sRUFBRSxFQUZIO0FBR0wsa0JBQU0sRUFBRSxFQUhIO0FBSUwsa0JBQU0sRUFBRTtBQUpILFdBQVA7QUFNRjs7QUFSOEIsT0FBNUI7QUFVQSxhQUFPO0FBQ0wsZUFBTyxHQUFFO0FBQ1AsZUFBSyxTQUFMLENBQWUsTUFBSTtBQUNqQixrQkFBTSxNQUFLLEdBQUksUUFBUSxDQUFDLGdCQUFULENBQTBCLHFCQUExQixDQUFmO0FBQ0EsaUJBQUssQ0FBQyxTQUFOLENBQWdCLE9BQWhCLENBQXdCLElBQXhCLENBQTZCLE1BQTdCLEVBQXFDLG1EQUFJLENBQUMsY0FBMUM7QUFDRCxXQUhEO0FBSUQsU0FOSTs7QUFPTCxjQVBLO0FBUUwsV0FBRztBQVJFLE9BQVA7QUFVRCxLQTNFcUIsRUFoSUo7QUEyTWIscUJBQWtCLFlBQVc7QUFFaEMsWUFBTTtBQUFFLHdCQUFnQixFQUFFLGlCQUFwQjtBQUF1QyxtQkFBVyxFQUFFLFlBQXBEO0FBQWtFLGlCQUFTLEVBQUUsVUFBN0U7QUFBeUYsbUJBQVcsRUFBRTtBQUF0RyxVQUF1SCxnQ0FBN0g7O0FBRUosZUFBUyxNQUFULENBQWlCLElBQWpCLEVBQXVCLE1BQXZCLEVBQStCO0FBQzdCLGNBQU0sbUJBQWtCLEdBQUksaUJBQWlCLENBQUMsVUFBRCxDQUE3Qzs7QUFFQSxlQUFRLFVBQVUsSUFBSSxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDdEQsY0FBSSxFQUFFLFVBRGdEO0FBRXRELGNBQUksRUFBRSxDQUZnRDtBQUd0RCxxQkFBVyxFQUFFLHNCQUh5QztBQUl0RCxvQkFBVSxFQUFFLElBQUksQ0FBQyxRQUpxQztBQUt0RCxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxRQUFMLEdBQWdCO0FBTEksU0FBdEIsRUFNL0IsSUFOK0IsRUFNekI7QUFBRTtBQU51QixVQU1WLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBTlUsQ0FBbEM7QUFPRjs7QUFFSSxZQUFNLG1CQUFrQixHQUFJO0FBQzlCLFlBQUksR0FBRztBQUNMLGlCQUFPO0FBQ0wsb0JBQVEsRUFBRTtBQURMLFdBQVA7QUFHRjs7QUFMOEIsT0FBNUI7QUFPQSxhQUFPO0FBQ0wsZUFBTyxHQUFFO0FBQ1AsZUFBSyxTQUFMLENBQWUsTUFBSTtBQUNqQixrQkFBTSxNQUFLLEdBQUksUUFBUSxDQUFDLGdCQUFULENBQTBCLHFCQUExQixDQUFmO0FBQ0EsaUJBQUssQ0FBQyxTQUFOLENBQWdCLE9BQWhCLENBQXdCLElBQXhCLENBQTZCLE1BQTdCLEVBQXFDLG1EQUFJLENBQUMsY0FBMUM7QUFDRCxXQUhEO0FBSUQsU0FOSTs7QUFPTCxjQVBLO0FBUUwsV0FBRztBQVJFLE9BQVA7QUFVRCxLQWpDcUIsRUEzTUo7QUE0T2IscUJBQWtCLFlBQVc7QUFFaEMsWUFBTTtBQUFFLHdCQUFnQixFQUFFLGlCQUFwQjtBQUF1QyxtQkFBVyxFQUFFLFlBQXBEO0FBQWtFLGdCQUFRLEVBQUUsU0FBNUU7QUFBdUYsaUJBQVMsRUFBRSxVQUFsRztBQUE4RyxtQkFBVyxFQUFFO0FBQTNILFVBQTRJLGdDQUFsSjs7QUFFSixlQUFTLE1BQVQsQ0FBaUIsSUFBakIsRUFBdUIsTUFBdkIsRUFBK0I7QUFDN0IsY0FBTSxtQkFBa0IsR0FBSSxpQkFBaUIsQ0FBQyxVQUFELENBQTdDOztBQUVBLGVBQVEsVUFBVSxJQUFJLFlBQVksQ0FBQyxTQUFELEVBQVksSUFBWixFQUFrQixDQUNsRCxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDaEMsY0FBSSxFQUFFLFVBRDBCO0FBRWhDLGtCQUFRLEVBQUUsRUFGc0I7QUFHaEMscUJBQVcsRUFBRSxzQkFIbUI7QUFJaEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsU0FKZTtBQUtoQyxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxTQUFMLEdBQWlCO0FBTG5CLFNBQXRCLEVBTVQsSUFOUyxFQU1IO0FBQUU7QUFOQyxVQU1ZLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBTlosQ0FEc0MsRUFRbEQsWUFBWSxDQUFDLEtBQUQsRUFBUTtBQUFFLGVBQUssRUFBRTtBQUFDLHNCQUFTO0FBQVY7QUFBVCxTQUFSLENBUnNDLEVBU2xELFlBQVksQ0FBQyxtQkFBRCxFQUFzQjtBQUNoQyxjQUFJLEVBQUUsVUFEMEI7QUFFaEMsa0JBQVEsRUFBRTtBQUFFLG1CQUFPLEVBQUUsQ0FBWDtBQUFjLG1CQUFPLEVBQUU7QUFBdkIsV0FGc0I7QUFHaEMscUJBQVcsRUFBRSxzQkFIbUI7QUFJaEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsU0FKZTtBQUtoQyxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxTQUFMLEdBQWlCO0FBTG5CLFNBQXRCLEVBTVQsSUFOUyxFQU1IO0FBQUU7QUFOQyxVQU1ZLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBTlosQ0FUc0MsQ0FBbEIsRUFnQi9CO0FBQUc7QUFoQjRCLFNBQWxDO0FBaUJGOztBQUVJLFlBQU0sbUJBQWtCLEdBQUk7QUFDOUIsWUFBSSxHQUFHO0FBQ0wsaUJBQU87QUFDTCxxQkFBUyxFQUFFLEVBRE47QUFFTCxxQkFBUyxFQUFFO0FBRk4sV0FBUDtBQUlGOztBQU44QixPQUE1QjtBQVFBLGFBQU87QUFDTCxlQUFPLEdBQUU7QUFDUCxlQUFLLFNBQUwsQ0FBZSxNQUFJO0FBQ2pCLGtCQUFNLE1BQUssR0FBSSxRQUFRLENBQUMsZ0JBQVQsQ0FBMEIscUJBQTFCLENBQWY7QUFDQSxpQkFBSyxDQUFDLFNBQU4sQ0FBZ0IsT0FBaEIsQ0FBd0IsSUFBeEIsQ0FBNkIsTUFBN0IsRUFBcUMsbURBQUksQ0FBQyxjQUExQztBQUNELFdBSEQ7QUFJRCxTQU5JOztBQU9MLGNBUEs7QUFRTCxXQUFHO0FBUkUsT0FBUDtBQVVELEtBNUNxQixFQTVPSjtBQXdSYixxQkFBa0IsWUFBVztBQUVoQyxZQUFNO0FBQUUsbUJBQVcsRUFBRSxZQUFmO0FBQTZCLHdCQUFnQixFQUFFLGlCQUEvQztBQUFrRSxlQUFPLEVBQUUsUUFBM0U7QUFBcUYsZ0JBQVEsRUFBRSxTQUEvRjtBQUEwRyxpQkFBUyxFQUFFLFVBQXJIO0FBQWlJLG1CQUFXLEVBQUU7QUFBOUksVUFBK0osZ0NBQXJLOztBQUVKLGVBQVMsTUFBVCxDQUFpQixJQUFqQixFQUF1QixNQUF2QixFQUErQjtBQUM3QixjQUFNLG1CQUFrQixHQUFJLGlCQUFpQixDQUFDLFVBQUQsQ0FBN0M7O0FBQ0EsY0FBTSxvQkFBbUIsR0FBSSxpQkFBaUIsQ0FBQyxXQUFELENBQTlDOztBQUNBLGNBQU0sb0JBQW1CLEdBQUksaUJBQWlCLENBQUMsV0FBRCxDQUE5Qzs7QUFDQSxjQUFNLG9CQUFtQixHQUFJLGlCQUFpQixDQUFDLFdBQUQsQ0FBOUM7O0FBRUEsZUFBUSxVQUFVLElBQUksWUFBWSxDQUFDLFNBQUQsRUFBWSxJQUFaLEVBQWtCLENBQ2xELFlBQVksQ0FBQyxLQUFELEVBQVEsSUFBUixFQUFjLENBQ3hCLFlBQVksQ0FBQyxtQkFBRCxFQUFzQjtBQUNoQyxxQkFBVyxFQUFFLHNCQURtQjtBQUVoQyxvQkFBVSxFQUFFLElBQUksQ0FBQyxNQUZlO0FBR2hDLGlDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLE1BQUwsR0FBYztBQUhoQixTQUF0QixFQUlUO0FBQ0QsaUJBQU8sRUFBRSxRQUFRLENBQUMsTUFBTSxDQUN0QixZQUFZLENBQUMsVUFBRCxFQUFhO0FBQUUsZ0JBQUksRUFBRTtBQUFSLFdBQWIsRUFBa0MsU0FBbEMsQ0FEVSxDQUFQLENBRGhCO0FBSUQsV0FBQyxFQUFFO0FBSkYsU0FKUyxFQVNUO0FBQUU7QUFUTyxVQVNNLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBVE4sQ0FEWSxDQUFkLENBRHNDLEVBYWxELFlBQVksQ0FBQyxLQUFELEVBQVE7QUFBRSxlQUFLLEVBQUU7QUFBQywwQkFBYTtBQUFkO0FBQVQsU0FBUixFQUEwQyxDQUNwRCxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDaEMscUJBQVcsRUFBRSxzQkFEbUI7QUFFaEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsTUFGZTtBQUdoQyxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxNQUFMLEdBQWM7QUFIaEIsU0FBdEIsRUFJVDtBQUNELGlCQUFPLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FDdEIsWUFBWSxDQUFDLFVBQUQsRUFBYTtBQUFFLGdCQUFJLEVBQUU7QUFBUixXQUFiLEVBQWlDLE1BQWpDLENBRFUsQ0FBUCxDQURoQjtBQUlELFdBQUMsRUFBRTtBQUpGLFNBSlMsRUFTVDtBQUFFO0FBVE8sVUFTTSxDQUFDLFlBQUQsRUFBZSxxQkFBZixDQVROLENBRHdDLENBQTFDLENBYnNDLEVBeUJsRCxZQUFZLENBQUMsS0FBRCxFQUFRO0FBQUUsZUFBSyxFQUFFO0FBQUMsMEJBQWE7QUFBZDtBQUFULFNBQVIsRUFBMEMsQ0FDcEQsWUFBWSxDQUFDLG1CQUFELEVBQXNCO0FBQ2hDLHFCQUFXLEVBQUUsc0JBRG1CO0FBRWhDLG9CQUFVLEVBQUUsSUFBSSxDQUFDLE1BRmU7QUFHaEMsaUNBQXVCLE1BQUssSUFBTSxJQUFJLENBQUMsTUFBTCxHQUFjLE1BSGhCO0FBSWhDLGVBQUssRUFBRTtBQUp5QixTQUF0QixFQUtUO0FBQ0QsaUJBQU8sRUFBRSxRQUFRLENBQUMsTUFBTSxDQUN0QixZQUFZLENBQUMsb0JBQUQsRUFBdUI7QUFDakMsc0JBQVUsRUFBRSxJQUFJLENBQUMsTUFEZ0I7QUFFakMsbUNBQXVCLE1BQUssSUFBTSxJQUFJLENBQUMsTUFBTCxHQUFjLE1BRmY7QUFHakMsZ0JBQUksRUFBRSxTQUgyQjtBQUlqQyx1QkFBVyxFQUFFO0FBSm9CLFdBQXZCLEVBS1Q7QUFDRCxtQkFBTyxFQUFFLFFBQVEsQ0FBQyxNQUFNLENBQ3RCLFlBQVksQ0FBQyxvQkFBRCxFQUF1QjtBQUNqQyxtQkFBSyxFQUFFLFlBRDBCO0FBRWpDLG1CQUFLLEVBQUU7QUFGMEIsYUFBdkIsQ0FEVSxFQUt0QixZQUFZLENBQUMsb0JBQUQsRUFBdUI7QUFDakMsbUJBQUssRUFBRSxlQUQwQjtBQUVqQyxtQkFBSyxFQUFFO0FBRjBCLGFBQXZCLENBTFUsRUFTdEIsWUFBWSxDQUFDLG9CQUFELEVBQXVCO0FBQ2pDLG1CQUFLLEVBQUUsS0FEMEI7QUFFakMsbUJBQUssRUFBRTtBQUYwQixhQUF2QixDQVRVLENBQVAsQ0FEaEI7QUFlRCxhQUFDLEVBQUU7QUFmRixXQUxTLEVBcUJUO0FBQUU7QUFyQk8sWUFxQk0sQ0FBQyxZQUFELEVBQWUscUJBQWYsQ0FyQk4sQ0FEVSxFQXVCdEIsWUFBWSxDQUFDLG9CQUFELEVBQXVCO0FBQ2pDLGdCQUFJLEVBQUUsUUFEMkI7QUFFakMsZ0JBQUksRUFBRTtBQUYyQixXQUF2QixDQXZCVSxDQUFQLENBRGhCO0FBNkJELFdBQUMsRUFBRTtBQTdCRixTQUxTLEVBbUNUO0FBQUU7QUFuQ08sVUFtQ00sQ0FBQyxZQUFELEVBQWUscUJBQWYsQ0FuQ04sQ0FEd0MsQ0FBMUMsQ0F6QnNDLENBQWxCLEVBK0QvQjtBQUFHO0FBL0Q0QixTQUFsQztBQWdFRjs7QUFFSSxZQUFNLG1CQUFrQixHQUFJO0FBQzlCLFlBQUksR0FBRztBQUNMLGlCQUFPO0FBQ0wsa0JBQU0sRUFBRSxFQURIO0FBRUwsa0JBQU0sRUFBRSxFQUZIO0FBR0wsa0JBQU0sRUFBRSxFQUhIO0FBSUwsa0JBQU0sRUFBRTtBQUpILFdBQVA7QUFNRjs7QUFSOEIsT0FBNUI7QUFVQSxhQUFPO0FBQ0wsZUFBTyxHQUFFO0FBQ1AsZUFBSyxTQUFMLENBQWUsTUFBSTtBQUNqQixrQkFBTSxNQUFLLEdBQUksUUFBUSxDQUFDLGdCQUFULENBQTBCLHFCQUExQixDQUFmO0FBQ0EsaUJBQUssQ0FBQyxTQUFOLENBQWdCLE9BQWhCLENBQXdCLElBQXhCLENBQTZCLE1BQTdCLEVBQXFDLG1EQUFJLENBQUMsY0FBMUM7QUFDRCxXQUhEO0FBSUQsU0FOSTs7QUFPTCxjQVBLO0FBUUwsV0FBRztBQVJFLE9BQVA7QUFVRCxLQWhHcUIsRUF4Uko7QUF3WGIscUJBQWtCLFlBQVc7QUFFaEMsWUFBTTtBQUFFLHdCQUFnQixFQUFFLGlCQUFwQjtBQUF1QyxtQkFBVyxFQUFFLFlBQXBEO0FBQWtFLGlCQUFTLEVBQUUsVUFBN0U7QUFBeUYsbUJBQVcsRUFBRTtBQUF0RyxVQUF1SCxnQ0FBN0g7O0FBRUosZUFBUyxNQUFULENBQWlCLElBQWpCLEVBQXVCLE1BQXZCLEVBQStCO0FBQzdCLGNBQU0sbUJBQWtCLEdBQUksaUJBQWlCLENBQUMsVUFBRCxDQUE3Qzs7QUFFQSxlQUFRLFVBQVUsSUFBSSxZQUFZLENBQUMsS0FBRCxFQUFRO0FBQUUsZUFBSyxFQUFFO0FBQVQsU0FBUixFQUFzQyxDQUN0RSxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDaEMscUJBQVcsRUFBRSxzQkFEbUI7QUFFaEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsTUFGZTtBQUdoQyxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxNQUFMLEdBQWM7QUFIaEIsU0FBdEIsRUFJVCxJQUpTLEVBSUg7QUFBRTtBQUpDLFVBSVksQ0FBQyxZQUFELEVBQWUscUJBQWYsQ0FKWixDQUQwRCxFQU10RSxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDaEMsY0FBSSxFQUFFLFFBRDBCO0FBRWhDLHFCQUFXLEVBQUUsc0JBRm1CO0FBR2hDLG9CQUFVLEVBQUUsSUFBSSxDQUFDLE1BSGU7QUFJaEMsaUNBQXVCLE1BQUssSUFBTSxJQUFJLENBQUMsTUFBTCxHQUFjO0FBSmhCLFNBQXRCLEVBS1QsSUFMUyxFQUtIO0FBQUU7QUFMQyxVQUtZLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBTFosQ0FOMEQsRUFZdEUsWUFBWSxDQUFDLG1CQUFELEVBQXNCO0FBQ2hDLGNBQUksRUFBRSxPQUQwQjtBQUVoQyxxQkFBVyxFQUFFLHNCQUZtQjtBQUdoQyxvQkFBVSxFQUFFLElBQUksQ0FBQyxNQUhlO0FBSWhDLGlDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLE1BQUwsR0FBYztBQUpoQixTQUF0QixFQUtULElBTFMsRUFLSDtBQUFFO0FBTEMsVUFLWSxDQUFDLFlBQUQsRUFBZSxxQkFBZixDQUxaLENBWjBELEVBa0J0RSxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDaEMsY0FBSSxFQUFFLE1BRDBCO0FBRWhDLHFCQUFXLEVBQUUsc0JBRm1CO0FBR2hDLG9CQUFVLEVBQUUsSUFBSSxDQUFDLE1BSGU7QUFJaEMsaUNBQXVCLE1BQUssSUFBTSxJQUFJLENBQUMsTUFBTCxHQUFjO0FBSmhCLFNBQXRCLEVBS1QsSUFMUyxFQUtIO0FBQUU7QUFMQyxVQUtZLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBTFosQ0FsQjBELENBQXRDLENBQWxDO0FBeUJGOztBQUVJLFlBQU0sbUJBQWtCLEdBQUk7QUFDOUIsWUFBSSxHQUFHO0FBQ0wsaUJBQU87QUFDTCxrQkFBTSxFQUFFLEVBREg7QUFFTCxrQkFBTSxFQUFFLEVBRkg7QUFHTCxrQkFBTSxFQUFFLEVBSEg7QUFJTCxrQkFBTSxFQUFFO0FBSkgsV0FBUDtBQU1GOztBQVI4QixPQUE1QjtBQVVBLGFBQU87QUFDTCxlQUFPLEdBQUU7QUFDUCxlQUFLLFNBQUwsQ0FBZSxNQUFJO0FBQ2pCLGtCQUFNLE1BQUssR0FBSSxRQUFRLENBQUMsZ0JBQVQsQ0FBMEIscUJBQTFCLENBQWY7QUFDQSxpQkFBSyxDQUFDLFNBQU4sQ0FBZ0IsT0FBaEIsQ0FBd0IsSUFBeEIsQ0FBNkIsTUFBN0IsRUFBcUMsbURBQUksQ0FBQyxjQUExQztBQUNELFdBSEQ7QUFJRCxTQU5JOztBQU9MLGNBUEs7QUFRTCxXQUFHO0FBUkUsT0FBUDtBQVVELEtBdERxQixFQXhYSjtBQThhYixxQkFBa0IsWUFBVztBQUVoQyxZQUFNO0FBQUUsbUJBQVcsRUFBRSxZQUFmO0FBQTZCLHdCQUFnQixFQUFFLGlCQUEvQztBQUFrRSxlQUFPLEVBQUUsUUFBM0U7QUFBcUYsaUJBQVMsRUFBRSxVQUFoRztBQUE0RyxtQkFBVyxFQUFFO0FBQXpILFVBQTBJLGdDQUFoSjs7QUFFSixlQUFTLE1BQVQsQ0FBaUIsSUFBakIsRUFBdUIsTUFBdkIsRUFBK0I7QUFDN0IsY0FBTSwwQkFBeUIsR0FBSSxpQkFBaUIsQ0FBQyxpQkFBRCxDQUFwRDs7QUFDQSxjQUFNLGlCQUFnQixHQUFJLGlCQUFpQixDQUFDLFFBQUQsQ0FBM0M7O0FBQ0EsY0FBTSxpQkFBZ0IsR0FBSSxpQkFBaUIsQ0FBQyxRQUFELENBQTNDOztBQUVBLGVBQVEsVUFBVSxJQUFJLFlBQVksQ0FBQyxpQkFBRCxFQUFvQjtBQUFFLGVBQUssRUFBRTtBQUFULFNBQXBCLEVBQW9EO0FBQ3BGLGlCQUFPLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FDdEIsWUFBWSxDQUFDLGlCQUFELEVBQW9CO0FBQUUsZ0JBQUksRUFBRTtBQUFSLFdBQXBCLEVBQWtDO0FBQzVDLG1CQUFPLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FDdEIsWUFBWSxDQUFDLEtBQUQsRUFBUTtBQUFFLG1CQUFLLEVBQUU7QUFBVCxhQUFSLEVBQWdDLGdDQUFoQyxDQURVLEVBRXRCLFlBQVksQ0FBQywwQkFBRCxFQUE2QjtBQUN2QyxtQkFBSyxFQUFFLGNBRGdDO0FBRXZDLHdCQUFVLEVBQUUsSUFBSSxDQUFDLE1BRnNCO0FBR3ZDLHFDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLE1BQUwsR0FBYyxNQUhUO0FBSXZDLG1DQUFxQixJQUFJLENBQUMsV0FKYTtBQUt2Qyx5QkFBVyxFQUFFLHNCQUwwQjtBQU12QyxzQkFBUSxFQUFFLElBQUksQ0FBQztBQU53QixhQUE3QixFQU9ULElBUFMsRUFPSDtBQUFFO0FBUEMsY0FPWSxDQUFDLFlBQUQsRUFBZSxxQkFBZixFQUFzQyxtQkFBdEMsRUFBMkQsVUFBM0QsQ0FQWixDQUZVLENBQVAsQ0FEMkI7QUFZNUMsYUFBQyxFQUFFO0FBWnlDLFdBQWxDLENBRFUsRUFldEIsWUFBWSxDQUFDLGlCQUFELEVBQW9CO0FBQUUsZ0JBQUksRUFBRTtBQUFSLFdBQXBCLEVBQWtDO0FBQzVDLG1CQUFPLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FDdEIsWUFBWSxDQUFDLEtBQUQsRUFBUTtBQUFFLG1CQUFLLEVBQUU7QUFBVCxhQUFSLEVBQWdDLG9DQUFoQyxDQURVLEVBRXRCLFlBQVksQ0FBQywwQkFBRCxFQUE2QjtBQUN2QyxtQkFBSyxFQUFFLGNBRGdDO0FBRXZDLHdCQUFVLEVBQUUsSUFBSSxDQUFDLE1BRnNCO0FBR3ZDLHFDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLE1BQUwsR0FBYyxNQUhUO0FBSXZDLG1DQUFxQixJQUFJLENBQUMsV0FKYTtBQUt2Qyx5QkFBVyxFQUFFLHNCQUwwQjtBQU12QyxrQ0FBb0IsS0FObUI7QUFPdkMsc0JBQVEsRUFBRSxJQUFJLENBQUM7QUFQd0IsYUFBN0IsRUFRVCxJQVJTLEVBUUg7QUFBRTtBQVJDLGNBUVksQ0FBQyxZQUFELEVBQWUscUJBQWYsRUFBc0MsbUJBQXRDLEVBQTJELFVBQTNELENBUlosQ0FGVSxDQUFQLENBRDJCO0FBYTVDLGFBQUMsRUFBRTtBQWJ5QyxXQUFsQyxDQWZVLENBQVAsQ0FEbUU7QUFnQ3BGLFdBQUMsRUFBRTtBQWhDaUYsU0FBcEQsQ0FBbEM7QUFrQ0Y7O0FBRUksWUFBTSxtQkFBa0IsR0FBSTtBQUM1QixZQUFJLEdBQUc7QUFDTCxpQkFBTztBQUNMLGlCQUFLLEVBQUUsRUFERjtBQUVMLGtCQUFNLEVBQUUsRUFGSDtBQUdMLGtCQUFNLEVBQUU7QUFISCxXQUFQO0FBS0QsU0FQMkI7O0FBUTVCLGVBQU8sRUFBRTtBQUNQLHFCQUFXLENBQUMsV0FBRCxFQUFjLEVBQWQsRUFBa0I7QUFDM0IsZ0JBQUksS0FBSSxHQUFJLEtBQUssS0FBakI7QUFDQSxnQkFBSSxPQUFNLEdBQUksV0FBVSxHQUFJLEtBQUssQ0FBQyxNQUFOLENBQWEsS0FBSyxZQUFMLENBQWtCLFdBQWxCLENBQWIsQ0FBSixHQUFtRCxLQUEzRSxDQUYyQixDQUczQjs7QUFDQSxjQUFFLENBQUMsT0FBRCxDQUFGO0FBQ0QsV0FOTTs7QUFPUCxzQkFBWSxDQUFDLFdBQUQsRUFBYztBQUN4QixtQkFBUSxJQUFELElBQVU7QUFDZixxQkFBUSxJQUFJLENBQUMsS0FBTCxDQUFXLFdBQVgsR0FBeUIsT0FBekIsQ0FBaUMsV0FBVyxDQUFDLFdBQVosRUFBakMsTUFBZ0UsQ0FBeEU7QUFDRCxhQUZEO0FBR0QsV0FYTTs7QUFZUCxpQkFBTyxHQUFHO0FBQ1IsbUJBQU8sQ0FDTDtBQUFFLHVCQUFTLEtBQVg7QUFBa0Isc0JBQVE7QUFBMUIsYUFESyxFQUVMO0FBQUUsdUJBQVMsU0FBWDtBQUFzQixzQkFBUTtBQUE5QixhQUZLLEVBR0w7QUFBRSx1QkFBUyxTQUFYO0FBQXNCLHNCQUFRO0FBQTlCLGFBSEssRUFJTDtBQUFFLHVCQUFTLFNBQVg7QUFBc0Isc0JBQVE7QUFBOUIsYUFKSyxFQUtMO0FBQUUsdUJBQVMsTUFBWDtBQUFtQixzQkFBUTtBQUEzQixhQUxLLEVBTUw7QUFBRSx1QkFBUyxZQUFYO0FBQXlCLHNCQUFRO0FBQWpDLGFBTkssRUFPTDtBQUFFLHVCQUFTLE9BQVg7QUFBb0Isc0JBQVE7QUFBNUIsYUFQSyxDQUFQO0FBU0QsV0F0Qk07O0FBdUJQLHNCQUFZLENBQUMsSUFBRCxFQUFPO0FBQ2pCLG1CQUFPLENBQUMsR0FBUixDQUFZLElBQVo7QUFDRjs7QUF6Qk8sU0FSbUI7O0FBbUM1QixlQUFPLEdBQUc7QUFDUixlQUFLLEtBQUwsR0FBYSxLQUFLLE9BQUwsRUFBYjtBQUNGOztBQXJDNEIsT0FBNUI7QUF1Q0EsYUFBTztBQUNMLGVBQU8sR0FBRTtBQUNQLGVBQUssU0FBTCxDQUFlLE1BQUk7QUFDakIsa0JBQU0sTUFBSyxHQUFJLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixxQkFBMUIsQ0FBZjtBQUNBLGlCQUFLLENBQUMsU0FBTixDQUFnQixPQUFoQixDQUF3QixJQUF4QixDQUE2QixNQUE3QixFQUFxQyxtREFBSSxDQUFDLGNBQTFDO0FBQ0QsV0FIRDtBQUlELFNBTkk7O0FBT0wsY0FQSztBQVFMLFdBQUc7QUFSRSxPQUFQO0FBVUQsS0E5RnFCLEVBOWFKO0FBNGdCYixzQkFBbUIsWUFBVztBQUVqQyxZQUFNO0FBQUUsbUJBQVcsRUFBRSxZQUFmO0FBQTZCLHVCQUFlLEVBQUUsZ0JBQTlDO0FBQWdFLHdCQUFnQixFQUFFLGlCQUFsRjtBQUFxRyxlQUFPLEVBQUUsUUFBOUc7QUFBd0gsaUJBQVMsRUFBRSxVQUFuSTtBQUErSSxtQkFBVyxFQUFFO0FBQTVKLFVBQTZLLGdDQUFuTDs7QUFFSixlQUFTLE1BQVQsQ0FBaUIsSUFBakIsRUFBdUIsTUFBdkIsRUFBK0I7QUFDN0IsY0FBTSwwQkFBeUIsR0FBSSxpQkFBaUIsQ0FBQyxpQkFBRCxDQUFwRDs7QUFFQSxlQUFRLFVBQVUsSUFBSSxZQUFZLENBQUMsMEJBQUQsRUFBNkI7QUFDN0QsMEJBQWdCLGlCQUQ2QztBQUU3RCxvQkFBVSxFQUFFLElBQUksQ0FBQyxLQUY0QztBQUc3RCxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxLQUFMLEdBQWEsTUFIYztBQUk3RCwrQkFBcUIsSUFBSSxDQUFDLFdBSm1DO0FBSzdELHFCQUFXLEVBQUUsc0JBTGdEO0FBTTdELGtCQUFRLEVBQUUsSUFBSSxDQUFDO0FBTjhDLFNBQTdCLEVBTy9CO0FBQ0QsaUJBQU8sRUFBRSxRQUFRLENBQUMsTUFBTSxDQUN0QixZQUFZLENBQUMsR0FBRCxFQUFNO0FBQ2hCLGlCQUFLLEVBQUUsNkJBRFM7QUFFaEIsZ0JBQUksRUFBRSxRQUZVO0FBR2hCLG1CQUFPLEVBQUUsSUFBSSxDQUFDO0FBSEUsV0FBTixFQUlULElBSlMsRUFJSDtBQUFFO0FBSkMsWUFJWSxDQUFDLFNBQUQsQ0FKWixDQURVLEVBTXRCLFlBQVksQ0FBQyxVQUFELEVBQWE7QUFBRSwwQkFBYztBQUFoQixXQUFiLEVBQTJDLENBQ3JELFlBQVksQ0FBQyxLQUFELEVBQVE7QUFBRSxpQkFBSyxFQUFFO0FBQVQsV0FBUixFQUE0QixnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBTCxDQUFVLEtBQVgsQ0FBNUMsRUFBK0Q7QUFBRTtBQUFqRSxXQUR5QyxFQUVyRCxZQUFZLENBQUMsTUFBRCxFQUFTO0FBQUUsaUJBQUssRUFBRTtBQUFULFdBQVQsRUFBNEIsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUwsQ0FBVSxJQUFYLENBQTVDLEVBQThEO0FBQUU7QUFBaEUsV0FGeUMsQ0FBM0MsQ0FOVSxDQUFQLENBRGhCO0FBWUQsV0FBQyxFQUFFO0FBWkYsU0FQK0IsRUFvQi9CO0FBQUU7QUFwQjZCLFVBb0JoQixDQUFDLFlBQUQsRUFBZSxxQkFBZixFQUFzQyxtQkFBdEMsRUFBMkQsVUFBM0QsQ0FwQmdCLENBQWxDO0FBcUJGOztBQUVJLFlBQU0sbUJBQWtCLEdBQUk7QUFDNUIsWUFBSSxHQUFHO0FBQ0wsaUJBQU87QUFDTCxpQkFBSyxFQUFFLEVBREY7QUFFTCxpQkFBSyxFQUFFO0FBRkYsV0FBUDtBQUlELFNBTjJCOztBQU81QixlQUFPLEVBQUU7QUFDUCxxQkFBVyxDQUFDLFdBQUQsRUFBYyxFQUFkLEVBQWtCO0FBQzNCLGdCQUFJLEtBQUksR0FBSSxLQUFLLEtBQWpCO0FBQ0EsZ0JBQUksT0FBTSxHQUFJLFdBQVUsR0FBSSxLQUFLLENBQUMsTUFBTixDQUFhLEtBQUssWUFBTCxDQUFrQixXQUFsQixDQUFiLENBQUosR0FBbUQsS0FBM0UsQ0FGMkIsQ0FHM0I7O0FBQ0EsY0FBRSxDQUFDLE9BQUQsQ0FBRjtBQUNELFdBTk07O0FBT1Asc0JBQVksQ0FBQyxXQUFELEVBQWM7QUFDeEIsbUJBQVEsSUFBRCxJQUFVO0FBQ2YscUJBQVEsSUFBSSxDQUFDLEtBQUwsQ0FBVyxXQUFYLEdBQXlCLE9BQXpCLENBQWlDLFdBQVcsQ0FBQyxXQUFaLEVBQWpDLE1BQWdFLENBQXhFO0FBQ0QsYUFGRDtBQUdELFdBWE07O0FBWVAsaUJBQU8sR0FBRztBQUNSLG1CQUFPLENBQ0w7QUFBRSx1QkFBUyxLQUFYO0FBQWtCLHNCQUFRO0FBQTFCLGFBREssRUFFTDtBQUFFLHVCQUFTLFNBQVg7QUFBc0Isc0JBQVE7QUFBOUIsYUFGSyxFQUdMO0FBQUUsdUJBQVMsU0FBWDtBQUFzQixzQkFBUTtBQUE5QixhQUhLLEVBSUw7QUFBRSx1QkFBUyxTQUFYO0FBQXNCLHNCQUFRO0FBQTlCLGFBSkssRUFLTDtBQUFFLHVCQUFTLE1BQVg7QUFBbUIsc0JBQVE7QUFBM0IsYUFMSyxFQU1MO0FBQUUsdUJBQVMsWUFBWDtBQUF5QixzQkFBUTtBQUFqQyxhQU5LLEVBT0w7QUFBRSx1QkFBUyxPQUFYO0FBQW9CLHNCQUFRO0FBQTVCLGFBUEssQ0FBUDtBQVNELFdBdEJNOztBQXVCUCxzQkFBWSxDQUFDLElBQUQsRUFBTztBQUNqQixtQkFBTyxDQUFDLEdBQVIsQ0FBWSxJQUFaO0FBQ0QsV0F6Qk07O0FBMEJQLHlCQUFlLENBQUMsRUFBRCxFQUFLO0FBQ2xCLG1CQUFPLENBQUMsR0FBUixDQUFZLEVBQVo7QUFDRjs7QUE1Qk8sU0FQbUI7O0FBcUM1QixlQUFPLEdBQUc7QUFDUixlQUFLLEtBQUwsR0FBYSxLQUFLLE9BQUwsRUFBYjtBQUNGOztBQXZDNEIsT0FBNUI7QUF5Q0EsYUFBTztBQUNMLGVBQU8sR0FBRTtBQUNQLGVBQUssU0FBTCxDQUFlLE1BQUk7QUFDakIsa0JBQU0sTUFBSyxHQUFJLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixxQkFBMUIsQ0FBZjtBQUNBLGlCQUFLLENBQUMsU0FBTixDQUFnQixPQUFoQixDQUF3QixJQUF4QixDQUE2QixNQUE3QixFQUFxQyxtREFBSSxDQUFDLGNBQTFDO0FBQ0QsV0FIRDtBQUlELFNBTkk7O0FBT0wsY0FQSztBQVFMLFdBQUc7QUFSRSxPQUFQO0FBVUQsS0FqRnNCLEVBNWdCTDtBQTZsQmIsc0JBQW1CLFlBQVc7QUFFakMsWUFBTTtBQUFFLHdCQUFnQixFQUFFLGlCQUFwQjtBQUF1QyxtQkFBVyxFQUFFLFlBQXBEO0FBQWtFLGlCQUFTLEVBQUUsVUFBN0U7QUFBeUYsbUJBQVcsRUFBRTtBQUF0RyxVQUF1SCxnQ0FBN0g7O0FBRUosZUFBUyxNQUFULENBQWlCLElBQWpCLEVBQXVCLE1BQXZCLEVBQStCO0FBQzdCLGNBQU0sMEJBQXlCLEdBQUksaUJBQWlCLENBQUMsaUJBQUQsQ0FBcEQ7O0FBRUEsZUFBUSxVQUFVLElBQUksWUFBWSxDQUFDLDBCQUFELEVBQTZCO0FBQzdELG9CQUFVLEVBQUUsSUFBSSxDQUFDLEtBRDRDO0FBRTdELGlDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLEtBQUwsR0FBYSxNQUZjO0FBRzdELCtCQUFxQixJQUFJLENBQUMsZ0JBSG1DO0FBSTdELHFCQUFXLEVBQUUsc0JBSmdEO0FBSzdELGtCQUFRLEVBQUUsSUFBSSxDQUFDO0FBTDhDLFNBQTdCLEVBTS9CLElBTitCLEVBTXpCO0FBQUU7QUFOdUIsVUFNVixDQUFDLFlBQUQsRUFBZSxxQkFBZixFQUFzQyxtQkFBdEMsRUFBMkQsVUFBM0QsQ0FOVSxDQUFsQztBQU9GOztBQUVJLFlBQU0sbUJBQWtCLEdBQUk7QUFDNUIsWUFBSSxHQUFHO0FBQ0wsaUJBQU87QUFDTCxpQkFBSyxFQUFFLEVBREY7QUFFTCxpQkFBSyxFQUFFLEVBRkY7QUFHTCxtQkFBTyxFQUFHO0FBSEwsV0FBUDtBQUtELFNBUDJCOztBQVE1QixlQUFPLEVBQUU7QUFDUCxpQkFBTyxHQUFHO0FBQ1IsbUJBQU8sQ0FDTDtBQUFFLHVCQUFTLEtBQVg7QUFBa0Isc0JBQVE7QUFBMUIsYUFESyxFQUVMO0FBQUUsdUJBQVMsU0FBWDtBQUFzQixzQkFBUTtBQUE5QixhQUZLLEVBR0w7QUFBRSx1QkFBUyxTQUFYO0FBQXNCLHNCQUFRO0FBQTlCLGFBSEssRUFJTDtBQUFFLHVCQUFTLFNBQVg7QUFBc0Isc0JBQVE7QUFBOUIsYUFKSyxFQUtMO0FBQUUsdUJBQVMsTUFBWDtBQUFtQixzQkFBUTtBQUEzQixhQUxLLEVBTUw7QUFBRSx1QkFBUyxZQUFYO0FBQXlCLHNCQUFRO0FBQWpDLGFBTkssRUFPTDtBQUFFLHVCQUFTLE9BQVg7QUFBb0Isc0JBQVE7QUFBNUIsYUFQSyxDQUFQO0FBU0QsV0FYTTs7QUFZUCwwQkFBZ0IsQ0FBQyxXQUFELEVBQWMsRUFBZCxFQUFrQjtBQUNoQyxnQkFBSSxLQUFJLEdBQUksS0FBSyxLQUFqQjtBQUNBLGdCQUFJLE9BQU0sR0FBSSxXQUFVLEdBQUksS0FBSyxDQUFDLE1BQU4sQ0FBYSxLQUFLLFlBQUwsQ0FBa0IsV0FBbEIsQ0FBYixDQUFKLEdBQW1ELEtBQTNFO0FBRUEsd0JBQVksQ0FBQyxLQUFLLE9BQU4sQ0FBWjtBQUNBLGlCQUFLLE9BQUwsR0FBZSxVQUFVLENBQUMsTUFBTTtBQUM5QixnQkFBRSxDQUFDLE9BQUQsQ0FBRjtBQUNELGFBRndCLEVBRXRCLE9BQU8sSUFBSSxDQUFDLE1BQUwsRUFGZSxDQUF6QjtBQUdELFdBcEJNOztBQXFCUCxzQkFBWSxDQUFDLFdBQUQsRUFBYztBQUN4QixtQkFBUSxJQUFELElBQVU7QUFDZixxQkFBUSxJQUFJLENBQUMsS0FBTCxDQUFXLFdBQVgsR0FBeUIsT0FBekIsQ0FBaUMsV0FBVyxDQUFDLFdBQVosRUFBakMsTUFBZ0UsQ0FBeEU7QUFDRCxhQUZEO0FBR0QsV0F6Qk07O0FBMEJQLHNCQUFZLENBQUMsSUFBRCxFQUFPO0FBQ2pCLG1CQUFPLENBQUMsR0FBUixDQUFZLElBQVo7QUFDRjs7QUE1Qk8sU0FSbUI7O0FBc0M1QixlQUFPLEdBQUc7QUFDUixlQUFLLEtBQUwsR0FBYSxLQUFLLE9BQUwsRUFBYjtBQUNGOztBQXhDNEIsT0FBNUI7QUEwQ0EsYUFBTztBQUNMLGVBQU8sR0FBRTtBQUNQLGVBQUssU0FBTCxDQUFlLE1BQUk7QUFDakIsa0JBQU0sTUFBSyxHQUFJLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixxQkFBMUIsQ0FBZjtBQUNBLGlCQUFLLENBQUMsU0FBTixDQUFnQixPQUFoQixDQUF3QixJQUF4QixDQUE2QixNQUE3QixFQUFxQyxtREFBSSxDQUFDLGNBQTFDO0FBQ0QsV0FIRDtBQUlELFNBTkk7O0FBT0wsY0FQSztBQVFMLFdBQUc7QUFSRSxPQUFQO0FBVUQsS0FwRXNCLEVBN2xCTDtBQWlxQmIsc0JBQW1CLFlBQVc7QUFFakMsWUFBTTtBQUFFLHdCQUFnQixFQUFFLGlCQUFwQjtBQUF1QyxtQkFBVyxFQUFFLFlBQXBEO0FBQWtFLGdCQUFRLEVBQUUsU0FBNUU7QUFBdUYsaUJBQVMsRUFBRSxVQUFsRztBQUE4RyxtQkFBVyxFQUFFO0FBQTNILFVBQTRJLGdDQUFsSjs7QUFFSixlQUFTLE1BQVQsQ0FBaUIsSUFBakIsRUFBdUIsTUFBdkIsRUFBK0I7QUFDN0IsY0FBTSxtQkFBa0IsR0FBSSxpQkFBaUIsQ0FBQyxVQUFELENBQTdDOztBQUVBLGVBQVEsVUFBVSxJQUFJLFlBQVksQ0FBQyxTQUFELEVBQVksSUFBWixFQUFrQixDQUNsRCxZQUFZLENBQUMsbUJBQUQsRUFBc0I7QUFDaEMsY0FBSSxFQUFFLE1BRDBCO0FBRWhDLHFCQUFXLEVBQUUsY0FGbUI7QUFHaEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsSUFIZTtBQUloQyxpQ0FBdUIsTUFBSyxJQUFNLElBQUksQ0FBQyxJQUFMLEdBQVksTUFKZDtBQUtoQyxtQkFBUyxFQUFFLElBTHFCO0FBTWhDLDZCQUFtQjtBQU5hLFNBQXRCLEVBT1QsSUFQUyxFQU9IO0FBQUU7QUFQQyxVQU9ZLENBQUMsWUFBRCxFQUFlLHFCQUFmLENBUFosQ0FEc0MsRUFTbEQsWUFBWSxDQUFDLEtBQUQsRUFBUTtBQUFFLGVBQUssRUFBRTtBQUFDLHNCQUFTO0FBQVY7QUFBVCxTQUFSLENBVHNDLEVBVWxELFlBQVksQ0FBQyxtQkFBRCxFQUFzQjtBQUNoQyxjQUFJLEVBQUUsVUFEMEI7QUFFaEMscUJBQVcsRUFBRSxjQUZtQjtBQUdoQyxvQkFBVSxFQUFFLElBQUksQ0FBQyxRQUhlO0FBSWhDLGlDQUF1QixNQUFLLElBQU0sSUFBSSxDQUFDLFFBQUwsR0FBZ0IsTUFKbEI7QUFLaEMsbUJBQVMsRUFBRSxJQUxxQjtBQU1oQyw2QkFBbUI7QUFOYSxTQUF0QixFQU9ULElBUFMsRUFPSDtBQUFFO0FBUEMsVUFPWSxDQUFDLFlBQUQsRUFBZSxxQkFBZixDQVBaLENBVnNDLENBQWxCLEVBa0IvQjtBQUFHO0FBbEI0QixTQUFsQztBQW1CRjs7QUFFSSxZQUFNLG1CQUFrQixHQUFJO0FBQzlCLFlBQUksR0FBRztBQUNMLGlCQUFPO0FBQ0wsZ0JBQUksRUFBRSxFQUREO0FBRUwsb0JBQVEsRUFBRTtBQUZMLFdBQVA7QUFJRjs7QUFOOEIsT0FBNUI7QUFRQSxhQUFPO0FBQ0wsZUFBTyxHQUFFO0FBQ1AsZUFBSyxTQUFMLENBQWUsTUFBSTtBQUNqQixrQkFBTSxNQUFLLEdBQUksUUFBUSxDQUFDLGdCQUFULENBQTBCLHFCQUExQixDQUFmO0FBQ0EsaUJBQUssQ0FBQyxTQUFOLENBQWdCLE9BQWhCLENBQXdCLElBQXhCLENBQTZCLE1BQTdCLEVBQXFDLG1EQUFJLENBQUMsY0FBMUM7QUFDRCxXQUhEO0FBSUQsU0FOSTs7QUFPTCxjQVBLO0FBUUwsV0FBRztBQVJFLE9BQVA7QUFVRCxLQTlDc0I7QUFqcUJMO0FBRkMsQ0FBZiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8hLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2lucHV0Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgPHRlbXBsYXRlPlxuICAgICAgPHNlY3Rpb24gY2xhc3M9XCJjb250ZW50IGVsZW1lbnQtZG9jXCI+XG4gICAgICAgIDxoMiBpZD1cImlucHV0XCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNpbnB1dFwiPsK2PC9hPiBJbnB1dDwvaDI+XG48cD5MZSBjaGFtcCBkJ2lucHV0IGRlIGJhc2UuPC9wPlxuPGRpdiBjbGFzcz1cIndhcm5pbmdcIj5cbjxwPklucHV0IGVzdCB1biBjb21wb3NhbnQgY29udHLDtGzDqSwgaWwgPHN0cm9uZz5hZmZpY2hlIHRvdWpvdXJzIGxhIHZhbGV1ciBsacOpZSBkZSBWdWU8L3N0cm9uZz4uPC9wPlxuPHA+RW4gcsOoZ2xlIGfDqW7DqXJhbGUsIGwnw6l2w6huZW1lbnQgPGNvZGU+aW5wdXQ8L2NvZGU+IGRldnJhaXQgw6p0cmUgZ8OpcsOpLiBTb24gaGFuZGxlciBkZXZyYWl0IG1ldHRyZSDDoCBqb3VyIGxhIHZhbGV1ciBkdSBjb21wb3NhbnQgKG91IHV0aWxpc2V6IDxjb2RlPnYtbW9kZWw8L2NvZGU+KS4gRGFucyBsZSBjYXMgY29udHJhaXJlLCBsYSB2YWxldXIgZHUgY2hhbXAgbmUgc2VyYSBwYXMgbW9kaWZpw6llLjwvcD5cbjxwPkxlcyBtb2RpZmljYXRldXJzIGRlIDxjb2RlPnYtbW9kZWw8L2NvZGU+IG5lIHNvbnQgcGFzIHN1cHBvcnTDqXMuPC9wPlxuPC9kaXY+XG48aDMgaWQ9XCJ1c2FnZVwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjdXNhZ2VcIj7CtjwvYT4gVXNhZ2U8L2gzPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIFxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMCAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWlucHV0IHBsYWNlaG9sZGVyPSZxdW90O0VudHJleiBxdWVscXVlIGNob3NlJnF1b3Q7IHYtbW9kZWw9JnF1b3Q7aW5wdXQmcXVvdDsmZ3Q7Jmx0Oy9lbC1pbnB1dCZndDtcblxuJmx0O3NjcmlwdCZndDtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXQ6ICcnXG4gICAgfVxuICB9XG59XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJkZXNhY3RpdmVcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2Rlc2FjdGl2ZVwiPsK2PC9hPiBEw6lzYWN0aXbDqTwvaDM+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5Ew6lzYWN0aXZleiBsJ2lucHV0IGF2ZWMgbCdhdHRyaWJ1dCA8Y29kZT5kaXNhYmxlZDwvY29kZT4uPC9wPlxuPC9kaXY+XG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW8xIC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtaW5wdXRcbiAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgdi1tb2RlbD0mcXVvdDtpbnB1dCZxdW90O1xuICA6ZGlzYWJsZWQ9JnF1b3Q7dHJ1ZSZxdW90OyZndDtcbiZsdDsvZWwtaW5wdXQmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlucHV0OiAnJ1xuICAgIH1cbiAgfVxufVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiZWZmYWNhYmxlXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNlZmZhY2FibGVcIj7CtjwvYT4gRWZmYcOnYWJsZTwvaDM+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5SZW5kZXogbCdpbnB1dCBlZmZhw6dhYmxlIGF2ZWMgbCdhdHRyaWJ1dCA8Y29kZT5jbGVhcmFibGU8L2NvZGU+LjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMiAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWlucHV0XG4gIHBsYWNlaG9sZGVyPSZxdW90O0VudHJleiBxdWVscXVlIGNob3NlJnF1b3Q7XG4gIHYtbW9kZWw9JnF1b3Q7aW5wdXQmcXVvdDtcbiAgY2xlYXJhYmxlJmd0O1xuJmx0Oy9lbC1pbnB1dCZndDtcblxuJmx0O3NjcmlwdCZndDtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXQ6ICcnXG4gICAgfVxuICB9XG59XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJjaGFtcC1kZS1tb3QtZGUtcGFzc2VcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2NoYW1wLWRlLW1vdC1kZS1wYXNzZVwiPsK2PC9hPiBDaGFtcCBkZSBtb3QgZGUgcGFzc2U8L2gzPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+Q3LDqWV6IHVuIGNoYW1wIGRlIG1vdCBkZSBwYXNzZSBhdmVjIGljw7RuZSBkZSB2aXN1YWxpc2F0aW9uIGdyw6JjZSDDoCBsJ2F0dHJpYnV0IDxjb2RlPnNob3ctcGFzc3dvcmQ8L2NvZGU+LjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMyAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWlucHV0IHBsYWNlaG9sZGVyPSZxdW90O0VudHJleiB2b3RyZSBtb3QgZGUgcGFzc2UmcXVvdDsgdi1tb2RlbD0mcXVvdDtpbnB1dCZxdW90OyBzaG93LXBhc3N3b3JkJmd0OyZsdDsvZWwtaW5wdXQmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaW5wdXQ6ICcnXG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJpbnB1dC1hdmVjLWljb25lXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNpbnB1dC1hdmVjLWljb25lXCI+wrY8L2E+IElucHV0IGF2ZWMgaWPDtG5lPC9oMz5cbjxwPkFqb3V0ZXogdW5lIGljw7RuZSBwb3VyIGluZGlxdWVyIGxlIHR5cGUgZCdpbnB1dC48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5Qb3VyIGFqb3V0ZXIgdW5lIGljw7RuZSwgdm91cyBwb3V2ZXogdXRpbGlzZXIgbGVzIGF0dHJpYnV0cyA8Y29kZT5wcmVmaXgtaWNvbjwvY29kZT4gZXQgPGNvZGU+c3VmZml4LWljb248L2NvZGU+LiBEZSBwbHVzLCBsZXMgc2xvdHMgbm9tbcOpcyA8Y29kZT5wcmVmaXg8L2NvZGU+IGV0IDxjb2RlPnN1ZmZpeDwvY29kZT4gZm9uY3Rpb25uZW50IGF1c3NpLjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNCAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2RpdiBjbGFzcz0mcXVvdDtkZW1vLWlucHV0LXN1ZmZpeCZxdW90OyZndDtcbiAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ZGVtby1pbnB1dC1sYWJlbCZxdW90OyZndDtBdmVjIGxlcyBhdHRyaWJ1dHMmbHQ7L3NwYW4mZ3Q7XG4gICZsdDtlbC1pbnB1dFxuICAgIHBsYWNlaG9sZGVyPSZxdW90O0VudHJleiB1bmUgZGF0ZSZxdW90O1xuICAgIHN1ZmZpeC1pY29uPSZxdW90O2VsLWljb24tZGF0ZSZxdW90O1xuICAgIHYtbW9kZWw9JnF1b3Q7aW5wdXQxJnF1b3Q7Jmd0O1xuICAmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7ZWwtaW5wdXRcbiAgICBwbGFjZWhvbGRlcj0mcXVvdDtFbnRyZXogZHUgdGV4dGUmcXVvdDtcbiAgICBwcmVmaXgtaWNvbj0mcXVvdDtlbC1pY29uLXNlYXJjaCZxdW90O1xuICAgIHYtbW9kZWw9JnF1b3Q7aW5wdXQyJnF1b3Q7Jmd0O1xuICAmbHQ7L2VsLWlucHV0Jmd0O1xuJmx0Oy9kaXYmZ3Q7XG4mbHQ7ZGl2IGNsYXNzPSZxdW90O2RlbW8taW5wdXQtc3VmZml4JnF1b3Q7Jmd0O1xuICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtkZW1vLWlucHV0LWxhYmVsJnF1b3Q7Jmd0O0F2ZWMgbGVzIHNsb3RzJmx0Oy9zcGFuJmd0O1xuICAmbHQ7ZWwtaW5wdXRcbiAgICBwbGFjZWhvbGRlcj0mcXVvdDtFbnRyZXogdW5lIGRhdGUmcXVvdDtcbiAgICB2LW1vZGVsPSZxdW90O2lucHV0MyZxdW90OyZndDtcbiAgICAmbHQ7aSBzbG90PSZxdW90O3N1ZmZpeCZxdW90OyBjbGFzcz0mcXVvdDtlbC1pbnB1dF9faWNvbiBlbC1pY29uLWRhdGUmcXVvdDsmZ3Q7Jmx0Oy9pJmd0O1xuICAmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7ZWwtaW5wdXRcbiAgICBwbGFjZWhvbGRlcj0mcXVvdDtFbnRyZXogZHUgdGV4dGUmcXVvdDtcbiAgICB2LW1vZGVsPSZxdW90O2lucHV0NCZxdW90OyZndDtcbiAgICAmbHQ7aSBzbG90PSZxdW90O3ByZWZpeCZxdW90OyBjbGFzcz0mcXVvdDtlbC1pbnB1dF9faWNvbiBlbC1pY29uLXNlYXJjaCZxdW90OyZndDsmbHQ7L2kmZ3Q7XG4gICZsdDsvZWwtaW5wdXQmZ3Q7XG4mbHQ7L2RpdiZndDtcblxuJmx0O3N0eWxlJmd0O1xuICAuZGVtby1pbnB1dC1sYWJlbCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxMzBweDtcbiAgfVxuJmx0Oy9zdHlsZSZndDtcblxuJmx0O3NjcmlwdCZndDtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXQxOiAnJyxcbiAgICAgIGlucHV0MjogJycsXG4gICAgICBpbnB1dDM6ICcnLFxuICAgICAgaW5wdXQ0OiAnJ1xuICAgIH1cbiAgfVxufVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiem9uZS1kZS10ZXh0ZVwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjem9uZS1kZS10ZXh0ZVwiPsK2PC9hPiBab25lIGRlIHRleHRlPC9oMz5cbjxwPlVuZSB6b25lIGRlIHRleHRlIGRlIHRhaWxsZSByw6lnbGFibGUgw6AgbGEgc291cmlzIHBvdXIgw6ljcmlyZSBwbHVzaWV1cnMgbGlnbmVzLiBBam91dGV6IGwnYXR0cmlidXQgPGNvZGU+dHlwZT0mcXVvdDt0ZXh0YXJlYSZxdW90OzwvY29kZT4gcG91ciBjaGFuZ2VyIDxjb2RlPmlucHV0PC9jb2RlPiBlbiB1biA8Y29kZT50ZXh0YXJlYTwvY29kZT4gbmF0aWYuPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+UsOpZ2xleiBsYSBoYXV0ZXVyIGdyw6JjZSDDoCBsYSBwcm9wcmnDqXTDqSA8Y29kZT5yb3dzPC9jb2RlPi48L3A+XG48L2Rpdj5cbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzUgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDtlbC1pbnB1dFxuICB0eXBlPSZxdW90O3RleHRhcmVhJnF1b3Q7XG4gIDpyb3dzPSZxdW90OzImcXVvdDtcbiAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgdi1tb2RlbD0mcXVvdDt0ZXh0YXJlYSZxdW90OyZndDtcbiZsdDsvZWwtaW5wdXQmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRleHRhcmVhOiAnJ1xuICAgIH1cbiAgfVxufVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiem9uZS1kZS10ZXh0ZS1hdmVjLXRhaWxsZS1hdXRvbWF0aXF1ZVwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjem9uZS1kZS10ZXh0ZS1hdmVjLXRhaWxsZS1hdXRvbWF0aXF1ZVwiPsK2PC9hPiBab25lIGRlIHRleHRlIGF2ZWMgdGFpbGxlIGF1dG9tYXRpcXVlPC9oMz5cbjxwPkNvbmZpZ3VyZXIgbGEgcHJvcHJpw6l0w6kgPGNvZGU+YXV0b3NpemU8L2NvZGU+IHBvdXIgdW5lIHpvbmUgZGUgdGV4dGUgcGVybWV0IGRlIHJlbmRyZSBsYSBoYXV0ZXVyIGF1dG9tYXRpcXVlIGVuIGZvbmN0aW9uIGRlIGxhIHRhaWxsZSBkdSB0ZXh0ZS4gVW4gb2JqZXQgb3B0aW9ucyBwb3VyIMOqdHJlIGZvdXJuaXQgw6AgPGNvZGU+YXV0b3NpemU8L2NvZGU+IGxlcyBub21icmVzIG1pbmltYWwgZXQgbWF4aW1hbCBkZSBsaWduZXMuPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIFxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNiAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWlucHV0XG4gIHR5cGU9JnF1b3Q7dGV4dGFyZWEmcXVvdDtcbiAgYXV0b3NpemVcbiAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgdi1tb2RlbD0mcXVvdDt0ZXh0YXJlYTEmcXVvdDsmZ3Q7XG4mbHQ7L2VsLWlucHV0Jmd0O1xuJmx0O2RpdiBzdHlsZT0mcXVvdDttYXJnaW46IDIwcHggMDsmcXVvdDsmZ3Q7Jmx0Oy9kaXYmZ3Q7XG4mbHQ7ZWwtaW5wdXRcbiAgdHlwZT0mcXVvdDt0ZXh0YXJlYSZxdW90O1xuICA6YXV0b3NpemU9JnF1b3Q7eyBtaW5Sb3dzOiAyLCBtYXhSb3dzOiA0fSZxdW90O1xuICBwbGFjZWhvbGRlcj0mcXVvdDtFbnRyZXogcXVlbHF1ZSBjaG9zZSZxdW90O1xuICB2LW1vZGVsPSZxdW90O3RleHRhcmVhMiZxdW90OyZndDtcbiZsdDsvZWwtaW5wdXQmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRleHRhcmVhMTogJycsXG4gICAgICB0ZXh0YXJlYTI6ICcnXG4gICAgfVxuICB9XG59XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJpbnB1dC1taXh0ZVwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjaW5wdXQtbWl4dGVcIj7CtjwvYT4gSW5wdXQgbWl4dGU8L2gzPlxuPHA+QWpvdXRlciB1biDDqWzDqW1lbnQgYXZhbnQgb3UgYXByw6hzIGwnaW5wdXQsIGfDqW7DqXJhbGVtZW50IGR1IHRleHRlIG91IHVuIGJvdXRvbi48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5VdGlsaXNleiA8Y29kZT5zbG90PC9jb2RlPiBwb3VyIGFqb3V0ZXIgZGVzIMOpbMOpbWVudHMgYXZhbnQgb3UgYXByw6hzIGwnaW5wdXQuPC9wPlxuPC9kaXY+XG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW83IC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZGl2Jmd0O1xuICAmbHQ7ZWwtaW5wdXQgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDsgdi1tb2RlbD0mcXVvdDtpbnB1dDEmcXVvdDsmZ3Q7XG4gICAgJmx0O3RlbXBsYXRlIHNsb3Q9JnF1b3Q7cHJlcGVuZCZxdW90OyZndDtIdHRwOi8vJmx0Oy90ZW1wbGF0ZSZndDtcbiAgJmx0Oy9lbC1pbnB1dCZndDtcbiZsdDsvZGl2Jmd0O1xuJmx0O2RpdiBzdHlsZT0mcXVvdDttYXJnaW4tdG9wOiAxNXB4OyZxdW90OyZndDtcbiAgJmx0O2VsLWlucHV0IHBsYWNlaG9sZGVyPSZxdW90O0VudHJleiBxdWVscXVlIGNob3NlJnF1b3Q7IHYtbW9kZWw9JnF1b3Q7aW5wdXQyJnF1b3Q7Jmd0O1xuICAgICZsdDt0ZW1wbGF0ZSBzbG90PSZxdW90O2FwcGVuZCZxdW90OyZndDsuY29tJmx0Oy90ZW1wbGF0ZSZndDtcbiAgJmx0Oy9lbC1pbnB1dCZndDtcbiZsdDsvZGl2Jmd0O1xuJmx0O2RpdiBzdHlsZT0mcXVvdDttYXJnaW4tdG9wOiAxNXB4OyZxdW90OyZndDtcbiAgJmx0O2VsLWlucHV0IHBsYWNlaG9sZGVyPSZxdW90O0VudHJleiBxdWVscXVlIGNob3NlJnF1b3Q7IHYtbW9kZWw9JnF1b3Q7aW5wdXQzJnF1b3Q7IGNsYXNzPSZxdW90O2lucHV0LXdpdGgtc2VsZWN0JnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1zZWxlY3Qgdi1tb2RlbD0mcXVvdDtzZWxlY3QmcXVvdDsgc2xvdD0mcXVvdDtwcmVwZW5kJnF1b3Q7IHBsYWNlaG9sZGVyPSZxdW90O0Nob2lzaXImcXVvdDsmZ3Q7XG4gICAgICAmbHQ7ZWwtb3B0aW9uIGxhYmVsPSZxdW90O1Jlc3RhdXJhbnQmcXVvdDsgdmFsdWU9JnF1b3Q7MSZxdW90OyZndDsmbHQ7L2VsLW9wdGlvbiZndDtcbiAgICAgICZsdDtlbC1vcHRpb24gbGFiZWw9JnF1b3Q7TnVtLiBDb21tYW5kZSZxdW90OyB2YWx1ZT0mcXVvdDsyJnF1b3Q7Jmd0OyZsdDsvZWwtb3B0aW9uJmd0O1xuICAgICAgJmx0O2VsLW9wdGlvbiBsYWJlbD0mcXVvdDtUZWwmcXVvdDsgdmFsdWU9JnF1b3Q7MyZxdW90OyZndDsmbHQ7L2VsLW9wdGlvbiZndDtcbiAgICAmbHQ7L2VsLXNlbGVjdCZndDtcbiAgICAmbHQ7ZWwtYnV0dG9uIHNsb3Q9JnF1b3Q7YXBwZW5kJnF1b3Q7IGljb249JnF1b3Q7ZWwtaWNvbi1zZWFyY2gmcXVvdDsmZ3Q7Jmx0Oy9lbC1idXR0b24mZ3Q7XG4gICZsdDsvZWwtaW5wdXQmZ3Q7XG4mbHQ7L2RpdiZndDtcblxuJmx0O3N0eWxlJmd0O1xuICAuZWwtc2VsZWN0IC5lbC1pbnB1dCB7XG4gICAgd2lkdGg6IDExMHB4O1xuICB9XG4gIC5pbnB1dC13aXRoLXNlbGVjdCAuZWwtaW5wdXQtZ3JvdXBfX3ByZXBlbmQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIH1cbiZsdDsvc3R5bGUmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuZXhwb3J0IGRlZmF1bHQge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbnB1dDE6ICcnLFxuICAgICAgaW5wdXQyOiAnJyxcbiAgICAgIGlucHV0MzogJycsXG4gICAgICBzZWxlY3Q6ICcnXG4gICAgfVxuICB9XG59XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJ0YWlsbGVzXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiN0YWlsbGVzXCI+wrY8L2E+IFRhaWxsZXM8L2gzPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+QWpvdXRleiBsJ2F0dHJpYnV0IDxjb2RlPnNpemU8L2NvZGU+IHBvdXIgY2hhbmdlciBsYSB0YWlsbGUgZGUgbCdpbnB1dC4gRW4gcGx1cyBkZSBsYSB0YWlsbGUgcGFyIGTDqWZhdXQsIGlsIHkgYSB0cm9pcyBhdXRyZXMgb3B0aW9uczogPGNvZGU+bGFyZ2U8L2NvZGU+LCA8Y29kZT5zbWFsbDwvY29kZT4gZXQgPGNvZGU+bWluaTwvY29kZT4uPC9wPlxuPC9kaXY+XG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW84IC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZGl2IGNsYXNzPSZxdW90O2RlbW8taW5wdXQtc2l6ZSZxdW90OyZndDtcbiAgJmx0O2VsLWlucHV0XG4gICAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgICB2LW1vZGVsPSZxdW90O2lucHV0MSZxdW90OyZndDtcbiAgJmx0Oy9lbC1pbnB1dCZndDtcbiAgJmx0O2VsLWlucHV0XG4gICAgc2l6ZT0mcXVvdDttZWRpdW0mcXVvdDtcbiAgICBwbGFjZWhvbGRlcj0mcXVvdDtFbnRyZXogcXVlbHF1ZSBjaG9zZSZxdW90O1xuICAgIHYtbW9kZWw9JnF1b3Q7aW5wdXQyJnF1b3Q7Jmd0O1xuICAmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7ZWwtaW5wdXRcbiAgICBzaXplPSZxdW90O3NtYWxsJnF1b3Q7XG4gICAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgICB2LW1vZGVsPSZxdW90O2lucHV0MyZxdW90OyZndDtcbiAgJmx0Oy9lbC1pbnB1dCZndDtcbiAgJmx0O2VsLWlucHV0XG4gICAgc2l6ZT0mcXVvdDttaW5pJnF1b3Q7XG4gICAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgICB2LW1vZGVsPSZxdW90O2lucHV0NCZxdW90OyZndDtcbiAgJmx0Oy9lbC1pbnB1dCZndDtcbiZsdDsvZGl2Jmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuZXhwb3J0IGRlZmF1bHQge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbnB1dDE6ICcnLFxuICAgICAgaW5wdXQyOiAnJyxcbiAgICAgIGlucHV0MzogJycsXG4gICAgICBpbnB1dDQ6ICcnXG4gICAgfVxuICB9XG59XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJhdXRvY29tcGxldGlvblwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjYXV0b2NvbXBsZXRpb25cIj7CtjwvYT4gQXV0b2NvbXBsw6l0aW9uPC9oMz5cbjxwPlZvdXMgcG91dmV6IG9idGVuaXIgZGUgbCdhaWRlIG91IGRlcyBzdWdnZXN0aW9ucyBiYXPDqWVzIHN1ciBjZSBxdWUgdm91cyBlbnRyZXouPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+TGUgY29tcG9zYW50IGQnYXV0b2NvbXBsw6l0aW9uIGZvdXJuaXQgZGVzIHN1Z2dlc3Rpb25zIGQnZW50csOpZXMuIEwnYXR0cmlidXQgPGNvZGU+ZmV0Y2gtc3VnZ2VzdGlvbnM8L2NvZGU+IGVzdCB1bmUgbcOpdGhvZGUgcXVpIHJldG91cm5lIGxlcyBzdWdnZXN0aW9ucy4gRGFucyBjZXQgZXhlbXBsZSwgPGNvZGU+cXVlcnlTZWFyY2gocXVlcnlTdHJpbmcsIGNiKTwvY29kZT4gcmVudm9pZSBkZXMgc3VnZ2VzdGlvbnMgw6AgbCdhdXRvY29tcGzDqXRpb24gdmlhIDxjb2RlPmNiKGRhdGEpPC9jb2RlPiBxdWFuZCBlbGxlcyBzb250IHByw6p0ZXMuPC9wPlxuPC9kaXY+XG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW85IC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtcm93IGNsYXNzPSZxdW90O2RlbW8tYXV0b2NvbXBsZXRlJnF1b3Q7Jmd0O1xuICAmbHQ7ZWwtY29sIDpzcGFuPSZxdW90OzEyJnF1b3Q7Jmd0O1xuICAgICZsdDtkaXYgY2xhc3M9JnF1b3Q7c3ViLXRpdGxlJnF1b3Q7Jmd0O0xpc3RlIGRlcyBzdWdnZXN0aW9ucyBhdSBmb2N1cyZsdDsvZGl2Jmd0O1xuICAgICZsdDtlbC1hdXRvY29tcGxldGVcbiAgICAgIGNsYXNzPSZxdW90O2lubGluZS1pbnB1dCZxdW90O1xuICAgICAgdi1tb2RlbD0mcXVvdDtzdGF0ZTEmcXVvdDtcbiAgICAgIDpmZXRjaC1zdWdnZXN0aW9ucz0mcXVvdDtxdWVyeVNlYXJjaCZxdW90O1xuICAgICAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgICAgIEBzZWxlY3Q9JnF1b3Q7aGFuZGxlU2VsZWN0JnF1b3Q7XG4gICAgJmd0OyZsdDsvZWwtYXV0b2NvbXBsZXRlJmd0O1xuICAmbHQ7L2VsLWNvbCZndDtcbiAgJmx0O2VsLWNvbCA6c3Bhbj0mcXVvdDsxMiZxdW90OyZndDtcbiAgICAmbHQ7ZGl2IGNsYXNzPSZxdW90O3N1Yi10aXRsZSZxdW90OyZndDtMaXN0ZSBkZXMgc3VnZ2VzdGlvbnMgw6AgbCfDqWNyaXR1cmUmbHQ7L2RpdiZndDtcbiAgICAmbHQ7ZWwtYXV0b2NvbXBsZXRlXG4gICAgICBjbGFzcz0mcXVvdDtpbmxpbmUtaW5wdXQmcXVvdDtcbiAgICAgIHYtbW9kZWw9JnF1b3Q7c3RhdGUyJnF1b3Q7XG4gICAgICA6ZmV0Y2gtc3VnZ2VzdGlvbnM9JnF1b3Q7cXVlcnlTZWFyY2gmcXVvdDtcbiAgICAgIHBsYWNlaG9sZGVyPSZxdW90O0VudHJleiBxdWVscXVlIGNob3NlJnF1b3Q7XG4gICAgICA6dHJpZ2dlci1vbi1mb2N1cz0mcXVvdDtmYWxzZSZxdW90O1xuICAgICAgQHNlbGVjdD0mcXVvdDtoYW5kbGVTZWxlY3QmcXVvdDtcbiAgICAmZ3Q7Jmx0Oy9lbC1hdXRvY29tcGxldGUmZ3Q7XG4gICZsdDsvZWwtY29sJmd0O1xuJmx0Oy9lbC1yb3cmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxpbmtzOiBbXSxcbiAgICAgICAgc3RhdGUxOiAnJyxcbiAgICAgICAgc3RhdGUyOiAnJ1xuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHF1ZXJ5U2VhcmNoKHF1ZXJ5U3RyaW5nLCBjYikge1xuICAgICAgICB2YXIgbGlua3MgPSB0aGlzLmxpbmtzO1xuICAgICAgICB2YXIgcmVzdWx0cyA9IHF1ZXJ5U3RyaW5nID8gbGlua3MuZmlsdGVyKHRoaXMuY3JlYXRlRmlsdGVyKHF1ZXJ5U3RyaW5nKSkgOiBsaW5rcztcbiAgICAgICAgLy8gY2FsbCBjYWxsYmFjayBmdW5jdGlvbiB0byByZXR1cm4gc3VnZ2VzdGlvbnNcbiAgICAgICAgY2IocmVzdWx0cyk7XG4gICAgICB9LFxuICAgICAgY3JlYXRlRmlsdGVyKHF1ZXJ5U3RyaW5nKSB7XG4gICAgICAgIHJldHVybiAobGluaykgPSZndDsge1xuICAgICAgICAgIHJldHVybiAobGluay52YWx1ZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocXVlcnlTdHJpbmcudG9Mb3dlckNhc2UoKSkgPT09IDApO1xuICAgICAgICB9O1xuICAgICAgfSxcbiAgICAgIGxvYWRBbGwoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgeyAmcXVvdDt2YWx1ZSZxdW90OzogJnF1b3Q7dnVlJnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlJnF1b3Q7IH0sXG4gICAgICAgICAgeyAmcXVvdDt2YWx1ZSZxdW90OzogJnF1b3Q7ZWxlbWVudCZxdW90OywgJnF1b3Q7bGluayZxdW90OzogJnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudCZxdW90OyB9LFxuICAgICAgICAgIHsgJnF1b3Q7dmFsdWUmcXVvdDs6ICZxdW90O2Nvb2tpbmcmcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2Nvb2tpbmcmcXVvdDsgfSxcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDttaW50LXVpJnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9taW50LXVpJnF1b3Q7IH0sXG4gICAgICAgICAgeyAmcXVvdDt2YWx1ZSZxdW90OzogJnF1b3Q7dnVleCZxdW90OywgJnF1b3Q7bGluayZxdW90OzogJnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZXgmcXVvdDsgfSxcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDt2dWUtcm91dGVyJnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlLXJvdXRlciZxdW90OyB9LFxuICAgICAgICAgIHsgJnF1b3Q7dmFsdWUmcXVvdDs6ICZxdW90O2JhYmVsJnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vYmFiZWwvYmFiZWwmcXVvdDsgfVxuICAgICAgICAgXTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVTZWxlY3QoaXRlbSkge1xuICAgICAgICBjb25zb2xlLmxvZyhpdGVtKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG1vdW50ZWQoKSB7XG4gICAgICB0aGlzLmxpbmtzID0gdGhpcy5sb2FkQWxsKCk7XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJ0ZW1wbGF0ZS1wZXJzb25uYWxpc2VcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI3RlbXBsYXRlLXBlcnNvbm5hbGlzZVwiPsK2PC9hPiBUZW1wbGF0ZSBwZXJzb25uYWxpc8OpPC9oMz5cbjxwPlZvdXMgcG91dmV6IHBlcnNvbm5hbGlzZXIgbGEgbWFuacOocmUgZG9udCBsZXMgc3VnZ2VzdGlvbnMgc29udCBhZmZpY2jDqWVzLjwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICA8ZGl2PjxwPlV0aWxpc2V6IDxjb2RlPnNjb3BlZCBzbG90PC9jb2RlPiBwb3VyIHBlcnNvbm5hbGlzZXIgbGVzIGRpZmbDqXJlbnRlcyBzdWdnZXN0aW9ucy4gRGFucyBsZSBzY29wZSwgdm91cyBwb3V2ZXogYWNjw6lkZXIgw6AgbCdvYmpldCBzdWdnZXN0aW9uIHZpYSBsYSBjbMOpIDxjb2RlPml0ZW08L2NvZGU+LjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMTAgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDtlbC1hdXRvY29tcGxldGVcbiAgcG9wcGVyLWNsYXNzPSZxdW90O215LWF1dG9jb21wbGV0ZSZxdW90O1xuICB2LW1vZGVsPSZxdW90O3N0YXRlJnF1b3Q7XG4gIDpmZXRjaC1zdWdnZXN0aW9ucz0mcXVvdDtxdWVyeVNlYXJjaCZxdW90O1xuICBwbGFjZWhvbGRlcj0mcXVvdDtFbnRyZXogcXVlbHF1ZSBjaG9zZSZxdW90O1xuICBAc2VsZWN0PSZxdW90O2hhbmRsZVNlbGVjdCZxdW90OyZndDtcbiAgJmx0O2lcbiAgICBjbGFzcz0mcXVvdDtlbC1pY29uLWVkaXQgZWwtaW5wdXRfX2ljb24mcXVvdDtcbiAgICBzbG90PSZxdW90O3N1ZmZpeCZxdW90O1xuICAgIEBjbGljaz0mcXVvdDtoYW5kbGVJY29uQ2xpY2smcXVvdDsmZ3Q7XG4gICZsdDsvaSZndDtcbiAgJmx0O3RlbXBsYXRlIHNsb3Qtc2NvcGU9JnF1b3Q7eyBpdGVtIH0mcXVvdDsmZ3Q7XG4gICAgJmx0O2RpdiBjbGFzcz0mcXVvdDt2YWx1ZSZxdW90OyZndDt7eyBpdGVtLnZhbHVlIH19Jmx0Oy9kaXYmZ3Q7XG4gICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bGluayZxdW90OyZndDt7eyBpdGVtLmxpbmsgfX0mbHQ7L3NwYW4mZ3Q7XG4gICZsdDsvdGVtcGxhdGUmZ3Q7XG4mbHQ7L2VsLWF1dG9jb21wbGV0ZSZndDtcblxuJmx0O3N0eWxlJmd0O1xuICAubXktYXV0b2NvbXBsZXRlIHtcbiAgICBsaSB7XG4gICAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICAgICAgcGFkZGluZzogN3B4O1xuXG4gICAgICAudmFsdWUge1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIH1cbiAgICAgIC5saW5rIHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBjb2xvcjogI2I0YjRiNDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiZsdDsvc3R5bGUmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGlua3M6IFtdLFxuICAgICAgICBzdGF0ZTogJydcbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBxdWVyeVNlYXJjaChxdWVyeVN0cmluZywgY2IpIHtcbiAgICAgICAgdmFyIGxpbmtzID0gdGhpcy5saW5rcztcbiAgICAgICAgdmFyIHJlc3VsdHMgPSBxdWVyeVN0cmluZyA/IGxpbmtzLmZpbHRlcih0aGlzLmNyZWF0ZUZpbHRlcihxdWVyeVN0cmluZykpIDogbGlua3M7XG4gICAgICAgIC8vIGNhbGwgY2FsbGJhY2sgZnVuY3Rpb24gdG8gcmV0dXJuIHN1Z2dlc3Rpb24gb2JqZWN0c1xuICAgICAgICBjYihyZXN1bHRzKTtcbiAgICAgIH0sXG4gICAgICBjcmVhdGVGaWx0ZXIocXVlcnlTdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIChsaW5rKSA9Jmd0OyB7XG4gICAgICAgICAgcmV0dXJuIChsaW5rLnZhbHVlLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxdWVyeVN0cmluZy50b0xvd2VyQ2FzZSgpKSA9PT0gMCk7XG4gICAgICAgIH07XG4gICAgICB9LFxuICAgICAgbG9hZEFsbCgpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDt2dWUmcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUmcXVvdDsgfSxcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDtlbGVtZW50JnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50JnF1b3Q7IH0sXG4gICAgICAgICAgeyAmcXVvdDt2YWx1ZSZxdW90OzogJnF1b3Q7Y29va2luZyZxdW90OywgJnF1b3Q7bGluayZxdW90OzogJnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvY29va2luZyZxdW90OyB9LFxuICAgICAgICAgIHsgJnF1b3Q7dmFsdWUmcXVvdDs6ICZxdW90O21pbnQtdWkmcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL21pbnQtdWkmcXVvdDsgfSxcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDt2dWV4JnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVleCZxdW90OyB9LFxuICAgICAgICAgIHsgJnF1b3Q7dmFsdWUmcXVvdDs6ICZxdW90O3Z1ZS1yb3V0ZXImcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtcm91dGVyJnF1b3Q7IH0sXG4gICAgICAgICAgeyAmcXVvdDt2YWx1ZSZxdW90OzogJnF1b3Q7YmFiZWwmcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9iYWJlbC9iYWJlbCZxdW90OyB9XG4gICAgICAgICBdO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZVNlbGVjdChpdGVtKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGl0ZW0pO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZUljb25DbGljayhldikge1xuICAgICAgICBjb25zb2xlLmxvZyhldik7XG4gICAgICB9XG4gICAgfSxcbiAgICBtb3VudGVkKCkge1xuICAgICAgdGhpcy5saW5rcyA9IHRoaXMubG9hZEFsbCgpO1xuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwicmVjaGVyY2hlLWRpc3RhbnRlXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNyZWNoZXJjaGUtZGlzdGFudGVcIj7CtjwvYT4gUmVjaGVyY2hlIGRpc3RhbnRlPC9oMz5cbjxwPlZvdXMgcG91dmV6IGFsbGVyIGNoZXJjaGVyIGRlcyBpbmZvcyBkZSBzdWdnZXN0aW9ucyBzdXIgdW4gc2VydmV1ciBkaXN0YW50LjwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICBcbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzExIC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtYXV0b2NvbXBsZXRlXG4gIHYtbW9kZWw9JnF1b3Q7c3RhdGUmcXVvdDtcbiAgOmZldGNoLXN1Z2dlc3Rpb25zPSZxdW90O3F1ZXJ5U2VhcmNoQXN5bmMmcXVvdDtcbiAgcGxhY2Vob2xkZXI9JnF1b3Q7RW50cmV6IHF1ZWxxdWUgY2hvc2UmcXVvdDtcbiAgQHNlbGVjdD0mcXVvdDtoYW5kbGVTZWxlY3QmcXVvdDtcbiZndDsmbHQ7L2VsLWF1dG9jb21wbGV0ZSZndDtcbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGlua3M6IFtdLFxuICAgICAgICBzdGF0ZTogJycsXG4gICAgICAgIHRpbWVvdXQ6ICBudWxsXG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgbG9hZEFsbCgpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDt2dWUmcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUmcXVvdDsgfSxcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDtlbGVtZW50JnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50JnF1b3Q7IH0sXG4gICAgICAgICAgeyAmcXVvdDt2YWx1ZSZxdW90OzogJnF1b3Q7Y29va2luZyZxdW90OywgJnF1b3Q7bGluayZxdW90OzogJnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvY29va2luZyZxdW90OyB9LFxuICAgICAgICAgIHsgJnF1b3Q7dmFsdWUmcXVvdDs6ICZxdW90O21pbnQtdWkmcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL21pbnQtdWkmcXVvdDsgfSxcbiAgICAgICAgICB7ICZxdW90O3ZhbHVlJnF1b3Q7OiAmcXVvdDt2dWV4JnF1b3Q7LCAmcXVvdDtsaW5rJnF1b3Q7OiAmcXVvdDtodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVleCZxdW90OyB9LFxuICAgICAgICAgIHsgJnF1b3Q7dmFsdWUmcXVvdDs6ICZxdW90O3Z1ZS1yb3V0ZXImcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtcm91dGVyJnF1b3Q7IH0sXG4gICAgICAgICAgeyAmcXVvdDt2YWx1ZSZxdW90OzogJnF1b3Q7YmFiZWwmcXVvdDssICZxdW90O2xpbmsmcXVvdDs6ICZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9iYWJlbC9iYWJlbCZxdW90OyB9XG4gICAgICAgICBdO1xuICAgICAgfSxcbiAgICAgIHF1ZXJ5U2VhcmNoQXN5bmMocXVlcnlTdHJpbmcsIGNiKSB7XG4gICAgICAgIHZhciBsaW5rcyA9IHRoaXMubGlua3M7XG4gICAgICAgIHZhciByZXN1bHRzID0gcXVlcnlTdHJpbmcgPyBsaW5rcy5maWx0ZXIodGhpcy5jcmVhdGVGaWx0ZXIocXVlcnlTdHJpbmcpKSA6IGxpbmtzO1xuXG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpO1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0mZ3Q7IHtcbiAgICAgICAgICBjYihyZXN1bHRzKTtcbiAgICAgICAgfSwgMzAwMCAqIE1hdGgucmFuZG9tKCkpO1xuICAgICAgfSxcbiAgICAgIGNyZWF0ZUZpbHRlcihxdWVyeVN0cmluZykge1xuICAgICAgICByZXR1cm4gKGxpbmspID0mZ3Q7IHtcbiAgICAgICAgICByZXR1cm4gKGxpbmsudmFsdWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKHF1ZXJ5U3RyaW5nLnRvTG93ZXJDYXNlKCkpID09PSAwKTtcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVTZWxlY3QoaXRlbSkge1xuICAgICAgICBjb25zb2xlLmxvZyhpdGVtKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG1vdW50ZWQoKSB7XG4gICAgICB0aGlzLmxpbmtzID0gdGhpcy5sb2FkQWxsKCk7XG4gICAgfVxuICB9O1xuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwidGFpbGxlLWxpbWl0ZVwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjdGFpbGxlLWxpbWl0ZVwiPsK2PC9hPiBUYWlsbGUgbGltaXRlPC9oMz5cbjxkZW1vLWJsb2NrPlxuICAgICAgICA8ZGl2PjxwPjxjb2RlPm1heGxlbmd0aDwvY29kZT4gZXQgPGNvZGU+bWlubGVuZ3RoPC9jb2RlPiBzb250IGRlcyBhdHRyaWJ1dHMgbmF0aWZzLCBpbmRpcXVhbnQgbGEgdGFpbGxlIGxpbWl0ZSBkZSBsJ2lucHV0LiBMZSBub21icmUgZGUgY2FyYWN0w6hyZXMgZXN0IG1lc3Vyw6kgcGFyIGxhIHRhaWxsZSBkZSBsYSBjaGFpbmUgSmF2YXNjcmlwdC4gU2kgdm91cyB1dGlsaXNleiA8Y29kZT5tYXhsZW5ndGg8L2NvZGU+LCB2b3VzIHBvdXJyZXogbW9udHJlciBsZSBub21icmUgZGUgY2FyYWN0w6hyZXMgZW4gbWV0dGFudCA8Y29kZT5zaG93LXdvcmQtbGltaXQ8L2NvZGU+IMOgIDxjb2RlPnRydWU8L2NvZGU+LjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMTIgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDtlbC1pbnB1dFxuICB0eXBlPSZxdW90O3RleHQmcXVvdDtcbiAgcGxhY2Vob2xkZXI9JnF1b3Q7UGxlYXNlIGlucHV0JnF1b3Q7XG4gIHYtbW9kZWw9JnF1b3Q7dGV4dCZxdW90O1xuICBtYXhsZW5ndGg9JnF1b3Q7MTAmcXVvdDtcbiAgc2hvdy13b3JkLWxpbWl0XG4mZ3Q7XG4mbHQ7L2VsLWlucHV0Jmd0O1xuJmx0O2RpdiBzdHlsZT0mcXVvdDttYXJnaW46IDIwcHggMDsmcXVvdDsmZ3Q7Jmx0Oy9kaXYmZ3Q7XG4mbHQ7ZWwtaW5wdXRcbiAgdHlwZT0mcXVvdDt0ZXh0YXJlYSZxdW90O1xuICBwbGFjZWhvbGRlcj0mcXVvdDtQbGVhc2UgaW5wdXQmcXVvdDtcbiAgdi1tb2RlbD0mcXVvdDt0ZXh0YXJlYSZxdW90O1xuICBtYXhsZW5ndGg9JnF1b3Q7MzAmcXVvdDtcbiAgc2hvdy13b3JkLWxpbWl0XG4mZ3Q7XG4mbHQ7L2VsLWlucHV0Jmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuZXhwb3J0IGRlZmF1bHQge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXh0OiAnJyxcbiAgICAgIHRleHRhcmVhOiAnJ1xuICAgIH1cbiAgfVxufVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiYXR0cmlidXRzLWRlLWwtaW5wdXRcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2F0dHJpYnV0cy1kZS1sLWlucHV0XCI+wrY8L2E+IEF0dHJpYnV0cyBkZSBsJ0lucHV0PC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5BdHRyaWJ1dDwvdGg+XG48dGg+RGVzY3JpcHRpb248L3RoPlxuPHRoPlR5cGU8L3RoPlxuPHRoPlZhbGV1cnMgYWNjZXB0w6llczwvdGg+XG48dGg+RMOpZmF1dDwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD50eXBlPC90ZD5cbjx0ZD5UeXBlIGRlIGwnaW5wdXQuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPnRleHQsIHRleHRhcmVhIGV0IGF1dHJlcyA8YSBocmVmPVwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0Zvcm1fJTNDaW5wdXQlM0VfdHlwZXNcIj50eXBlcyBkJ2lucHV0IG5hdGlmczwvYT48L3RkPlxuPHRkPnRleHQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD52YWx1ZSAvIHYtbW9kZWw8L3RkPlxuPHRkPlZhcmlhYmxlIGxpw6llLjwvdGQ+XG48dGQ+c3RyaW5nIC8gbnVtYmVyPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm1heGxlbmd0aDwvdGQ+XG48dGQ+SWRlbnRpcXVlIMOgIDxjb2RlPm1heGxlbmd0aDwvY29kZT4gZGFucyBsJ2lucHV0IG5hdGlmLjwvdGQ+XG48dGQ+bnVtYmVyPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm1pbmxlbmd0aDwvdGQ+XG48dGQ+SWRlbnRpcXVlIMOgIDxjb2RlPm1pbmxlbmd0aDwvY29kZT4gZGFucyBsJ2lucHV0IG5hdGlmLjwvdGQ+XG48dGQ+bnVtYmVyPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNob3ctd29yZC1saW1pdDwvdGQ+XG48dGQ+QWZmaWNoZSBsZSBub21icmUgZGUgY2FyYWN0w6hyZXMgcmVzdGFudO+8jCBuZSBtYXJjaGUgcXVlIGxvcnNxdWUgPGNvZGU+dHlwZTwvY29kZT4gZXN0ICd0ZXh0JyBvdSAndGV4dGFyZWEnLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnBsYWNlaG9sZGVyPC90ZD5cbjx0ZD5QbGFjZWhvbGRlciBkZSBsJyBJbnB1dC48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5jbGVhcmFibGU8L3RkPlxuPHRkPlNpIGxlIGJvdXRvbiBkZSByZXNldCBhcHBhcmHDrnQuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+c2hvdy1wYXNzd29yZDwvdGQ+XG48dGQ+U2kgbGUgY2hhbXAgZG9pdCB1biBjaGFtcCBkZSBtb3QgZGUgcGFzc2UgYXZlYyBib3V0b24gZGUgdmlzdWFsaXNhdGlvbi48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5kaXNhYmxlZDwvdGQ+XG48dGQ+U2kgbGUgY2hhbXAgZXN0IGTDqXNhY3RpdsOpLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNpemU8L3RkPlxuPHRkPlRhaWxsZSBkdSBjaGFtcCwgbWFyY2hlIHF1YW5kIDxjb2RlPnR5cGU8L2NvZGU+IG4nZXN0IHBhcyAndGV4dGFyZWEnLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD5tZWRpdW0gLyBzbWFsbCAvIG1pbmk8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnByZWZpeC1pY29uPC90ZD5cbjx0ZD5DbGFzc2UgZGUgbCdpY8O0bmUgZGUgcHLDqWZpeGUuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+c3VmZml4LWljb248L3RkPlxuPHRkPkNsYXNzZSBkZSBsJ2nEiW9uZSBkZSBzdWZmaXhlLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnJvd3M8L3RkPlxuPHRkPk5vbWJyZSBkZSBsaWduZSBwb3VyIHVuZSB6b25lIGRlIHRleHRlLCBuZSBtYXJjaGUgcXVlIHNpIDxjb2RlPnR5cGU8L2NvZGU+IGVzdCAndGV4dGFyZWEnLjwvdGQ+XG48dGQ+bnVtYmVyPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPjI8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5hdXRvc2l6ZTwvdGQ+XG48dGQ+U2kgbGEgem9uZSBkZSB0ZXh0ZSDDoCB1bmUgaGF1dGV1ciBhZGFwdGF0aXZlLCBuZSBtYXJjaGUgcXVlIHNpIDxjb2RlPnR5cGU8L2NvZGU+IGVzdCAndGV4dGFyZWEnLiBQZXV0IGFjY2VwdGVyIHVuIG9iamV0LCBlLmcuIHsgbWluUm93czogMiwgbWF4Um93czogNiB9PC90ZD5cbjx0ZD5ib29sZWFuIC8gb2JqZWN0PC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+YXV0b2NvbXBsZXRlPC90ZD5cbjx0ZD5JZGVudGlxdWUgw6AgPGNvZGU+YXV0b2NvbXBsZXRlPC9jb2RlPiBkYW5zIGwnaW5wdXQgbmF0aWYuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPm9uIC8gb2ZmPC90ZD5cbjx0ZD5vZmY8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5hdXRvLWNvbXBsZXRlPC90ZD5cbjx0ZD5AREVQUkVDQVRFRCBkYW5zIGxhIHByb2NoYWluZSB2ZXJzaW9uIG1hamV1cmUuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPm9uL29mZjwvdGQ+XG48dGQ+b2ZmPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bmFtZTwvdGQ+XG48dGQ+SWRlbnRpcXVlIMOgIDxjb2RlPm5hbWU8L2NvZGU+IGRhbnMgbCdpbnB1dCBuYXRpZi48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5yZWFkb25seTwvdGQ+XG48dGQ+SWRlbnRpcXVlIMOgIDxjb2RlPnJlYWRvbmx5PC9jb2RlPiBkYW5zIGwnaW5wdXQgbmF0aWYuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bWF4PC90ZD5cbjx0ZD5JZGVudGlxdWUgw6AgPGNvZGU+bWF4PC9jb2RlPiBkYW5zIGwnaW5wdXQgbmF0aWYuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bWluPC90ZD5cbjx0ZD5JZGVudGlxdWUgw6AgPGNvZGU+bWluPC9jb2RlPiBkYW5zIGwnaW5wdXQgbmF0aWYuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+c3RlcDwvdGQ+XG48dGQ+SWRlbnRpcXVlIMOgIDxjb2RlPnN0ZXA8L2NvZGU+IGRhbnMgbCdpbnB1dCBuYXRpZi48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5yZXNpemU8L3RkPlxuPHRkPkNvbnRyw7RsZSBsZXMgY2hhbmdlbWVudHMgZGUgdGFpbGxlIGF1dG9yaXPDqXMuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPm5vbmUsIGJvdGgsIGhvcml6b250YWwsIHZlcnRpY2FsPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5hdXRvZm9jdXM8L3RkPlxuPHRkPklkZW50aXF1ZSDDoCA8Y29kZT5hdXRvZm9jdXM8L2NvZGU+IGRhbnMgbCdpbnB1dCBuYXRpZi48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5mb3JtPC90ZD5cbjx0ZD5JZGVudGlxdWUgw6AgPGNvZGU+Zm9ybTwvY29kZT4gZGFucyBsJ2lucHV0IG5hdGlmLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmxhYmVsPC90ZD5cbjx0ZD5UZXh0ZSBkdSBsYWJlbC48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD50YWJpbmRleDwvdGQ+XG48dGQ+dGFiaW5kZXggZGUgbCdpbnB1dC48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+LTwvdGQ+XG48dGQ+LTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnZhbGlkYXRlLWV2ZW50PC90ZD5cbjx0ZD5TaSBsYSB2YWxpZGF0aW9uIGRvaXQgYXZvaXIgbGlldS48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPi08L3RkPlxuPHRkPnRydWU8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwic2xvdHMtZGUtbC1pbnB1dFwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjc2xvdHMtZGUtbC1pbnB1dFwiPsK2PC9hPiBTbG90cyBkZSBsJ0lucHV0PC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5Ob208L3RoPlxuPHRoPkRlc2NyaXB0aW9uPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnByZWZpeDwvdGQ+XG48dGQ+Q29udGVudSBkdSBwcsOpZml4ZSwgbmUgbWFyY2hlIHF1ZSBzaSA8Y29kZT50eXBlPC9jb2RlPiBlc3QgJ3RleHQnLjwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnN1ZmZpeDwvdGQ+XG48dGQ+Q29udGVudSBkdSBzdWZmaXhlLCBuZSBtYXJjaGUgcXVlIHNpIDxjb2RlPnR5cGU8L2NvZGU+IGVzdCAndGV4dCcuPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cHJlcGVuZDwvdGQ+XG48dGQ+Q29udGVudSDDoCBham91dGVyIGF2YW50IGwnSW5wdXQsIG5lIG1hcmNoZSBxdWUgc2kgPGNvZGU+dHlwZTwvY29kZT4gZXN0ICd0ZXh0Jy48L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5hcHBlbmQ8L3RkPlxuPHRkPkNvbnRlbnUgw6AgYWpvdXRlciBhcHLDqHMgbCdJbnB1dCwgbmUgbWFyY2hlIHF1ZSBzaSA8Y29kZT50eXBlPC9jb2RlPiBlc3QgJ3RleHQnLjwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJldmVuZW1lbnRzXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNldmVuZW1lbnRzXCI+wrY8L2E+IMOJdsOobmVtZW50czwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+Tm9tPC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48dGg+UGFyYW3DqHRyZXM8L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+Ymx1cjwvdGQ+XG48dGQ+U2UgZMOpY2xlbmNoZSBxdWFuZCBJbnB1dCBwZXJkcyBsZSBmb2N1cy48L3RkPlxuPHRkPihldmVudDogRXZlbnQpPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Zm9jdXM8L3RkPlxuPHRkPlNlIGTDqWNsZW5jaGUgcXVhbmQgSW5wdXQgYSBsZSBmb2N1cy48L3RkPlxuPHRkPihldmVudDogRXZlbnQpPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2hhbmdlPC90ZD5cbjx0ZD5TZSBkw6ljbGVuY2hlIHF1YW5kIGxhIHZhbGV1ciBjaGFuZ2UuPC90ZD5cbjx0ZD4odmFsdWU6IHN0cmluZyBcXCBudW1iZXIpPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2hhbmdlPC90ZD5cbjx0ZD5Ew6ljbGVuY2jDqSB1bmlxdWVtZW50IGxvcnNxdWUgbGEgem9uZSBkZSBzYWlzaWUgcGVyZCBsZSBmb2N1cyBvdSBxdWUgbCd1dGlsaXNhdGV1ciBhcHB1aWUgc3VyIEVudHLDqWUuPC90ZD5cbjx0ZD4odmFsdWU6IHN0cmluZyB8IG51bWJlcik8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5pbnB1dDwvdGQ+XG48dGQ+RMOpY2xlbmNow6kgbG9yc3F1ZSBsYSB2YWxldXIgZCdlbnRyw6llIGNoYW5nZS48L3RkPlxuPHRkPih2YWx1ZTogc3RyaW5nIHwgbnVtYmVyKTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmNsZWFyPC90ZD5cbjx0ZD5TZSBkw6ljbGVuY2hlIHF1YW5kIGxlIGNoYW1wIGVzdCBlZmZhY8OpIHBhciBsZSBib3V0b24gZGUgcmVzZXQuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwibWV0aG9kZXMtZGUtbC1pbnB1dFwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjbWV0aG9kZXMtZGUtbC1pbnB1dFwiPsK2PC9hPiBNw6l0aG9kZXMgZGUgbCdJbnB1dDwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+TcOpdGhvZGU8L3RoPlxuPHRoPkRlc2NyaXB0aW9uPC90aD5cbjx0aD5QYXJhbcOodHJlczwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD5mb2N1czwvdGQ+XG48dGQ+TWV0IGxlIGZvY3VzIHN1ciBsZSBjaGFtcC48L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmJsdXI8L3RkPlxuPHRkPlJldGlyZSBsZSBmb2N1cyBkZSBsZSBjaGFtcC48L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNlbGVjdDwvdGQ+XG48dGQ+U8OpbGVjdGlvbm5lIGxlIHRleHRlIGR1IGNoYW1wLjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMyBpZD1cImF0dHJpYnV0cy1kZS1sLWF1dG9jb21wbGV0aW9uXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNhdHRyaWJ1dHMtZGUtbC1hdXRvY29tcGxldGlvblwiPsK2PC9hPiBBdHRyaWJ1dHMgZGUgbCdhdXRvY29tcGzDqXRpb248L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPkF0dHJpYnV0PC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48dGg+VHlwZTwvdGg+XG48dGg+T3B0aW9uczwvdGg+XG48dGg+RMOpZmF1dDwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD5wbGFjZWhvbGRlcjwvdGQ+XG48dGQ+TGUgcGxhY2Vob2xkZXIgZGUgbCdhdXRvY29tcGzDqXRpb24uPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2xlYXJhYmxlPC90ZD5cbjx0ZD5TaSB1biBib3V0b24gZCdlZmZhY2VtZW50IGRvaXQgYXBwYXJhw650cmUuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZGlzYWJsZWQ8L3RkPlxuPHRkPlNpIGwnYXV0b2NvbXBsw6l0aW9uIGVzdCBkw6lhY3RpdsOpZS48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD52YWx1ZS1rZXk8L3RkPlxuPHRkPk5vbSBkZSBsYSBjbMOpIGRlIGwnb2JqZXQgc3VnZ2VzdGlvbiBwb3VyIGwnYWZmaWNoYWdlLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPnZhbHVlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+aWNvbjwvdGQ+XG48dGQ+Tm9tIGRlIGwnaWPDtG5lLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnZhbHVlPC90ZD5cbjx0ZD5WYXJpYWJsZSBsacOpZS48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5kZWJvdW5jZTwvdGQ+XG48dGQ+RMOpbGFpIGQnYXR0ZW50ZSBhcHLDqHMgw6ljcml0dXJlLCBlbiBtaWxsaXNlY29uZGVzLjwvdGQ+XG48dGQ+bnVtYmVyPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPjMwMDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnBsYWNlbWVudDwvdGQ+XG48dGQ+RW1wbGFjZW1lbnQgZHUgbWVudSBwb3B1cC48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+dG9wIC8gdG9wLXN0YXJ0IC8gdG9wLWVuZCAvIGJvdHRvbSAvIGJvdHRvbS1zdGFydCAvIGJvdHRvbS1lbmQ8L3RkPlxuPHRkPmJvdHRvbS1zdGFydDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmZldGNoLXN1Z2dlc3Rpb25zPC90ZD5cbjx0ZD5MYSBtw6l0aG9kZSBwb3VyIHJlY2hlcmNoZXIgbGVzIHN1Z2dlc3Rpb25zLiBMb3JzcXUnZWxsZXMgc29udCBwcsOqdGVzLCBhcHBlbGxlIDxjb2RlPmNhbGxiYWNrKGRhdGE6W10pPC9jb2RlPiBwb3VyIGxlcyByZW52b3llciDDoCBsJ2F1dG9jb21wbMOpdGlvbi48L3RkPlxuPHRkPkZ1bmN0aW9uKHF1ZXJ5U3RyaW5nLCBjYWxsYmFjayk8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cG9wcGVyLWNsYXNzPC90ZD5cbjx0ZD5Ob20gZGUgY2xhc3NlIHBvdXIgbGUgbWVudSBkZSBsJ2F1dG9jb21wbMOpdGlvbi48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD50cmlnZ2VyLW9uLWZvY3VzPC90ZD5cbjx0ZD5TaSBsZXMgc3VnZ2VzdGlvbnMgZG9pdmVudCBhcHBhcmHDrnRyZSBxdWFuZCBsJ2lucHV0IGEgbGUgZm9jdXMuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPnRydWU8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5uYW1lPC90ZD5cbjx0ZD5JZGVudGlxdWUgw6AgPGNvZGU+bmFtZTwvY29kZT4gZGFucyBsJ2lucHV0IG5hdGlmLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNlbGVjdC13aGVuLXVubWF0Y2hlZDwvdGQ+XG48dGQ+U2kgdW4gw6l2w6huZW1lbnQgPGNvZGU+c2VsZWN0PC9jb2RlPiBkb2l0IMOqdHJlIMOpbWlzIGFwcsOocyBwcmVzc2lvbiBzdXIgZW50csOpZSBxdWFuZCBpbCBuJ3kgYSBwYXMgZGUgcsOpc3VsdGF0cy48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5sYWJlbDwvdGQ+XG48dGQ+VGV4dGUgZHUgbGFiZWwuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cHJlZml4LWljb248L3RkPlxuPHRkPkNsYXNzZSBkZSBsJ2ljw7RuZSBkZSBwcsOpZml4ZS48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5zdWZmaXgtaWNvbjwvdGQ+XG48dGQ+Q2xhc3NlIGRlIGwnacSJb25lIGRlIHN1ZmZpeGUuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+aGlkZS1sb2FkaW5nPC90ZD5cbjx0ZD5TaSBsJ2ljw7RuZSBkZSBjaGFyZ2VtZW50IGRvaXQgw6p0cmUgY2FjaMOpZSBkYW5zIGxlIGNhcyBkJ3VuZSByZWNoZXJjaGUgZGlzdGFudGUuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cG9wcGVyLWFwcGVuZC10by1ib2R5PC90ZD5cbjx0ZD5TaSBsZSBtZW51IGRvaXQgw6p0cmUgYWpvdXRlciBhdSBib2R5LiBTaSBsZSBwb3NpdGlvbm5lbWVudCBkdSBtZW51IGVzdCBpbmNvcnJlY3QsIGVzc2F5ZXogZGUgbWV0dHJlIGNldHRlIHByb3ByacOpdMOpIMOgIDxjb2RlPmZhbHNlPC9jb2RlPi48L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPi08L3RkPlxuPHRkPnRydWU8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5oaWdobGlnaHQtZmlyc3QtaXRlbTwvdGQ+XG48dGQ+U2kgbGEgcHJlbWnDqHJlIHN1Z2dlc3Rpb24gZGUgbGEgbGlzdGUgaXNzdWUgZGUgbGEgcmVjaGVyY2hlIGRpc3RhbnRlIGRvaXQgw6p0cmUgZW4gc3VyYnJpbGxhbmNlIHBhciBkw6lmYXV0LjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJzbG90cy1kZS1sLWF1dG9jb21wbGV0aW9uXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNzbG90cy1kZS1sLWF1dG9jb21wbGV0aW9uXCI+wrY8L2E+IFNsb3RzIGRlIGwnYXV0b2NvbXBsw6l0aW9uPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5Ob208L3RoPlxuPHRoPkRlc2NyaXB0aW9uPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnByZWZpeDwvdGQ+XG48dGQ+Q29udGVudSBkdSBwcsOpZml4ZS48L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5zdWZmaXg8L3RkPlxuPHRkPkNvbnRlbnUgZHUgc3VmZml4ZS48L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5wcmVwZW5kPC90ZD5cbjx0ZD5Db250ZW51IMOgIGFqb3V0ZXIgYXZhbnQgbGUgY2hhbXAuPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+YXBwZW5kPC90ZD5cbjx0ZD5Db250ZW51IMOgIGFqb3V0ZXIgYXByw6hzIGxlIGNoYW1wLjwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJ0ZW1wbGF0ZS1wZXJzb25uYWxpc2UtcG91ci1sLWF1dG9jb21wbGV0aW9uXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiN0ZW1wbGF0ZS1wZXJzb25uYWxpc2UtcG91ci1sLWF1dG9jb21wbGV0aW9uXCI+wrY8L2E+IFRlbXBsYXRlIHBlcnNvbm5hbGlzw6kgcG91ciBsJ2F1dG9jb21wbMOpdGlvbjwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+Tm9tPC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD7igJQ8L3RkPlxuPHRkPkNvbnRlbnUgcGVyc29ubmFsaXPDqSBwb3VyIGxlcyBzdWdnZXN0aW9ucy4gTGUgcGFyYW3DqHRyZSBkZSBzY29wZSBlc3QgeyBpdGVtIH0uPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMyBpZD1cImV2ZW5lbWVudHMtZGUtbC1hdXRvY29tcGxldGlvblwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjZXZlbmVtZW50cy1kZS1sLWF1dG9jb21wbGV0aW9uXCI+wrY8L2E+IMOJdsOobmVtZW50cyBkZSBsJ2F1dG9jb21wbMOpdGlvbjwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+Tm9tPC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48dGg+UGFyYW3DqHRyZXM8L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+c2VsZWN0PC90ZD5cbjx0ZD5TZSBkw6ljbGVuY2hlIHF1YW5kIHVuZSBzdWdnZXN0aW9uIGVzdCBjbGlxdcOpZS48L3RkPlxuPHRkPkxhIHN1Z2dlc3Rpb24gc8OpbGVjdGlvbm7DqWUuPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2hhbmdlPC90ZD5cbjx0ZD5TZSBkw6ljbGVuY2hlIHF1YW5kIGxhIHZhbGV1ciBjaGFuZ2UuPC90ZD5cbjx0ZD4odmFsdWU6IHN0cmluZyBcXCBudW1iZXIpPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMyBpZD1cIm1ldGhvZGVzLWRlLWwtYXV0b2NvbXBsZXRpb25cIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI21ldGhvZGVzLWRlLWwtYXV0b2NvbXBsZXRpb25cIj7CtjwvYT4gTcOpdGhvZGVzIGRlIGwnYXV0b2NvbXBsw6l0aW9uPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5Nw6l0aG9kZTwvdGg+XG48dGg+RGVzY3JpcHRpb248L3RoPlxuPHRoPlBhcmFtw6h0cmVzPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPmZvY3VzPC90ZD5cbjx0ZD5NZXQgbGUgZm9jdXMgc3VyIGwnw6lsw6ltZW50LjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cblxuICAgICAgPC9zZWN0aW9uPlxuICAgIDwvdGVtcGxhdGU+XG4gICAgPHNjcmlwdD5cbiAgICAgIGltcG9ydCBobGpzIGZyb20gJ2hpZ2hsaWdodC5qcydcbiAgICAgIGltcG9ydCAqIGFzIFZ1ZSBmcm9tIFwidnVlXCJcbiAgICAgIGV4cG9ydCBkZWZhdWx0IHtcbiAgICAgICAgbmFtZTogJ2NvbXBvbmVudC1kb2MnLFxuICAgICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgICAgXCJlbGVtZW50LWRlbW8wXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2lucHV0ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1pbnB1dFwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgIHBsYWNlaG9sZGVyOiBcIkVudHJleiBxdWVscXVlIGNob3NlXCIsXG4gICAgbW9kZWxWYWx1ZTogX2N0eC5pbnB1dCxcbiAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmlucHV0ID0gJGV2ZW50KVxuICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlucHV0OiAnJ1xuICAgIH1cbiAgfVxufVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzFcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfaW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWlucHV0XCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICBtb2RlbFZhbHVlOiBfY3R4LmlucHV0LFxuICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguaW5wdXQgPSAkZXZlbnQpLFxuICAgIGRpc2FibGVkOiB0cnVlXG4gIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXQ6ICcnXG4gICAgfVxuICB9XG59XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vMlwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICBwbGFjZWhvbGRlcjogXCJFbnRyZXogcXVlbHF1ZSBjaG9zZVwiLFxuICAgIG1vZGVsVmFsdWU6IF9jdHguaW5wdXQsXG4gICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5pbnB1dCA9ICRldmVudCksXG4gICAgY2xlYXJhYmxlOiBcIlwiXG4gIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXQ6ICcnXG4gICAgfVxuICB9XG59XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vM1wiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICBwbGFjZWhvbGRlcjogXCJFbnRyZXogdm90cmUgbW90IGRlIHBhc3NlXCIsXG4gICAgbW9kZWxWYWx1ZTogX2N0eC5pbnB1dCxcbiAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmlucHV0ID0gJGV2ZW50KSxcbiAgICBcInNob3ctcGFzc3dvcmRcIjogXCJcIlxuICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlucHV0OiAnJ1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzRcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHg6IF93aXRoQ3R4LCBGcmFnbWVudDogX0ZyYWdtZW50LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2lucHV0ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1pbnB1dFwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiZGVtby1pbnB1dC1zdWZmaXhcIiB9LCBbXG4gICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtby1pbnB1dC1sYWJlbFwiIH0sIFwiQXZlYyBsZXMgYXR0cmlidXRzXCIpLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHVuZSBkYXRlXCIsXG4gICAgICAgIFwic3VmZml4LWljb25cIjogXCJlbC1pY29uLWRhdGVcIixcbiAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5pbnB1dDEsXG4gICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguaW5wdXQxID0gJGV2ZW50KVxuICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IGR1IHRleHRlXCIsXG4gICAgICAgIFwicHJlZml4LWljb25cIjogXCJlbC1pY29uLXNlYXJjaFwiLFxuICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmlucHV0MixcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5pbnB1dDIgPSAkZXZlbnQpXG4gICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICBdKSxcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgeyBjbGFzczogXCJkZW1vLWlucHV0LXN1ZmZpeFwiIH0sIFtcbiAgICAgIF9jcmVhdGVWTm9kZShcInNwYW5cIiwgeyBjbGFzczogXCJkZW1vLWlucHV0LWxhYmVsXCIgfSwgXCJBdmVjIGxlcyBzbG90c1wiKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgIHBsYWNlaG9sZGVyOiBcIkVudHJleiB1bmUgZGF0ZVwiLFxuICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmlucHV0MyxcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5pbnB1dDMgPSAkZXZlbnQpXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoXCJpXCIsIHtcbiAgICAgICAgICAgIHNsb3Q6IFwic3VmZml4XCIsXG4gICAgICAgICAgICBjbGFzczogXCJlbC1pbnB1dF9faWNvbiBlbC1pY29uLWRhdGVcIlxuICAgICAgICAgIH0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgICBwbGFjZWhvbGRlcjogXCJFbnRyZXogZHUgdGV4dGVcIixcbiAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5pbnB1dDQsXG4gICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguaW5wdXQ0ID0gJGV2ZW50KVxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKFwiaVwiLCB7XG4gICAgICAgICAgICBzbG90OiBcInByZWZpeFwiLFxuICAgICAgICAgICAgY2xhc3M6IFwiZWwtaW5wdXRfX2ljb24gZWwtaWNvbi1zZWFyY2hcIlxuICAgICAgICAgIH0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICBdKVxuICBdLCA2NCAvKiBTVEFCTEVfRlJBR01FTlQgKi8pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbnB1dDE6ICcnLFxuICAgICAgaW5wdXQyOiAnJyxcbiAgICAgIGlucHV0MzogJycsXG4gICAgICBpbnB1dDQ6ICcnXG4gICAgfVxuICB9XG59XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vNVwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICB0eXBlOiBcInRleHRhcmVhXCIsXG4gICAgcm93czogMixcbiAgICBwbGFjZWhvbGRlcjogXCJFbnRyZXogcXVlbHF1ZSBjaG9zZVwiLFxuICAgIG1vZGVsVmFsdWU6IF9jdHgudGV4dGFyZWEsXG4gICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC50ZXh0YXJlYSA9ICRldmVudClcbiAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXh0YXJlYTogJydcbiAgICB9XG4gIH1cbn1cbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW82XCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCBGcmFnbWVudDogX0ZyYWdtZW50LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2lucHV0ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1pbnB1dFwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgIHR5cGU6IFwidGV4dGFyZWFcIixcbiAgICAgIGF1dG9zaXplOiBcIlwiLFxuICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICAgIG1vZGVsVmFsdWU6IF9jdHgudGV4dGFyZWExLFxuICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC50ZXh0YXJlYTEgPSAkZXZlbnQpXG4gICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pLFxuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IHN0eWxlOiB7XCJtYXJnaW5cIjpcIjIwcHggMFwifSB9KSxcbiAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgdHlwZTogXCJ0ZXh0YXJlYVwiLFxuICAgICAgYXV0b3NpemU6IHsgbWluUm93czogMiwgbWF4Um93czogNH0sXG4gICAgICBwbGFjZWhvbGRlcjogXCJFbnRyZXogcXVlbHF1ZSBjaG9zZVwiLFxuICAgICAgbW9kZWxWYWx1ZTogX2N0eC50ZXh0YXJlYTIsXG4gICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnRleHRhcmVhMiA9ICRldmVudClcbiAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgXSwgNjQgLyogU1RBQkxFX0ZSQUdNRU5UICovKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGV4dGFyZWExOiAnJyxcbiAgICAgIHRleHRhcmVhMjogJydcbiAgICB9XG4gIH1cbn1cbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW83XCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4OiBfd2l0aEN0eCwgRnJhZ21lbnQ6IF9GcmFnbWVudCwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9vcHRpb24gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLW9wdGlvblwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3NlbGVjdCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtc2VsZWN0XCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1idXR0b25cIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW1xuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCBudWxsLCBbXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgICBwbGFjZWhvbGRlcjogXCJFbnRyZXogcXVlbHF1ZSBjaG9zZVwiLFxuICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmlucHV0MSxcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5pbnB1dDEgPSAkZXZlbnQpXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoXCJ0ZW1wbGF0ZVwiLCB7IHNsb3Q6IFwicHJlcGVuZFwiIH0sIFwiSHR0cDovL1wiKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgXSksXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgc3R5bGU6IHtcIm1hcmdpbi10b3BcIjpcIjE1cHhcIn0gfSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5pbnB1dDIsXG4gICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguaW5wdXQyID0gJGV2ZW50KVxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKFwidGVtcGxhdGVcIiwgeyBzbG90OiBcImFwcGVuZFwiIH0sIFwiLmNvbVwiKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgXSksXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgc3R5bGU6IHtcIm1hcmdpbi10b3BcIjpcIjE1cHhcIn0gfSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5pbnB1dDMsXG4gICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguaW5wdXQzID0gJGV2ZW50KSxcbiAgICAgICAgY2xhc3M6IFwiaW5wdXQtd2l0aC1zZWxlY3RcIlxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfc2VsZWN0LCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnNlbGVjdCxcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguc2VsZWN0ID0gJGV2ZW50KSxcbiAgICAgICAgICAgIHNsb3Q6IFwicHJlcGVuZFwiLFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiQ2hvaXNpclwiXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9vcHRpb24sIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJSZXN0YXVyYW50XCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiMVwiXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9vcHRpb24sIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJOdW0uIENvbW1hbmRlXCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiMlwiXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9vcHRpb24sIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJUZWxcIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCIzXCJcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKSxcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHtcbiAgICAgICAgICAgIHNsb3Q6IFwiYXBwZW5kXCIsXG4gICAgICAgICAgICBpY29uOiBcImVsLWljb24tc2VhcmNoXCJcbiAgICAgICAgICB9KVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgXSlcbiAgXSwgNjQgLyogU1RBQkxFX0ZSQUdNRU5UICovKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXQxOiAnJyxcbiAgICAgIGlucHV0MjogJycsXG4gICAgICBpbnB1dDM6ICcnLFxuICAgICAgc2VsZWN0OiAnJ1xuICAgIH1cbiAgfVxufVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzhcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfaW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWlucHV0XCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhcImRpdlwiLCB7IGNsYXNzOiBcImRlbW8taW5wdXQtc2l6ZVwiIH0sIFtcbiAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICAgIG1vZGVsVmFsdWU6IF9jdHguaW5wdXQxLFxuICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5pbnB1dDEgPSAkZXZlbnQpXG4gICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pLFxuICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICBzaXplOiBcIm1lZGl1bVwiLFxuICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICAgIG1vZGVsVmFsdWU6IF9jdHguaW5wdXQyLFxuICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5pbnB1dDIgPSAkZXZlbnQpXG4gICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pLFxuICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICBzaXplOiBcInNtYWxsXCIsXG4gICAgICBwbGFjZWhvbGRlcjogXCJFbnRyZXogcXVlbHF1ZSBjaG9zZVwiLFxuICAgICAgbW9kZWxWYWx1ZTogX2N0eC5pbnB1dDMsXG4gICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmlucHV0MyA9ICRldmVudClcbiAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSksXG4gICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgIHNpemU6IFwibWluaVwiLFxuICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICAgIG1vZGVsVmFsdWU6IF9jdHguaW5wdXQ0LFxuICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5pbnB1dDQgPSAkZXZlbnQpXG4gICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gIF0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbnB1dDE6ICcnLFxuICAgICAgaW5wdXQyOiAnJyxcbiAgICAgIGlucHV0MzogJycsXG4gICAgICBpbnB1dDQ6ICcnXG4gICAgfVxuICB9XG59XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vOVwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eDogX3dpdGhDdHgsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYXV0b2NvbXBsZXRlID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1hdXRvY29tcGxldGVcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9jb2wgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWNvbFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3JvdyA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtcm93XCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX3JvdywgeyBjbGFzczogXCJkZW1vLWF1dG9jb21wbGV0ZVwiIH0sIHtcbiAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9jb2wsIHsgc3BhbjogMTIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwic3ViLXRpdGxlXCIgfSwgXCJMaXN0ZSBkZXMgc3VnZ2VzdGlvbnMgYXUgZm9jdXNcIiksXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYXV0b2NvbXBsZXRlLCB7XG4gICAgICAgICAgICBjbGFzczogXCJpbmxpbmUtaW5wdXRcIixcbiAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguc3RhdGUxLFxuICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5zdGF0ZTEgPSAkZXZlbnQpLFxuICAgICAgICAgICAgXCJmZXRjaC1zdWdnZXN0aW9uc1wiOiBfY3R4LnF1ZXJ5U2VhcmNoLFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICAgICAgICAgIG9uU2VsZWN0OiBfY3R4LmhhbmRsZVNlbGVjdFxuICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCIsIFwiZmV0Y2gtc3VnZ2VzdGlvbnNcIiwgXCJvblNlbGVjdFwiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY29sLCB7IHNwYW46IDEyIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcInN1Yi10aXRsZVwiIH0sIFwiTGlzdGUgZGVzIHN1Z2dlc3Rpb25zIMOgIGwnw6ljcml0dXJlXCIpLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2F1dG9jb21wbGV0ZSwge1xuICAgICAgICAgICAgY2xhc3M6IFwiaW5saW5lLWlucHV0XCIsXG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnN0YXRlMixcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguc3RhdGUyID0gJGV2ZW50KSxcbiAgICAgICAgICAgIFwiZmV0Y2gtc3VnZ2VzdGlvbnNcIjogX2N0eC5xdWVyeVNlYXJjaCxcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIkVudHJleiBxdWVscXVlIGNob3NlXCIsXG4gICAgICAgICAgICBcInRyaWdnZXItb24tZm9jdXNcIjogZmFsc2UsXG4gICAgICAgICAgICBvblNlbGVjdDogX2N0eC5oYW5kbGVTZWxlY3RcbiAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiLCBcImZldGNoLXN1Z2dlc3Rpb25zXCIsIFwib25TZWxlY3RcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KVxuICAgIF0pLFxuICAgIF86IDFcbiAgfSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxpbmtzOiBbXSxcbiAgICAgICAgc3RhdGUxOiAnJyxcbiAgICAgICAgc3RhdGUyOiAnJ1xuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHF1ZXJ5U2VhcmNoKHF1ZXJ5U3RyaW5nLCBjYikge1xuICAgICAgICB2YXIgbGlua3MgPSB0aGlzLmxpbmtzO1xuICAgICAgICB2YXIgcmVzdWx0cyA9IHF1ZXJ5U3RyaW5nID8gbGlua3MuZmlsdGVyKHRoaXMuY3JlYXRlRmlsdGVyKHF1ZXJ5U3RyaW5nKSkgOiBsaW5rcztcbiAgICAgICAgLy8gY2FsbCBjYWxsYmFjayBmdW5jdGlvbiB0byByZXR1cm4gc3VnZ2VzdGlvbnNcbiAgICAgICAgY2IocmVzdWx0cyk7XG4gICAgICB9LFxuICAgICAgY3JlYXRlRmlsdGVyKHF1ZXJ5U3RyaW5nKSB7XG4gICAgICAgIHJldHVybiAobGluaykgPT4ge1xuICAgICAgICAgIHJldHVybiAobGluay52YWx1ZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YocXVlcnlTdHJpbmcudG9Mb3dlckNhc2UoKSkgPT09IDApO1xuICAgICAgICB9O1xuICAgICAgfSxcbiAgICAgIGxvYWRBbGwoKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgeyBcInZhbHVlXCI6IFwidnVlXCIsIFwibGlua1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWVcIiB9LFxuICAgICAgICAgIHsgXCJ2YWx1ZVwiOiBcImVsZW1lbnRcIiwgXCJsaW5rXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudFwiIH0sXG4gICAgICAgICAgeyBcInZhbHVlXCI6IFwiY29va2luZ1wiLCBcImxpbmtcIjogXCJodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9jb29raW5nXCIgfSxcbiAgICAgICAgICB7IFwidmFsdWVcIjogXCJtaW50LXVpXCIsIFwibGlua1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL21pbnQtdWlcIiB9LFxuICAgICAgICAgIHsgXCJ2YWx1ZVwiOiBcInZ1ZXhcIiwgXCJsaW5rXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZXhcIiB9LFxuICAgICAgICAgIHsgXCJ2YWx1ZVwiOiBcInZ1ZS1yb3V0ZXJcIiwgXCJsaW5rXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1yb3V0ZXJcIiB9LFxuICAgICAgICAgIHsgXCJ2YWx1ZVwiOiBcImJhYmVsXCIsIFwibGlua1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9iYWJlbC9iYWJlbFwiIH1cbiAgICAgICAgIF07XG4gICAgICB9LFxuICAgICAgaGFuZGxlU2VsZWN0KGl0ZW0pIHtcbiAgICAgICAgY29uc29sZS5sb2coaXRlbSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBtb3VudGVkKCkge1xuICAgICAgdGhpcy5saW5rcyA9IHRoaXMubG9hZEFsbCgpO1xuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzEwXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIHRvRGlzcGxheVN0cmluZzogX3RvRGlzcGxheVN0cmluZywgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHg6IF93aXRoQ3R4LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2F1dG9jb21wbGV0ZSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtYXV0b2NvbXBsZXRlXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2F1dG9jb21wbGV0ZSwge1xuICAgIFwicG9wcGVyLWNsYXNzXCI6IFwibXktYXV0b2NvbXBsZXRlXCIsXG4gICAgbW9kZWxWYWx1ZTogX2N0eC5zdGF0ZSxcbiAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnN0YXRlID0gJGV2ZW50KSxcbiAgICBcImZldGNoLXN1Z2dlc3Rpb25zXCI6IF9jdHgucXVlcnlTZWFyY2gsXG4gICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICBvblNlbGVjdDogX2N0eC5oYW5kbGVTZWxlY3RcbiAgfSwge1xuICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgIF9jcmVhdGVWTm9kZShcImlcIiwge1xuICAgICAgICBjbGFzczogXCJlbC1pY29uLWVkaXQgZWwtaW5wdXRfX2ljb25cIixcbiAgICAgICAgc2xvdDogXCJzdWZmaXhcIixcbiAgICAgICAgb25DbGljazogX2N0eC5oYW5kbGVJY29uQ2xpY2tcbiAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKFwidGVtcGxhdGVcIiwgeyBcInNsb3Qtc2NvcGVcIjogXCJ7IGl0ZW0gfVwiIH0sIFtcbiAgICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwidmFsdWVcIiB9LCBfdG9EaXNwbGF5U3RyaW5nKF9jdHguaXRlbS52YWx1ZSksIDEgLyogVEVYVCAqLyksXG4gICAgICAgIF9jcmVhdGVWTm9kZShcInNwYW5cIiwgeyBjbGFzczogXCJsaW5rXCIgfSwgX3RvRGlzcGxheVN0cmluZyhfY3R4Lml0ZW0ubGluayksIDEgLyogVEVYVCAqLylcbiAgICAgIF0pXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiLCBcImZldGNoLXN1Z2dlc3Rpb25zXCIsIFwib25TZWxlY3RcIl0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBsaW5rczogW10sXG4gICAgICAgIHN0YXRlOiAnJ1xuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHF1ZXJ5U2VhcmNoKHF1ZXJ5U3RyaW5nLCBjYikge1xuICAgICAgICB2YXIgbGlua3MgPSB0aGlzLmxpbmtzO1xuICAgICAgICB2YXIgcmVzdWx0cyA9IHF1ZXJ5U3RyaW5nID8gbGlua3MuZmlsdGVyKHRoaXMuY3JlYXRlRmlsdGVyKHF1ZXJ5U3RyaW5nKSkgOiBsaW5rcztcbiAgICAgICAgLy8gY2FsbCBjYWxsYmFjayBmdW5jdGlvbiB0byByZXR1cm4gc3VnZ2VzdGlvbiBvYmplY3RzXG4gICAgICAgIGNiKHJlc3VsdHMpO1xuICAgICAgfSxcbiAgICAgIGNyZWF0ZUZpbHRlcihxdWVyeVN0cmluZykge1xuICAgICAgICByZXR1cm4gKGxpbmspID0+IHtcbiAgICAgICAgICByZXR1cm4gKGxpbmsudmFsdWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKHF1ZXJ5U3RyaW5nLnRvTG93ZXJDYXNlKCkpID09PSAwKTtcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgICBsb2FkQWxsKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgIHsgXCJ2YWx1ZVwiOiBcInZ1ZVwiLCBcImxpbmtcIjogXCJodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlXCIgfSxcbiAgICAgICAgICB7IFwidmFsdWVcIjogXCJlbGVtZW50XCIsIFwibGlua1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2VsZW1lbnRcIiB9LFxuICAgICAgICAgIHsgXCJ2YWx1ZVwiOiBcImNvb2tpbmdcIiwgXCJsaW5rXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvY29va2luZ1wiIH0sXG4gICAgICAgICAgeyBcInZhbHVlXCI6IFwibWludC11aVwiLCBcImxpbmtcIjogXCJodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9taW50LXVpXCIgfSxcbiAgICAgICAgICB7IFwidmFsdWVcIjogXCJ2dWV4XCIsIFwibGlua1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWV4XCIgfSxcbiAgICAgICAgICB7IFwidmFsdWVcIjogXCJ2dWUtcm91dGVyXCIsIFwibGlua1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtcm91dGVyXCIgfSxcbiAgICAgICAgICB7IFwidmFsdWVcIjogXCJiYWJlbFwiLCBcImxpbmtcIjogXCJodHRwczovL2dpdGh1Yi5jb20vYmFiZWwvYmFiZWxcIiB9XG4gICAgICAgICBdO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZVNlbGVjdChpdGVtKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGl0ZW0pO1xuICAgICAgfSxcbiAgICAgIGhhbmRsZUljb25DbGljayhldikge1xuICAgICAgICBjb25zb2xlLmxvZyhldik7XG4gICAgICB9XG4gICAgfSxcbiAgICBtb3VudGVkKCkge1xuICAgICAgdGhpcy5saW5rcyA9IHRoaXMubG9hZEFsbCgpO1xuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzExXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2F1dG9jb21wbGV0ZSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtYXV0b2NvbXBsZXRlXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2F1dG9jb21wbGV0ZSwge1xuICAgIG1vZGVsVmFsdWU6IF9jdHguc3RhdGUsXG4gICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5zdGF0ZSA9ICRldmVudCksXG4gICAgXCJmZXRjaC1zdWdnZXN0aW9uc1wiOiBfY3R4LnF1ZXJ5U2VhcmNoQXN5bmMsXG4gICAgcGxhY2Vob2xkZXI6IFwiRW50cmV6IHF1ZWxxdWUgY2hvc2VcIixcbiAgICBvblNlbGVjdDogX2N0eC5oYW5kbGVTZWxlY3RcbiAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIiwgXCJmZXRjaC1zdWdnZXN0aW9uc1wiLCBcIm9uU2VsZWN0XCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGlua3M6IFtdLFxuICAgICAgICBzdGF0ZTogJycsXG4gICAgICAgIHRpbWVvdXQ6ICBudWxsXG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgbG9hZEFsbCgpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICB7IFwidmFsdWVcIjogXCJ2dWVcIiwgXCJsaW5rXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZVwiIH0sXG4gICAgICAgICAgeyBcInZhbHVlXCI6IFwiZWxlbWVudFwiLCBcImxpbmtcIjogXCJodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50XCIgfSxcbiAgICAgICAgICB7IFwidmFsdWVcIjogXCJjb29raW5nXCIsIFwibGlua1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2Nvb2tpbmdcIiB9LFxuICAgICAgICAgIHsgXCJ2YWx1ZVwiOiBcIm1pbnQtdWlcIiwgXCJsaW5rXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvbWludC11aVwiIH0sXG4gICAgICAgICAgeyBcInZhbHVlXCI6IFwidnVleFwiLCBcImxpbmtcIjogXCJodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVleFwiIH0sXG4gICAgICAgICAgeyBcInZhbHVlXCI6IFwidnVlLXJvdXRlclwiLCBcImxpbmtcIjogXCJodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlLXJvdXRlclwiIH0sXG4gICAgICAgICAgeyBcInZhbHVlXCI6IFwiYmFiZWxcIiwgXCJsaW5rXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2JhYmVsL2JhYmVsXCIgfVxuICAgICAgICAgXTtcbiAgICAgIH0sXG4gICAgICBxdWVyeVNlYXJjaEFzeW5jKHF1ZXJ5U3RyaW5nLCBjYikge1xuICAgICAgICB2YXIgbGlua3MgPSB0aGlzLmxpbmtzO1xuICAgICAgICB2YXIgcmVzdWx0cyA9IHF1ZXJ5U3RyaW5nID8gbGlua3MuZmlsdGVyKHRoaXMuY3JlYXRlRmlsdGVyKHF1ZXJ5U3RyaW5nKSkgOiBsaW5rcztcblxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0KTtcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgY2IocmVzdWx0cyk7XG4gICAgICAgIH0sIDMwMDAgKiBNYXRoLnJhbmRvbSgpKTtcbiAgICAgIH0sXG4gICAgICBjcmVhdGVGaWx0ZXIocXVlcnlTdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIChsaW5rKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChsaW5rLnZhbHVlLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxdWVyeVN0cmluZy50b0xvd2VyQ2FzZSgpKSA9PT0gMCk7XG4gICAgICAgIH07XG4gICAgICB9LFxuICAgICAgaGFuZGxlU2VsZWN0KGl0ZW0pIHtcbiAgICAgICAgY29uc29sZS5sb2coaXRlbSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBtb3VudGVkKCkge1xuICAgICAgdGhpcy5saW5rcyA9IHRoaXMubG9hZEFsbCgpO1xuICAgIH1cbiAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW8xMlwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgRnJhZ21lbnQ6IF9GcmFnbWVudCwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW1xuICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgIHBsYWNlaG9sZGVyOiBcIlBsZWFzZSBpbnB1dFwiLFxuICAgICAgbW9kZWxWYWx1ZTogX2N0eC50ZXh0LFxuICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC50ZXh0ID0gJGV2ZW50KSxcbiAgICAgIG1heGxlbmd0aDogXCIxMFwiLFxuICAgICAgXCJzaG93LXdvcmQtbGltaXRcIjogXCJcIlxuICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKSxcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgeyBzdHlsZToge1wibWFyZ2luXCI6XCIyMHB4IDBcIn0gfSksXG4gICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgIHR5cGU6IFwidGV4dGFyZWFcIixcbiAgICAgIHBsYWNlaG9sZGVyOiBcIlBsZWFzZSBpbnB1dFwiLFxuICAgICAgbW9kZWxWYWx1ZTogX2N0eC50ZXh0YXJlYSxcbiAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgudGV4dGFyZWEgPSAkZXZlbnQpLFxuICAgICAgbWF4bGVuZ3RoOiBcIjMwXCIsXG4gICAgICBcInNob3ctd29yZC1saW1pdFwiOiBcIlwiXG4gICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gIF0sIDY0IC8qIFNUQUJMRV9GUkFHTUVOVCAqLykpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRleHQ6ICcnLFxuICAgICAgdGV4dGFyZWE6ICcnXG4gICAgfVxuICB9XG59XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFxuICAgICAgICB9XG4gICAgICB9XG4gICAgPC9zY3JpcHQ+XG4gICJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/input.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be ***!
  \****************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h2 id=\\\"input\\\"><a class=\\\"header-anchor\\\" href=\\\"#input\\\">¶</a> Input</h2><p>Le champ d&#39;input de base.</p><div class=\\\"warning\\\"><p>Input est un composant contrôlé, il <strong>affiche toujours la valeur liée de Vue</strong>.</p><p>En règle générale, l&#39;évènement <code>input</code> devrait être géré. Son handler devrait mettre à jour la valeur du composant (ou utilisez <code>v-model</code>). Dans le cas contraire, la valeur du champ ne sera pas modifiée.</p><p>Les modificateurs de <code>v-model</code> ne sont pas supportés.</p></div><h3 id=\\\"usage\\\"><a class=\\\"header-anchor\\\" href=\\\"#usage\\\">¶</a> Usage</h3>\", 4)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input placeholder=\\\"Entrez quelque chose\\\" v-model=\\\"input\\\"></el-input>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      input: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"desactive\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#desactive\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Désactivé\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Désactivez l'input avec l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"disabled\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input\\n  placeholder=\\\"Entrez quelque chose\\\"\\n  v-model=\\\"input\\\"\\n  :disabled=\\\"true\\\">\\n</el-input>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      input: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"effacable\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#effacable\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Effaçable\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Rendez l'input effaçable avec l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"clearable\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input\\n  placeholder=\\\"Entrez quelque chose\\\"\\n  v-model=\\\"input\\\"\\n  clearable>\\n</el-input>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      input: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"champ-de-mot-de-passe\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#champ-de-mot-de-passe\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Champ de mot de passe\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Créez un champ de mot de passe avec icône de visualisation grâce à l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"show-password\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input placeholder=\\\"Entrez votre mot de passe\\\" v-model=\\\"input\\\" show-password></el-input>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        input: ''\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"input-avec-icone\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#input-avec-icone\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Input avec icône\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Ajoutez une icône pour indiquer le type d'input.\", -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Pour ajouter une icône, vous pouvez utiliser les attributs \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"prefix-icon\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" et \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"suffix-icon\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". De plus, les slots nommés \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"prefix\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" et \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"suffix\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" fonctionnent aussi.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<div class=\\\"demo-input-suffix\\\">\\n  <span class=\\\"demo-input-label\\\">Avec les attributs</span>\\n  <el-input\\n    placeholder=\\\"Entrez une date\\\"\\n    suffix-icon=\\\"el-icon-date\\\"\\n    v-model=\\\"input1\\\">\\n  </el-input>\\n  <el-input\\n    placeholder=\\\"Entrez du texte\\\"\\n    prefix-icon=\\\"el-icon-search\\\"\\n    v-model=\\\"input2\\\">\\n  </el-input>\\n</div>\\n<div class=\\\"demo-input-suffix\\\">\\n  <span class=\\\"demo-input-label\\\">Avec les slots</span>\\n  <el-input\\n    placeholder=\\\"Entrez une date\\\"\\n    v-model=\\\"input3\\\">\\n    <i slot=\\\"suffix\\\" class=\\\"el-input__icon el-icon-date\\\"></i>\\n  </el-input>\\n  <el-input\\n    placeholder=\\\"Entrez du texte\\\"\\n    v-model=\\\"input4\\\">\\n    <i slot=\\\"prefix\\\" class=\\\"el-input__icon el-icon-search\\\"></i>\\n  </el-input>\\n</div>\\n\\n<style>\\n  .demo-input-label {\\n    display: inline-block;\\n    width: 130px;\\n  }\\n</style>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      input1: '',\\n      input2: '',\\n      input3: '',\\n      input4: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"zone-de-texte\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#zone-de-texte\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Zone de texte\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Une zone de texte de taille réglable à la souris pour écrire plusieurs lignes. Ajoutez l'attribut \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type=\\\"textarea\\\"\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour changer \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"input\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en un \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"textarea\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" natif.\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Réglez la hauteur grâce à la propriété \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"rows\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input\\n  type=\\\"textarea\\\"\\n  :rows=\\\"2\\\"\\n  placeholder=\\\"Entrez quelque chose\\\"\\n  v-model=\\\"textarea\\\">\\n</el-input>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      textarea: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"zone-de-texte-avec-taille-automatique\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#zone-de-texte-avec-taille-automatique\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Zone de texte avec taille automatique\")\n], -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Configurer la propriété \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"autosize\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour une zone de texte permet de rendre la hauteur automatique en fonction de la taille du texte. Un objet options pour être fournit à \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"autosize\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" les nombres minimal et maximal de lignes.\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input\\n  type=\\\"textarea\\\"\\n  autosize\\n  placeholder=\\\"Entrez quelque chose\\\"\\n  v-model=\\\"textarea1\\\">\\n</el-input>\\n<div style=\\\"margin: 20px 0;\\\"></div>\\n<el-input\\n  type=\\\"textarea\\\"\\n  :autosize=\\\"{ minRows: 2, maxRows: 4}\\\"\\n  placeholder=\\\"Entrez quelque chose\\\"\\n  v-model=\\\"textarea2\\\">\\n</el-input>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      textarea1: '',\\n      textarea2: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"input-mixte\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#input-mixte\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Input mixte\")\n], -1 /* HOISTED */)\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Ajouter un élément avant ou après l'input, généralement du texte ou un bouton.\", -1 /* HOISTED */)\nconst _hoisted_29 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilisez \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"slot\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour ajouter des éléments avant ou après l'input.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_30 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<div>\\n  <el-input placeholder=\\\"Entrez quelque chose\\\" v-model=\\\"input1\\\">\\n    <template slot=\\\"prepend\\\">Http://</template>\\n  </el-input>\\n</div>\\n<div style=\\\"margin-top: 15px;\\\">\\n  <el-input placeholder=\\\"Entrez quelque chose\\\" v-model=\\\"input2\\\">\\n    <template slot=\\\"append\\\">.com</template>\\n  </el-input>\\n</div>\\n<div style=\\\"margin-top: 15px;\\\">\\n  <el-input placeholder=\\\"Entrez quelque chose\\\" v-model=\\\"input3\\\" class=\\\"input-with-select\\\">\\n    <el-select v-model=\\\"select\\\" slot=\\\"prepend\\\" placeholder=\\\"Choisir\\\">\\n      <el-option label=\\\"Restaurant\\\" value=\\\"1\\\"></el-option>\\n      <el-option label=\\\"Num. Commande\\\" value=\\\"2\\\"></el-option>\\n      <el-option label=\\\"Tel\\\" value=\\\"3\\\"></el-option>\\n    </el-select>\\n    <el-button slot=\\\"append\\\" icon=\\\"el-icon-search\\\"></el-button>\\n  </el-input>\\n</div>\\n\\n<style>\\n  .el-select .el-input {\\n    width: 110px;\\n  }\\n  .input-with-select .el-input-group__prepend {\\n    background-color: #fff;\\n  }\\n</style>\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      input1: '',\\n      input2: '',\\n      input3: '',\\n      select: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_31 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tailles\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tailles\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tailles\")\n], -1 /* HOISTED */)\nconst _hoisted_32 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Ajoutez l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"size\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour changer la taille de l'input. En plus de la taille par défaut, il y a trois autres options: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"large\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"small\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" et \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"mini\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_33 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<div class=\\\"demo-input-size\\\">\\n  <el-input\\n    placeholder=\\\"Entrez quelque chose\\\"\\n    v-model=\\\"input1\\\">\\n  </el-input>\\n  <el-input\\n    size=\\\"medium\\\"\\n    placeholder=\\\"Entrez quelque chose\\\"\\n    v-model=\\\"input2\\\">\\n  </el-input>\\n  <el-input\\n    size=\\\"small\\\"\\n    placeholder=\\\"Entrez quelque chose\\\"\\n    v-model=\\\"input3\\\">\\n  </el-input>\\n  <el-input\\n    size=\\\"mini\\\"\\n    placeholder=\\\"Entrez quelque chose\\\"\\n    v-model=\\\"input4\\\">\\n  </el-input>\\n</div>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      input1: '',\\n      input2: '',\\n      input3: '',\\n      input4: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_34 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"autocompletion\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#autocompletion\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Autocomplétion\")\n], -1 /* HOISTED */)\nconst _hoisted_35 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez obtenir de l'aide ou des suggestions basées sur ce que vous entrez.\", -1 /* HOISTED */)\nconst _hoisted_36 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Le composant d'autocomplétion fournit des suggestions d'entrées. L'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"fetch-suggestions\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" est une méthode qui retourne les suggestions. Dans cet exemple, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"querySearch(queryString, cb)\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" renvoie des suggestions à l'autocomplétion via \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"cb(data)\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" quand elles sont prêtes.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_37 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-row class=\\\"demo-autocomplete\\\">\\n  <el-col :span=\\\"12\\\">\\n    <div class=\\\"sub-title\\\">Liste des suggestions au focus</div>\\n    <el-autocomplete\\n      class=\\\"inline-input\\\"\\n      v-model=\\\"state1\\\"\\n      :fetch-suggestions=\\\"querySearch\\\"\\n      placeholder=\\\"Entrez quelque chose\\\"\\n      @select=\\\"handleSelect\\\"\\n    ></el-autocomplete>\\n  </el-col>\\n  <el-col :span=\\\"12\\\">\\n    <div class=\\\"sub-title\\\">Liste des suggestions à l'écriture</div>\\n    <el-autocomplete\\n      class=\\\"inline-input\\\"\\n      v-model=\\\"state2\\\"\\n      :fetch-suggestions=\\\"querySearch\\\"\\n      placeholder=\\\"Entrez quelque chose\\\"\\n      :trigger-on-focus=\\\"false\\\"\\n      @select=\\\"handleSelect\\\"\\n    ></el-autocomplete>\\n  </el-col>\\n</el-row>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        links: [],\\n        state1: '',\\n        state2: ''\\n      };\\n    },\\n    methods: {\\n      querySearch(queryString, cb) {\\n        var links = this.links;\\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\\n        // call callback function to return suggestions\\n        cb(results);\\n      },\\n      createFilter(queryString) {\\n        return (link) => {\\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\\n        };\\n      },\\n      loadAll() {\\n        return [\\n          { \\\"value\\\": \\\"vue\\\", \\\"link\\\": \\\"https://github.com/vuejs/vue\\\" },\\n          { \\\"value\\\": \\\"element\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/element\\\" },\\n          { \\\"value\\\": \\\"cooking\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/cooking\\\" },\\n          { \\\"value\\\": \\\"mint-ui\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/mint-ui\\\" },\\n          { \\\"value\\\": \\\"vuex\\\", \\\"link\\\": \\\"https://github.com/vuejs/vuex\\\" },\\n          { \\\"value\\\": \\\"vue-router\\\", \\\"link\\\": \\\"https://github.com/vuejs/vue-router\\\" },\\n          { \\\"value\\\": \\\"babel\\\", \\\"link\\\": \\\"https://github.com/babel/babel\\\" }\\n         ];\\n      },\\n      handleSelect(item) {\\n        console.log(item);\\n      }\\n    },\\n    mounted() {\\n      this.links = this.loadAll();\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_38 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"template-personnalise\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#template-personnalise\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Template personnalisé\")\n], -1 /* HOISTED */)\nconst _hoisted_39 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez personnaliser la manière dont les suggestions sont affichées.\", -1 /* HOISTED */)\nconst _hoisted_40 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilisez \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"scoped slot\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour personnaliser les différentes suggestions. Dans le scope, vous pouvez accéder à l'objet suggestion via la clé \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"item\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_41 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-autocomplete\\n  popper-class=\\\"my-autocomplete\\\"\\n  v-model=\\\"state\\\"\\n  :fetch-suggestions=\\\"querySearch\\\"\\n  placeholder=\\\"Entrez quelque chose\\\"\\n  @select=\\\"handleSelect\\\">\\n  <i\\n    class=\\\"el-icon-edit el-input__icon\\\"\\n    slot=\\\"suffix\\\"\\n    @click=\\\"handleIconClick\\\">\\n  </i>\\n  <template slot-scope=\\\"{ item }\\\">\\n    <div class=\\\"value\\\">{{ item.value }}</div>\\n    <span class=\\\"link\\\">{{ item.link }}</span>\\n  </template>\\n</el-autocomplete>\\n\\n<style>\\n  .my-autocomplete {\\n    li {\\n      line-height: normal;\\n      padding: 7px;\\n\\n      .value {\\n        text-overflow: ellipsis;\\n        overflow: hidden;\\n      }\\n      .link {\\n        font-size: 12px;\\n        color: #b4b4b4;\\n      }\\n    }\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        links: [],\\n        state: ''\\n      };\\n    },\\n    methods: {\\n      querySearch(queryString, cb) {\\n        var links = this.links;\\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\\n        // call callback function to return suggestion objects\\n        cb(results);\\n      },\\n      createFilter(queryString) {\\n        return (link) => {\\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\\n        };\\n      },\\n      loadAll() {\\n        return [\\n          { \\\"value\\\": \\\"vue\\\", \\\"link\\\": \\\"https://github.com/vuejs/vue\\\" },\\n          { \\\"value\\\": \\\"element\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/element\\\" },\\n          { \\\"value\\\": \\\"cooking\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/cooking\\\" },\\n          { \\\"value\\\": \\\"mint-ui\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/mint-ui\\\" },\\n          { \\\"value\\\": \\\"vuex\\\", \\\"link\\\": \\\"https://github.com/vuejs/vuex\\\" },\\n          { \\\"value\\\": \\\"vue-router\\\", \\\"link\\\": \\\"https://github.com/vuejs/vue-router\\\" },\\n          { \\\"value\\\": \\\"babel\\\", \\\"link\\\": \\\"https://github.com/babel/babel\\\" }\\n         ];\\n      },\\n      handleSelect(item) {\\n        console.log(item);\\n      },\\n      handleIconClick(ev) {\\n        console.log(ev);\\n      }\\n    },\\n    mounted() {\\n      this.links = this.loadAll();\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_42 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"recherche-distante\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#recherche-distante\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Recherche distante\")\n], -1 /* HOISTED */)\nconst _hoisted_43 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez aller chercher des infos de suggestions sur un serveur distant.\", -1 /* HOISTED */)\nconst _hoisted_44 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-autocomplete\\n  v-model=\\\"state\\\"\\n  :fetch-suggestions=\\\"querySearchAsync\\\"\\n  placeholder=\\\"Entrez quelque chose\\\"\\n  @select=\\\"handleSelect\\\"\\n></el-autocomplete>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        links: [],\\n        state: '',\\n        timeout:  null\\n      };\\n    },\\n    methods: {\\n      loadAll() {\\n        return [\\n          { \\\"value\\\": \\\"vue\\\", \\\"link\\\": \\\"https://github.com/vuejs/vue\\\" },\\n          { \\\"value\\\": \\\"element\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/element\\\" },\\n          { \\\"value\\\": \\\"cooking\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/cooking\\\" },\\n          { \\\"value\\\": \\\"mint-ui\\\", \\\"link\\\": \\\"https://github.com/ElemeFE/mint-ui\\\" },\\n          { \\\"value\\\": \\\"vuex\\\", \\\"link\\\": \\\"https://github.com/vuejs/vuex\\\" },\\n          { \\\"value\\\": \\\"vue-router\\\", \\\"link\\\": \\\"https://github.com/vuejs/vue-router\\\" },\\n          { \\\"value\\\": \\\"babel\\\", \\\"link\\\": \\\"https://github.com/babel/babel\\\" }\\n         ];\\n      },\\n      querySearchAsync(queryString, cb) {\\n        var links = this.links;\\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\\n\\n        clearTimeout(this.timeout);\\n        this.timeout = setTimeout(() => {\\n          cb(results);\\n        }, 3000 * Math.random());\\n      },\\n      createFilter(queryString) {\\n        return (link) => {\\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\\n        };\\n      },\\n      handleSelect(item) {\\n        console.log(item);\\n      }\\n    },\\n    mounted() {\\n      this.links = this.loadAll();\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_45 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"taille-limite\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#taille-limite\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Taille limite\")\n], -1 /* HOISTED */)\nconst _hoisted_46 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"maxlength\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" et \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"minlength\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" sont des attributs natifs, indiquant la taille limite de l'input. Le nombre de caractères est mesuré par la taille de la chaine Javascript. Si vous utilisez \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"maxlength\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", vous pourrez montrer le nombre de caractères en mettant \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"show-word-limit\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" à \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_47 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input\\n  type=\\\"text\\\"\\n  placeholder=\\\"Please input\\\"\\n  v-model=\\\"text\\\"\\n  maxlength=\\\"10\\\"\\n  show-word-limit\\n>\\n</el-input>\\n<div style=\\\"margin: 20px 0;\\\"></div>\\n<el-input\\n  type=\\\"textarea\\\"\\n  placeholder=\\\"Please input\\\"\\n  v-model=\\\"textarea\\\"\\n  maxlength=\\\"30\\\"\\n  show-word-limit\\n>\\n</el-input>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      text: '',\\n      textarea: ''\\n    }\\n  }\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_48 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"attributs-de-l-input\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributs-de-l-input\\\">¶</a> Attributs de l&#39;Input</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>type</td><td>Type de l&#39;input.</td><td>string</td><td>text, textarea et autres <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\\">types d&#39;input natifs</a></td><td>text</td></tr><tr><td>value / v-model</td><td>Variable liée.</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>maxlength</td><td>Identique à <code>maxlength</code> dans l&#39;input natif.</td><td>number</td><td>—</td><td>—</td></tr><tr><td>minlength</td><td>Identique à <code>minlength</code> dans l&#39;input natif.</td><td>number</td><td>—</td><td>—</td></tr><tr><td>show-word-limit</td><td>Affiche le nombre de caractères restant， ne marche que lorsque <code>type</code> est &#39;text&#39; ou &#39;textarea&#39;.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>placeholder</td><td>Placeholder de l&#39; Input.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>clearable</td><td>Si le bouton de reset apparaît.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-password</td><td>Si le champ doit un champ de mot de passe avec bouton de visualisation.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>Si le champ est désactivé.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>Taille du champ, marche quand <code>type</code> n&#39;est pas &#39;textarea&#39;.</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>prefix-icon</td><td>Classe de l&#39;icône de préfixe.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>suffix-icon</td><td>Classe de l&#39;iĉone de suffixe.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>rows</td><td>Nombre de ligne pour une zone de texte, ne marche que si <code>type</code> est &#39;textarea&#39;.</td><td>number</td><td>—</td><td>2</td></tr><tr><td>autosize</td><td>Si la zone de texte à une hauteur adaptative, ne marche que si <code>type</code> est &#39;textarea&#39;. Peut accepter un objet, e.g. { minRows: 2, maxRows: 6 }</td><td>boolean / object</td><td>—</td><td>false</td></tr><tr><td>autocomplete</td><td>Identique à <code>autocomplete</code> dans l&#39;input natif.</td><td>string</td><td>on / off</td><td>off</td></tr><tr><td>auto-complete</td><td>@DEPRECATED dans la prochaine version majeure.</td><td>string</td><td>on/off</td><td>off</td></tr><tr><td>name</td><td>Identique à <code>name</code> dans l&#39;input natif.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>Identique à <code>readonly</code> dans l&#39;input natif.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>max</td><td>Identique à <code>max</code> dans l&#39;input natif.</td><td>—</td><td>—</td><td>—</td></tr><tr><td>min</td><td>Identique à <code>min</code> dans l&#39;input natif.</td><td>—</td><td>—</td><td>—</td></tr><tr><td>step</td><td>Identique à <code>step</code> dans l&#39;input natif.</td><td>—</td><td>—</td><td>—</td></tr><tr><td>resize</td><td>Contrôle les changements de taille autorisés.</td><td>string</td><td>none, both, horizontal, vertical</td><td>—</td></tr><tr><td>autofocus</td><td>Identique à <code>autofocus</code> dans l&#39;input natif.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>form</td><td>Identique à <code>form</code> dans l&#39;input natif.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label</td><td>Texte du label.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>tabindex</td><td>tabindex de l&#39;input.</td><td>string</td><td>-</td><td>-</td></tr><tr><td>validate-event</td><td>Si la validation doit avoir lieu.</td><td>boolean</td><td>-</td><td>true</td></tr></tbody></table><h3 id=\\\"slots-de-l-input\\\"><a class=\\\"header-anchor\\\" href=\\\"#slots-de-l-input\\\">¶</a> Slots de l&#39;Input</h3><table><thead><tr><th>Nom</th><th>Description</th></tr></thead><tbody><tr><td>prefix</td><td>Contenu du préfixe, ne marche que si <code>type</code> est &#39;text&#39;.</td></tr><tr><td>suffix</td><td>Contenu du suffixe, ne marche que si <code>type</code> est &#39;text&#39;.</td></tr><tr><td>prepend</td><td>Contenu à ajouter avant l&#39;Input, ne marche que si <code>type</code> est &#39;text&#39;.</td></tr><tr><td>append</td><td>Contenu à ajouter après l&#39;Input, ne marche que si <code>type</code> est &#39;text&#39;.</td></tr></tbody></table><h3 id=\\\"evenements\\\"><a class=\\\"header-anchor\\\" href=\\\"#evenements\\\">¶</a> Évènements</h3><table><thead><tr><th>Nom</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>blur</td><td>Se déclenche quand Input perds le focus.</td><td>(event: Event)</td></tr><tr><td>focus</td><td>Se déclenche quand Input a le focus.</td><td>(event: Event)</td></tr><tr><td>change</td><td>Se déclenche quand la valeur change.</td><td>(value: string \\\\ number)</td></tr><tr><td>change</td><td>Déclenché uniquement lorsque la zone de saisie perd le focus ou que l&#39;utilisateur appuie sur Entrée.</td><td>(value: string | number)</td></tr><tr><td>input</td><td>Déclenché lorsque la valeur d&#39;entrée change.</td><td>(value: string | number)</td></tr><tr><td>clear</td><td>Se déclenche quand le champ est effacé par le bouton de reset.</td><td>—</td></tr></tbody></table><h3 id=\\\"methodes-de-l-input\\\"><a class=\\\"header-anchor\\\" href=\\\"#methodes-de-l-input\\\">¶</a> Méthodes de l&#39;Input</h3><table><thead><tr><th>Méthode</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>focus</td><td>Met le focus sur le champ.</td><td>—</td></tr><tr><td>blur</td><td>Retire le focus de le champ.</td><td>—</td></tr><tr><td>select</td><td>Sélectionne le texte du champ.</td><td>—</td></tr></tbody></table><h3 id=\\\"attributs-de-l-autocompletion\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributs-de-l-autocompletion\\\">¶</a> Attributs de l&#39;autocomplétion</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Options</th><th>Défaut</th></tr></thead><tbody><tr><td>placeholder</td><td>Le placeholder de l&#39;autocomplétion.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>clearable</td><td>Si un bouton d&#39;effacement doit apparaître.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>Si l&#39;autocomplétion est déactivée.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>value-key</td><td>Nom de la clé de l&#39;objet suggestion pour l&#39;affichage.</td><td>string</td><td>—</td><td>value</td></tr><tr><td>icon</td><td>Nom de l&#39;icône.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>value</td><td>Variable liée.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>debounce</td><td>Délai d&#39;attente après écriture, en millisecondes.</td><td>number</td><td>—</td><td>300</td></tr><tr><td>placement</td><td>Emplacement du menu popup.</td><td>string</td><td>top / top-start / top-end / bottom / bottom-start / bottom-end</td><td>bottom-start</td></tr><tr><td>fetch-suggestions</td><td>La méthode pour rechercher les suggestions. Lorsqu&#39;elles sont prêtes, appelle <code>callback(data:[])</code> pour les renvoyer à l&#39;autocomplétion.</td><td>Function(queryString, callback)</td><td>—</td><td>—</td></tr><tr><td>popper-class</td><td>Nom de classe pour le menu de l&#39;autocomplétion.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>trigger-on-focus</td><td>Si les suggestions doivent apparaître quand l&#39;input a le focus.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>name</td><td>Identique à <code>name</code> dans l&#39;input natif.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>select-when-unmatched</td><td>Si un évènement <code>select</code> doit être émis après pression sur entrée quand il n&#39;y a pas de résultats.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>label</td><td>Texte du label.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prefix-icon</td><td>Classe de l&#39;icône de préfixe.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>suffix-icon</td><td>Classe de l&#39;iĉone de suffixe.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>hide-loading</td><td>Si l&#39;icône de chargement doit être cachée dans le cas d&#39;une recherche distante.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>popper-append-to-body</td><td>Si le menu doit être ajouter au body. Si le positionnement du menu est incorrect, essayez de mettre cette propriété à <code>false</code>.</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>highlight-first-item</td><td>Si la première suggestion de la liste issue de la recherche distante doit être en surbrillance par défaut.</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id=\\\"slots-de-l-autocompletion\\\"><a class=\\\"header-anchor\\\" href=\\\"#slots-de-l-autocompletion\\\">¶</a> Slots de l&#39;autocomplétion</h3><table><thead><tr><th>Nom</th><th>Description</th></tr></thead><tbody><tr><td>prefix</td><td>Contenu du préfixe.</td></tr><tr><td>suffix</td><td>Contenu du suffixe.</td></tr><tr><td>prepend</td><td>Contenu à ajouter avant le champ.</td></tr><tr><td>append</td><td>Contenu à ajouter après le champ.</td></tr></tbody></table><h3 id=\\\"template-personnalise-pour-l-autocompletion\\\"><a class=\\\"header-anchor\\\" href=\\\"#template-personnalise-pour-l-autocompletion\\\">¶</a> Template personnalisé pour l&#39;autocomplétion</h3><table><thead><tr><th>Nom</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Contenu personnalisé pour les suggestions. Le paramètre de scope est { item }.</td></tr></tbody></table><h3 id=\\\"evenements-de-l-autocompletion\\\"><a class=\\\"header-anchor\\\" href=\\\"#evenements-de-l-autocompletion\\\">¶</a> Évènements de l&#39;autocomplétion</h3><table><thead><tr><th>Nom</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>select</td><td>Se déclenche quand une suggestion est cliquée.</td><td>La suggestion sélectionnée.</td></tr><tr><td>change</td><td>Se déclenche quand la valeur change.</td><td>(value: string \\\\ number)</td></tr></tbody></table><h3 id=\\\"methodes-de-l-autocompletion\\\"><a class=\\\"header-anchor\\\" href=\\\"#methodes-de-l-autocompletion\\\">¶</a> Méthodes de l&#39;autocomplétion</h3><table><thead><tr><th>Méthode</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>focus</td><td>Met le focus sur l&#39;élément.</td><td>—</td></tr></tbody></table>\", 18)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n  const _component_element_demo8 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo8\")\n  const _component_element_demo9 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo9\")\n  const _component_element_demo10 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo10\")\n  const _component_element_demo11 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo11\")\n  const _component_element_demo12 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo12\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_7,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_8\n      ]),\n      _: 1\n    }),\n    _hoisted_10,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_11\n      ]),\n      _: 1\n    }),\n    _hoisted_13,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_14\n      ]),\n      _: 1\n    }),\n    _hoisted_16,\n    _hoisted_17,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_19\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_18\n      ]),\n      _: 1\n    }),\n    _hoisted_20,\n    _hoisted_21,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_23\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_22\n      ]),\n      _: 1\n    }),\n    _hoisted_24,\n    _hoisted_25,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_26\n      ]),\n      _: 1\n    }),\n    _hoisted_27,\n    _hoisted_28,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_30\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_29\n      ]),\n      _: 1\n    }),\n    _hoisted_31,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo8)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_33\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_32\n      ]),\n      _: 1\n    }),\n    _hoisted_34,\n    _hoisted_35,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo9)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_37\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_36\n      ]),\n      _: 1\n    }),\n    _hoisted_38,\n    _hoisted_39,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo10)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_41\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_40\n      ]),\n      _: 1\n    }),\n    _hoisted_42,\n    _hoisted_43,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo11)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_44\n      ]),\n      _: 1\n    }),\n    _hoisted_45,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo12)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_47\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_46\n      ]),\n      _: 1\n    }),\n    _hoisted_48\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/input.md?vue&type=template&id=d0d209be\n");

/***/ })

}]);