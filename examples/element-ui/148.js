(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[148],{

/***/ "./examples/docs/es/tabs.md":
/*!**********************************!*\
  !*** ./examples/docs/es/tabs.md ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tabs_md_vue_type_template_id_f89833ac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs.md?vue&type=template&id=f89833ac */ \"./examples/docs/es/tabs.md?vue&type=template&id=f89833ac\");\n/* harmony import */ var _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tabs.md?vue&type=script&lang=js */ \"./examples/docs/es/tabs.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _tabs_md_vue_type_template_id_f89833ac__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"f89833ac\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('f89833ac', _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('f89833ac', _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./tabs.md?vue&type=template&id=f89833ac */ \"./examples/docs/es/tabs.md?vue&type=template&id=f89833ac\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _tabs_md_vue_type_template_id_f89833ac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs.md?vue&type=template&id=f89833ac */ \"./examples/docs/es/tabs.md?vue&type=template&id=f89833ac\");\n(() => {\n    api.rerender('f89833ac', _tabs_md_vue_type_template_id_f89833ac__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/es/tabs.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RhYnMubWQ/OTFiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBZ0U7QUFDVjtBQUNMO0FBQ2pELHdFQUFNLFVBQVUsNkVBQU07QUFDdEI7QUFDQSxJQUFJLElBQVU7QUFDZCxFQUFFLHdFQUFNO0FBQ1I7QUFDQTtBQUNBLG9DQUFvQyx3RUFBTTtBQUMxQywyQkFBMkIsd0VBQU07QUFDakM7O0FBRUEsb0JBQW9CLHlHQUF5QyxFQUFFO0FBQUE7QUFDL0QsNkJBQTZCLDZFQUFNO0FBQ25DLEdBQUc7O0FBRUg7O0FBRUEsd0VBQU07O0FBRVMsdUkiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VzL3RhYnMubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwiLi90YWJzLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWY4OTgzM2FjXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdGFicy5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi90YWJzLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbnNjcmlwdC5yZW5kZXIgPSByZW5kZXJcbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHNjcmlwdC5fX2htcklkID0gXCJmODk4MzNhY1wiXG4gIGNvbnN0IGFwaSA9IF9fVlVFX0hNUl9SVU5USU1FX19cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIWFwaS5jcmVhdGVSZWNvcmQoJ2Y4OTgzM2FjJywgc2NyaXB0KSkge1xuICAgIGFwaS5yZWxvYWQoJ2Y4OTgzM2FjJywgc2NyaXB0KVxuICB9XG4gIFxuICBtb2R1bGUuaG90LmFjY2VwdChcIi4vdGFicy5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mODk4MzNhY1wiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCdmODk4MzNhYycsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VzL3RhYnMubWRcIlxuXG5leHBvcnQgZGVmYXVsdCBzY3JpcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/tabs.md\n");

/***/ }),

/***/ "./examples/docs/es/tabs.md?vue&type=script&lang=js":
/*!**********************************************************!*\
  !*** ./examples/docs/es/tabs.md?vue&type=script&lang=js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./tabs.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/tabs.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RhYnMubWQ/MGIzOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUF5TSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZXMvdGFicy5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi8uLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi90YWJzLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RhYnMubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./examples/docs/es/tabs.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/es/tabs.md?vue&type=template&id=f89833ac":
/*!****************************************************************!*\
  !*** ./examples/docs/es/tabs.md?vue&type=template&id=f89833ac ***!
  \****************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_template_id_f89833ac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./tabs.md?vue&type=template&id=f89833ac */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/tabs.md?vue&type=template&id=f89833ac\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_template_id_f89833ac__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RhYnMubWQ/ZWZjNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZXMvdGFicy5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mODk4MzNhYy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvdGVtcGxhdGVMb2FkZXIuanM/P3JlZi0tNSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi8uLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi90YWJzLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWY4OTgzM2FjXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/tabs.md?vue&type=template&id=f89833ac\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/tabs.md?vue&type=script&lang=js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/tabs.md?vue&type=script&lang=js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          modelValue: _ctx.activeName,\n          \"onUpdate:modelValue\": $event => _ctx.activeName = $event,\n          \"onTab-click\": _ctx.handleClick\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\",\n            name: \"first\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"User\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\",\n            name: \"second\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\",\n            name: \"third\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Role\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\",\n            name: \"fourth\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Task\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onTab-click\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            activeName: 'first'\n          };\n        },\n\n        methods: {\n          handleClick(tab, event) {\n            console.log(tab, event);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          type: \"card\",\n          \"onTab-click\": _ctx.handleClick\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"User\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Role\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Task\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onTab-click\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            activeName: 'first'\n          };\n        },\n\n        methods: {\n          handleClick(tab, event) {\n            console.log(tab, event);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          type: \"border-card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"User\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Role\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Task\")]),\n            _: 1\n          })]),\n          _: 1\n        });\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n\n        const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_radio_group, {\n          modelValue: _ctx.tabPosition,\n          \"onUpdate:modelValue\": $event => _ctx.tabPosition = $event,\n          style: {\n            \"margin-bottom\": \"30px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n            label: \"top\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"top\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"right\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"right\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"bottom\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"bottom\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"left\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"left\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_tabs, {\n          \"tab-position\": _ctx.tabPosition,\n          style: {\n            \"height\": \"200px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"User\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Role\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Task\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"tab-position\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tabPosition: 'left'\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          type: \"border-card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, null, {\n            default: _withCtx(() => [_createVNode(\"span\", {\n              slot: \"label\"\n            }, [_createVNode(\"i\", {\n              class: \"el-icon-date\"\n            }), _createTextVNode(\" Route\")]), _createTextVNode(\" Route \")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Role\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Task\")]),\n            _: 1\n          })]),\n          _: 1\n        });\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        toDisplayString: _toDisplayString,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          modelValue: _ctx.editableTabsValue,\n          \"onUpdate:modelValue\": $event => _ctx.editableTabsValue = $event,\n          type: \"card\",\n          editable: \"\",\n          onEdit: _ctx.handleTabsEdit\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.editableTabs, (item, index) => {\n            return _openBlock(), _createBlock(_component_el_tab_pane, {\n              key: item.name,\n              label: item.title,\n              name: item.name\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.content), 1\n              /* TEXT */\n              )]),\n              _: 2\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"label\", \"name\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onEdit\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            editableTabsValue: '2',\n            editableTabs: [{\n              title: 'Tab 1',\n              name: '1',\n              content: 'Tab 1 content'\n            }, {\n              title: 'Tab 2',\n              name: '2',\n              content: 'Tab 2 content'\n            }],\n            tabIndex: 2\n          };\n        },\n\n        methods: {\n          handleTabsEdit(targetName, action) {\n            if (action === 'add') {\n              let newTabName = ++this.tabIndex + '';\n              this.editableTabs.push({\n                title: 'New Tab',\n                name: newTabName,\n                content: 'New Tab content'\n              });\n              this.editableTabsValue = newTabName;\n            }\n\n            if (action === 'remove') {\n              let tabs = this.editableTabs;\n              let activeName = this.editableTabsValue;\n\n              if (activeName === targetName) {\n                tabs.forEach((tab, index) => {\n                  if (tab.name === targetName) {\n                    let nextTab = tabs[index + 1] || tabs[index - 1];\n\n                    if (nextTab) {\n                      activeName = nextTab.name;\n                    }\n                  }\n                });\n              }\n\n              this.editableTabsValue = activeName;\n              this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n            }\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        toDisplayString: _toDisplayString\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          style: {\n            \"margin-bottom\": \"20px\"\n          }\n        }, [_createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: $event => _ctx.addTab(_ctx.editableTabsValue)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" add tab \")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]), _createVNode(_component_el_tabs, {\n          modelValue: _ctx.editableTabsValue,\n          \"onUpdate:modelValue\": $event => _ctx.editableTabsValue = $event,\n          type: \"card\",\n          closable: \"\",\n          \"onTab-remove\": _ctx.removeTab\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.editableTabs, (item, index) => {\n            return _openBlock(), _createBlock(_component_el_tab_pane, {\n              key: item.name,\n              label: item.title,\n              name: item.name\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.content), 1\n              /* TEXT */\n              )]),\n              _: 2\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"label\", \"name\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onTab-remove\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            editableTabsValue: '2',\n            editableTabs: [{\n              title: 'Tab 1',\n              name: '1',\n              content: 'Tab 1 content'\n            }, {\n              title: 'Tab 2',\n              name: '2',\n              content: 'Tab 2 content'\n            }],\n            tabIndex: 2\n          };\n        },\n\n        methods: {\n          addTab(targetName) {\n            let newTabName = ++this.tabIndex + '';\n            this.editableTabs.push({\n              title: 'New Tab',\n              name: newTabName,\n              content: 'New Tab content'\n            });\n            this.editableTabsValue = newTabName;\n          },\n\n          removeTab(targetName) {\n            let tabs = this.editableTabs;\n            let activeName = this.editableTabsValue;\n\n            if (activeName === targetName) {\n              tabs.forEach((tab, index) => {\n                if (tab.name === targetName) {\n                  let nextTab = tabs[index + 1] || tabs[index - 1];\n\n                  if (nextTab) {\n                    activeName = nextTab.name;\n                  }\n                }\n              });\n            }\n\n            this.editableTabsValue = activeName;\n            this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/tabs.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/tabs.md?vue&type=template&id=f89833ac":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/tabs.md?vue&type=template&id=f89833ac ***!
  \************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"tabulacion\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabulacion\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabulación\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Divide colecciones de datos que están relacionados pero pertenecen a diferentes tipos.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"uso-basico\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#uso-basico\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Uso básico\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Tabulación básica y concisa\", -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Tabulación provee funcionalidad de tarjeta selectiva. Por defecto, la primer pestaña es seleccionada como activa, y es posible activar cualquier pestaña estableciendo el atributo de \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"value\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-tabs v-model=\\\"activeName\\\" @tab-click=\\\"handleClick\\\">\\n    <el-tab-pane label=\\\"User\\\" name=\\\"first\\\">User</el-tab-pane>\\n    <el-tab-pane label=\\\"Config\\\" name=\\\"second\\\">Config</el-tab-pane>\\n    <el-tab-pane label=\\\"Role\\\" name=\\\"third\\\">Role</el-tab-pane>\\n    <el-tab-pane label=\\\"Task\\\" name=\\\"fourth\\\">Task</el-tab-pane>\\n  </el-tabs>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        activeName: 'first'\\n      };\\n    },\\n    methods: {\\n      handleClick(tab, event) {\\n        console.log(tab, event);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"estilo-de-tarjeta\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#estilo-de-tarjeta\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Estilo de Tarjeta\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Pestañas diseñadas como tarjetas.\", -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Establecer \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"card\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para obtener una pestaña diseñada como tarjeta.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-tabs type=\\\"card\\\" @tab-click=\\\"handleClick\\\">\\n    <el-tab-pane label=\\\"User\\\">User</el-tab-pane>\\n    <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n    <el-tab-pane label=\\\"Role\\\">Role</el-tab-pane>\\n    <el-tab-pane label=\\\"Task\\\">Task</el-tab-pane>\\n  </el-tabs>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        activeName: 'first'\\n      };\\n    },\\n    methods: {\\n      handleClick(tab, event) {\\n        console.log(tab, event);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tarjeta-con-bordes\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tarjeta-con-bordes\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tarjeta con Bordes\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Pestañas de tarjeta con bordes.\", -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Establecer \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"border-card\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tabs type=\\\"border-card\\\">\\n  <el-tab-pane label=\\\"User\\\">User</el-tab-pane>\\n  <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n  <el-tab-pane label=\\\"Role\\\">Role</el-tab-pane>\\n  <el-tab-pane label=\\\"Task\\\">Task</el-tab-pane>\\n</el-tabs>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"posicion-de-tabulacion\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#posicion-de-tabulacion\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Posición de tabulación\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Es posible usar el atributo \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"tab-position\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para establecer la posición de la tabulación.\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Es posible escoger entre cuatro direcciones: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"tabPosition=\\\"left|right|top|bottom\\\"\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-radio-group v-model=\\\"tabPosition\\\" style=\\\"margin-bottom: 30px;\\\">\\n    <el-radio-button label=\\\"top\\\">top</el-radio-button>\\n    <el-radio-button label=\\\"right\\\">right</el-radio-button>\\n    <el-radio-button label=\\\"bottom\\\">bottom</el-radio-button>\\n    <el-radio-button label=\\\"left\\\">left</el-radio-button>\\n  </el-radio-group>\\n\\n  <el-tabs :tab-position=\\\"tabPosition\\\" style=\\\"height: 200px;\\\">\\n    <el-tab-pane label=\\\"User\\\">User</el-tab-pane>\\n    <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n    <el-tab-pane label=\\\"Role\\\">Role</el-tab-pane>\\n    <el-tab-pane label=\\\"Task\\\">Task</el-tab-pane>\\n  </el-tabs>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tabPosition: 'left'\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"pestana-personalizada\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#pestana-personalizada\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Pestaña Personalizada\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Es posible usar slots con nombre para personalizar el contenido de la etiqueta de la pestaña.\", -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tabs type=\\\"border-card\\\">\\n  <el-tab-pane>\\n    <span slot=\\\"label\\\"><i class=\\\"el-icon-date\\\"></i> Route</span>\\n    Route\\n  </el-tab-pane>\\n  <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n  <el-tab-pane label=\\\"Role\\\">Role</el-tab-pane>\\n  <el-tab-pane label=\\\"Task\\\">Task</el-tab-pane>\\n</el-tabs>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"agregar-y-cerrar-pestana\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#agregar-y-cerrar-pestana\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Agregar y cerrar pestaña\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Solo las pestañas de tipo tarjeta soportan adición y cierre.\", -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tabs v-model=\\\"editableTabsValue\\\" type=\\\"card\\\" editable @edit=\\\"handleTabsEdit\\\">\\n  <el-tab-pane\\n    v-for=\\\"(item, index) in editableTabs\\\"\\n    :key=\\\"item.name\\\"\\n    :label=\\\"item.title\\\"\\n    :name=\\\"item.name\\\"\\n  >\\n    {{item.content}}\\n  </el-tab-pane>\\n</el-tabs>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        editableTabsValue: '2',\\n        editableTabs: [{\\n          title: 'Tab 1',\\n          name: '1',\\n          content: 'Tab 1 content'\\n        }, {\\n          title: 'Tab 2',\\n          name: '2',\\n          content: 'Tab 2 content'\\n        }],\\n        tabIndex: 2\\n      }\\n    },\\n    methods: {\\n      handleTabsEdit(targetName, action) {\\n        if (action === 'add') {\\n          let newTabName = ++this.tabIndex + '';\\n          this.editableTabs.push({\\n            title: 'New Tab',\\n            name: newTabName,\\n            content: 'New Tab content'\\n          });\\n          this.editableTabsValue = newTabName;\\n        }\\n        if (action === 'remove') {\\n          let tabs = this.editableTabs;\\n          let activeName = this.editableTabsValue;\\n          if (activeName === targetName) {\\n            tabs.forEach((tab, index) => {\\n              if (tab.name === targetName) {\\n                let nextTab = tabs[index + 1] || tabs[index - 1];\\n                if (nextTab) {\\n                  activeName = nextTab.name;\\n                }\\n              }\\n            });\\n          }\\n          \\n          this.editableTabsValue = activeName;\\n          this.editableTabs = tabs.filter(tab => tab.name !== targetName);\\n        }\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"boton-disparador-personalizado-de-la-nueva-pestana\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#boton-disparador-personalizado-de-la-nueva-pestana\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Botón disparador personalizado de la nueva pestaña\")\n], -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<div style=\\\"margin-bottom: 20px;\\\">\\n  <el-button\\n    size=\\\"small\\\"\\n    @click=\\\"addTab(editableTabsValue)\\\"\\n  >\\n    add tab\\n  </el-button>\\n</div>\\n<el-tabs v-model=\\\"editableTabsValue\\\" type=\\\"card\\\" closable @tab-remove=\\\"removeTab\\\">\\n  <el-tab-pane\\n    v-for=\\\"(item, index) in editableTabs\\\"\\n    :key=\\\"item.name\\\"\\n    :label=\\\"item.title\\\"\\n    :name=\\\"item.name\\\"\\n  >\\n    {{item.content}}\\n  </el-tab-pane>\\n</el-tabs>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        editableTabsValue: '2',\\n        editableTabs: [{\\n          title: 'Tab 1',\\n          name: '1',\\n          content: 'Tab 1 content'\\n        }, {\\n          title: 'Tab 2',\\n          name: '2',\\n          content: 'Tab 2 content'\\n        }],\\n        tabIndex: 2\\n      }\\n    },\\n    methods: {\\n      addTab(targetName) {\\n        let newTabName = ++this.tabIndex + '';\\n        this.editableTabs.push({\\n          title: 'New Tab',\\n          name: newTabName,\\n          content: 'New Tab content'\\n        });\\n        this.editableTabsValue = newTabName;\\n      },\\n      removeTab(targetName) {\\n        let tabs = this.editableTabs;\\n        let activeName = this.editableTabsValue;\\n        if (activeName === targetName) {\\n          tabs.forEach((tab, index) => {\\n            if (tab.name === targetName) {\\n              let nextTab = tabs[index + 1] || tabs[index - 1];\\n              if (nextTab) {\\n                activeName = nextTab.name;\\n              }\\n            }\\n          });\\n        }\\n        \\n        this.editableTabsValue = activeName;\\n        this.editableTabs = tabs.filter(tab => tab.name !== targetName);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"atributos-de-pestanas\\\"><a class=\\\"header-anchor\\\" href=\\\"#atributos-de-pestanas\\\">¶</a> Atributos de Pestañas</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>value / v-model</td><td>valor enlazado, nombre de la pestaña seleccionada</td><td>string</td><td>—</td><td>nombre de la primer pestaña</td></tr><tr><td>type</td><td>tipo de Pestaña</td><td>string</td><td>card/border-card</td><td>—</td></tr><tr><td>closable</td><td>si la Pestaña es cerrable</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>addable</td><td>si la Pestaña es añadible</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>editable</td><td>si la Pestaña es añadible y cerrable</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>tab-position</td><td>posición de tabulación</td><td>string</td><td>top/right/bottom/left</td><td>top</td></tr><tr><td>stretch</td><td>si el ancho del tab se ajusta automáticamente a su contenedor</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>before-leave</td><td>función <code>hook</code> antes de cambiar de pestaña. Si se devuelve <code>false</code> o se devuelve una <code>Promise</code> y luego se rechaza, se evitará el cambio.</td><td>Function(activeName, oldActiveName)</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"eventos-de-pestanas\\\"><a class=\\\"header-anchor\\\" href=\\\"#eventos-de-pestanas\\\">¶</a> Eventos de Pestañas</h3><table><thead><tr><th>Nombre de Evento</th><th>Descripción</th><th>Parámetros</th></tr></thead><tbody><tr><td>tab-click</td><td>se lanza cuando se hace clic a una pestaña</td><td>pestaña clickeada</td></tr><tr><td>tab-remove</td><td>se lanza cuando se hace clic al botón tab-remove</td><td>nombre de la pestaña removida</td></tr><tr><td>tab-add</td><td>se lanza cuando se hace clic al botón tab-add</td><td>—</td></tr><tr><td>edit</td><td>se lanza cuando los botones de tab-add y/o tab-remove son clickeados</td><td>(targetName, action)</td></tr></tbody></table><h3 id=\\\"atributos-del-tab-pane\\\"><a class=\\\"header-anchor\\\" href=\\\"#atributos-del-tab-pane\\\">¶</a> Atributos del Tab-pane</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores Aceptados</th><th>Default</th></tr></thead><tbody><tr><td>label</td><td>título de la pestaña</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>si la Tabulación está deshabilitada</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>name</td><td>identificador correspondiente al value de la Tabulación, representando el alias del tab-pane</td><td>string</td><td>—</td><td>número ordinal del tab-pane en la secuencia, p.ej el primer tab-pane de pestañas es &#39;1&#39;</td></tr><tr><td>closable</td><td>si el Tab es cerrable</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>lazy</td><td>si Tab es renderizado con <code>lazy-load</code></td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table>\", 6)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_7\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_8,\n    _hoisted_9,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_11\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_10\n      ]),\n      _: 1\n    }),\n    _hoisted_12,\n    _hoisted_13,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_14\n      ]),\n      _: 1\n    }),\n    _hoisted_16,\n    _hoisted_17,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_19\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_18\n      ]),\n      _: 1\n    }),\n    _hoisted_20,\n    _hoisted_21,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_22\n      ]),\n      _: 1\n    }),\n    _hoisted_23,\n    _hoisted_24,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_25\n      ]),\n      _: 1\n    }),\n    _hoisted_26,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_27\n      ]),\n      _: 1\n    }),\n    _hoisted_28\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/tabs.md?vue&type=template&id=f89833ac\n");

/***/ })

}]);