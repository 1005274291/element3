(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[97],{

/***/ "./examples/docs/en-US/transfer.md":
/*!*****************************************!*\
  !*** ./examples/docs/en-US/transfer.md ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _transfer_md_vue_type_template_id_4f1e3dae__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transfer.md?vue&type=template&id=4f1e3dae */ \"./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae\");\n/* harmony import */ var _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transfer.md?vue&type=script&lang=js */ \"./examples/docs/en-US/transfer.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _transfer_md_vue_type_template_id_4f1e3dae__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"4f1e3dae\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('4f1e3dae', _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('4f1e3dae', _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./transfer.md?vue&type=template&id=4f1e3dae */ \"./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _transfer_md_vue_type_template_id_4f1e3dae__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transfer.md?vue&type=template&id=4f1e3dae */ \"./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae\");\n(() => {\n    api.rerender('4f1e3dae', _transfer_md_vue_type_template_id_4f1e3dae__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/en-US/transfer.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL3RyYW5zZmVyLm1kP2NkMGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQW9FO0FBQ1Y7QUFDTDtBQUNyRCw0RUFBTSxVQUFVLGlGQUFNO0FBQ3RCO0FBQ0EsSUFBSSxJQUFVO0FBQ2QsRUFBRSw0RUFBTTtBQUNSO0FBQ0E7QUFDQSxvQ0FBb0MsNEVBQU07QUFDMUMsMkJBQTJCLDRFQUFNO0FBQ2pDOztBQUVBLG9CQUFvQixvSEFBNkMsRUFBRTtBQUFBO0FBQ25FLDZCQUE2QixpRkFBTTtBQUNuQyxHQUFHOztBQUVIOztBQUVBLDRFQUFNOztBQUVTLDJJIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lbi1VUy90cmFuc2Zlci5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRmMWUzZGFlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdHJhbnNmZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vdHJhbnNmZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuc2NyaXB0LnJlbmRlciA9IHJlbmRlclxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgc2NyaXB0Ll9faG1ySWQgPSBcIjRmMWUzZGFlXCJcbiAgY29uc3QgYXBpID0gX19WVUVfSE1SX1JVTlRJTUVfX1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghYXBpLmNyZWF0ZVJlY29yZCgnNGYxZTNkYWUnLCBzY3JpcHQpKSB7XG4gICAgYXBpLnJlbG9hZCgnNGYxZTNkYWUnLCBzY3JpcHQpXG4gIH1cbiAgXG4gIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi90cmFuc2Zlci5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD00ZjFlM2RhZVwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCc0ZjFlM2RhZScsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VuLVVTL3RyYW5zZmVyLm1kXCJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/en-US/transfer.md\n");

/***/ }),

/***/ "./examples/docs/en-US/transfer.md?vue&type=script&lang=js":
/*!*****************************************************************!*\
  !*** ./examples/docs/en-US/transfer.md?vue&type=script&lang=js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./transfer.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/transfer.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL3RyYW5zZmVyLm1kPzM3NDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBNk0iLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VuLVVTL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/en-US/transfer.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae":
/*!***********************************************************************!*\
  !*** ./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae ***!
  \***********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_template_id_4f1e3dae__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./transfer.md?vue&type=template&id=4f1e3dae */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_template_id_4f1e3dae__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL3RyYW5zZmVyLm1kP2Y4ZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VuLVVTL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRmMWUzZGFlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS01IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRmMWUzZGFlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/transfer.md?vue&type=script&lang=js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/en-US/transfer.md?vue&type=script&lang=js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_component_el_transfer, {\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          data: _ctx.data\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"data\"]);\n      }\n\n      const {\n        reactive,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            data: generateData(),\n            value: [1, 4]\n          });\n          return toRefs(state);\n        }\n\n      };\n\n      const generateData = _ => {\n        const data = [];\n\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            key: i,\n            label: `Option ${i}`,\n            disabled: i % 4 === 0\n          });\n        }\n\n        return data;\n      };\n\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_component_el_transfer, {\n          filterable: \"\",\n          \"filter-method\": _ctx.filterMethod,\n          \"filter-placeholder\": \"State Abbreviations\",\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          data: _ctx.data\n        }, null, 8\n        /* PROPS */\n        , [\"filter-method\", \"modelValue\", \"onUpdate:modelValue\", \"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          const generateData = _ => {\n            const data = [];\n            const states = ['California', 'Illinois', 'Maryland', 'Texas', 'Florida', 'Colorado', 'Connecticut '];\n            const initials = ['CA', 'IL', 'MD', 'TX', 'FL', 'CO', 'CT'];\n            states.forEach((city, index) => {\n              data.push({\n                label: city,\n                key: initials[index],\n                initial: initials[index]\n              });\n            });\n            return data;\n          };\n\n          return {\n            data: generateData(),\n            value: [],\n\n            filterMethod(query, item) {\n              return item.initial.toLowerCase().indexOf(query.toLowerCase()) > -1;\n            }\n\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        toDisplayString: _toDisplayString,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"p\", {\n          style: {\n            \"text-align\": \"center\",\n            \"margin\": \"0 0 20px\"\n          }\n        }, \"Customize data items using render-content\"), _createVNode(\"div\", {\n          style: {\n            \"text-align\": \"center\"\n          }\n        }, [_createVNode(_component_el_transfer, {\n          style: {\n            \"text-align\": \"left\",\n            \"display\": \"inline-block\"\n          },\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          filterable: \"\",\n          \"left-default-checked\": [2, 3],\n          \"right-default-checked\": [1],\n          \"render-content\": _ctx.renderFunc,\n          titles: ['Source', 'Target'],\n          \"button-texts\": ['To left', 'To right'],\n          format: {\n            noChecked: '${total}',\n            hasChecked: '${checked}/${total}'\n          },\n          onChange: _ctx.handleChange,\n          data: _ctx.data\n        }, {\n          \"left-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          \"right-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"render-content\", \"onChange\", \"data\"])]), _createVNode(\"p\", {\n          style: {\n            \"text-align\": \"center\",\n            \"margin\": \"50px 0 20px\"\n          }\n        }, \"Customize data items using scoped slot\"), _createVNode(\"div\", {\n          style: {\n            \"text-align\": \"center\"\n          }\n        }, [_createVNode(_component_el_transfer, {\n          style: {\n            \"text-align\": \"left\",\n            \"display\": \"inline-block\"\n          },\n          modelValue: _ctx.value4,\n          \"onUpdate:modelValue\": $event => _ctx.value4 = $event,\n          filterable: \"\",\n          \"left-default-checked\": [2, 3],\n          \"right-default-checked\": [1],\n          titles: ['Source', 'Target'],\n          \"button-texts\": ['To left', 'To right'],\n          format: {\n            noChecked: '${total}',\n            hasChecked: '${checked}/${total}'\n          },\n          onChange: _ctx.handleChange,\n          data: _ctx.data\n        }, {\n          default: _withCtx(({\n            option\n          }) => [_createVNode(\"span\", null, _toDisplayString(option.key) + \" - \" + _toDisplayString(option.label), 1\n          /* TEXT */\n          )]),\n          \"left-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          \"right-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onChange\", \"data\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        reactive,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            data: generateData(),\n            value: [1],\n            value4: [1]\n          });\n\n          const renderFunc = (h, option) => Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"span\", null, [option.key, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" - \"), option.label]);\n\n          const handleChange = (value, direction, movedKeys) => console.log(value, direction, movedKeys);\n\n          return { ...toRefs(state),\n            renderFunc,\n            handleChange\n          };\n        }\n\n      };\n\n      const generateData = _ => {\n        const data = [];\n\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            key: i,\n            label: `Option ${i}`,\n            disabled: i % 4 === 0\n          });\n        }\n\n        return data;\n      };\n\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_component_el_transfer, {\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          props: {\n            key: 'value',\n            label: 'desc'\n          },\n          data: _ctx.data\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"data\"]);\n      }\n\n      const {\n        reactive,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            value: [],\n            data: generateData()\n          });\n          return toRefs(state);\n        }\n\n      };\n\n      const generateData = _ => {\n        const data = [];\n\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            value: i,\n            desc: `Option ${i}`,\n            disabled: i % 4 === 0\n          });\n        }\n\n        return data;\n      };\n\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/transfer.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae ***!
  \*******************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"transfer\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#transfer\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Transfer\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"basic-usage\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#basic-usage\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Basic usage\")\n], -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Data is passed to Transfer via the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"data\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" attribute. The data needs to be an object array, and each object should have these attributes: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" being the identification of the data item, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" being the displayed text, and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"disabled\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" indicating if the data item is disabled. Items inside the target list are in sync with the variable binding to \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"v-model\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", and the value of that variable is an array of target item keys. So, if you don't want the target list be initially empty, you can initialize the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"v-model\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" with an array.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-transfer v-model=\\\"value\\\" :data=\\\"data\\\"></el-transfer>\\n</template>\\n\\n<script>\\nimport { reactive, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      data: generateData(),\\n      value: [1, 4]\\n    })\\n\\n    return toRefs(state)\\n  }\\n}\\n\\nconst generateData = _ => {\\n  const data = []\\n  for (let i = 1; i <= 15; i++) {\\n    data.push({\\n      key: i,\\n      label: `Option ${ i }`,\\n      disabled: i % 4 === 0\\n    })\\n  }\\n  return data\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"filterable\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#filterable\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Filterable\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"You can search and filter data items.\", -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Set the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filterable\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" attribute to \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to enable filter mode. By default, if the data item \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" contains the search keyword, it will be included in the search result. Also, you can implement you own filter method with the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filter-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" attribute. It takes a method and passes search keyword and each data item to it whenever the keyword changes. For a certain data item, if the method returns true, it will be included in the result list.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-transfer\\n    filterable\\n    :filter-method=\\\"filterMethod\\\"\\n    filter-placeholder=\\\"State Abbreviations\\\"\\n    v-model=\\\"value\\\"\\n    :data=\\\"data\\\">\\n  </el-transfer>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      const generateData = _ => {\\n        const data = []\\n        const states = ['California', 'Illinois', 'Maryland', 'Texas', 'Florida', 'Colorado', 'Connecticut ']\\n        const initials = ['CA', 'IL', 'MD', 'TX', 'FL', 'CO', 'CT']\\n        states.forEach((city, index) => {\\n          data.push({\\n            label: city,\\n            key: initials[index],\\n            initial: initials[index]\\n          })\\n        })\\n        return data\\n      }\\n      return {\\n        data: generateData(),\\n        value: [],\\n        filterMethod(query, item) {\\n          return item.initial.toLowerCase().indexOf(query.toLowerCase()) > -1\\n        }\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"customizable\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#customizable\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Customizable\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"You can customize list titles, button texts, render function for data items, checking status texts in list footer and list footer contents.\", -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"titles\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"button-texts\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"format\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to respectively customize list titles, button texts, render function for data items, checking status texts in list header. Plus, you can also use scoped slot to customize data items. For list footer contents, two named slots are provided: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"left-footer\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"right-footer\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Plus, if you want some items initially checked, you can use \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"left-default-checked\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"right-default-checked\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Finally, this example demonstrate the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"change\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" event. Note that this demo can't run in jsfiddle because it doesn't support JSX syntax. In a real project, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" will work if relevant dependencies are correctly configured.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <p style=\\\"text-align: center; margin: 0 0 20px\\\">Customize data items using render-content</p>\\n  <div style=\\\"text-align: center\\\">\\n    <el-transfer\\n      style=\\\"text-align: left; display: inline-block\\\"\\n      v-model=\\\"value\\\"\\n      filterable\\n      :left-default-checked=\\\"[2, 3]\\\"\\n      :right-default-checked=\\\"[1]\\\"\\n      :render-content=\\\"renderFunc\\\"\\n      :titles=\\\"['Source', 'Target']\\\"\\n      :button-texts=\\\"['To left', 'To right']\\\"\\n      :format=\\\"{\\n        noChecked: '${total}',\\n        hasChecked: '${checked}/${total}'\\n      }\\\"\\n      @change=\\\"handleChange\\\"\\n      :data=\\\"data\\\"\\n    >\\n      <template #left-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n      <template #right-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n    </el-transfer>\\n  </div>\\n  <p style=\\\"text-align: center; margin: 50px 0 20px\\\">Customize data items using scoped slot</p>\\n  <div style=\\\"text-align: center\\\">\\n    <el-transfer\\n      style=\\\"text-align: left; display: inline-block\\\"\\n      v-model=\\\"value4\\\"\\n      filterable\\n      :left-default-checked=\\\"[2, 3]\\\"\\n      :right-default-checked=\\\"[1]\\\"\\n      :titles=\\\"['Source', 'Target']\\\"\\n      :button-texts=\\\"['To left', 'To right']\\\"\\n      :format=\\\"{\\n        noChecked: '${total}',\\n        hasChecked: '${checked}/${total}'\\n      }\\\"\\n      @change=\\\"handleChange\\\"\\n      :data=\\\"data\\\"\\n    >\\n      <template #default=\\\"{ option }\\\">\\n        <span>{{ option.key }} - {{ option.label }}</span>\\n      </template>\\n      \\n      <template #left-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n      <template #right-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n    </el-transfer>\\n  </div>\\n</template>\\n\\n<style scoped>\\n  .transfer-footer {\\n    margin-left: 15px;\\n    padding: 6px 5px;\\n  }\\n</style>\\n\\n<script>\\nimport { reactive, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      data: generateData(),\\n      value: [1],\\n      value4: [1]\\n    })\\n\\n    const renderFunc = (h, option) => <span>{ option.key } - { option.label }</span>\\n\\n    const handleChange = (value, direction, movedKeys) => console.log(value, direction, movedKeys)\\n    \\n    return {\\n      ...toRefs(state),\\n      renderFunc,\\n      handleChange\\n    }\\n  }\\n}\\n\\nconst generateData = _ => {\\n  const data = []\\n  for (let i = 1; i <= 15; i++) {\\n    data.push({\\n      key: i,\\n      label: `Option ${ i }`,\\n      disabled: i % 4 === 0\\n    })\\n  }\\n  return data\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"prop-aliases\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#prop-aliases\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Prop aliases\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"By default, Transfer looks for \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"disabled\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" in a data item. If your data items have different key names, you can use the \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"props\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" attribute to define aliases.\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"The data items in this example do not have \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"s or \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"s, instead they have \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"value\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"s and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"desc\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"s. So you need to set aliases for \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-transfer\\n    v-model=\\\"value\\\"\\n    :props=\\\"{\\n      key: 'value',\\n      label: 'desc'\\n    }\\\"\\n    :data=\\\"data\\\"\\n  >\\n  </el-transfer>\\n</template>\\n\\n<script>\\nimport { reactive, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      value: [],\\n      data: generateData()\\n    })\\n\\n    return toRefs(state)\\n  }\\n}\\n\\nconst generateData = _ => {\\n  const data = []\\n  for (let i = 1; i <= 15; i++) {\\n    data.push({\\n      value: i,\\n      desc: `Option ${ i }`,\\n      disabled: i % 4 === 0\\n    })\\n  }\\n  return data\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributes\\\">¶</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>value / v-model</td><td>binding value</td><td>array</td><td>—</td><td>—</td></tr><tr><td>data</td><td>data source</td><td>array[{ key, label, disabled }]</td><td>—</td><td>[ ]</td></tr><tr><td>filterable</td><td>whether Transfer is filterable</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>filter-placeholder</td><td>placeholder for the filter input</td><td>string</td><td>—</td><td>Enter keyword</td></tr><tr><td>filter-method</td><td>custom filter method</td><td>function</td><td>—</td><td>—</td></tr><tr><td>target-order</td><td>order strategy for elements in the target list. If set to <code>original</code>, the elements will keep the same order as the data source. If set to <code>push</code>, the newly added elements will be pushed to the bottom. If set to <code>unshift</code>, the newly added elements will be inserted on the top</td><td>string</td><td>original / push / unshift</td><td>original</td></tr><tr><td>titles</td><td>custom list titles</td><td>array</td><td>—</td><td>[&#39;List 1&#39;, &#39;List 2&#39;]</td></tr><tr><td>button-texts</td><td>custom button texts</td><td>array</td><td>—</td><td>[ ]</td></tr><tr><td>render-content</td><td>custom render function for data items</td><td>function(h, option)</td><td>—</td><td>—</td></tr><tr><td>format</td><td>texts for checking status in list header</td><td>object{noChecked, hasChecked}</td><td>—</td><td>{ noChecked: &#39;${checked}/${total}&#39;, hasChecked: &#39;${checked}/${total}&#39; }</td></tr><tr><td>props</td><td>prop aliases for data source</td><td>object{key, label, disabled}</td><td>—</td><td>—</td></tr><tr><td>left-default-checked</td><td>key array of initially checked data items of the left list</td><td>array</td><td>—</td><td>[ ]</td></tr><tr><td>right-default-checked</td><td>key array of initially checked data items of the right list</td><td>array</td><td>—</td><td>[ ]</td></tr></tbody></table><h3 id=\\\"slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#slot\\\">¶</a> Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>left-footer</td><td>content of left list footer</td></tr><tr><td>right-footer</td><td>content of right list footer</td></tr></tbody></table><h3 id=\\\"scoped-slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#scoped-slot\\\">¶</a> Scoped Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Custom content for data items. The scope parameter is { option }</td></tr></tbody></table><h3 id=\\\"methods\\\"><a class=\\\"header-anchor\\\" href=\\\"#methods\\\">¶</a> Methods</h3><table><thead><tr><th>Method</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>clearQuery</td><td>clear the filter keyword of a certain panel</td><td>&#39;left&#39; / &#39;right&#39;</td></tr></tbody></table><h3 id=\\\"events\\\"><a class=\\\"header-anchor\\\" href=\\\"#events\\\">¶</a> Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>triggers when data items change in the right list</td><td>key array of current data items in the right list, transfer direction (left or right), moved item keys</td></tr><tr><td>left-check-change</td><td>triggers when end user changes the checked state of any data item in the left list</td><td>key array of currently checked items, key array of items whose checked state have changed</td></tr><tr><td>right-check-change</td><td>triggers when end user changes the checked state of any data item in the right list</td><td>key array of currently checked items, key array of items whose checked state have changed</td></tr></tbody></table>\", 10)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_5\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_4\n      ]),\n      _: 1\n    }),\n    _hoisted_6,\n    _hoisted_7,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_8\n      ]),\n      _: 1\n    }),\n    _hoisted_10,\n    _hoisted_11,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_13\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      _: 1\n    }),\n    _hoisted_14,\n    _hoisted_15,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_16\n      ]),\n      _: 1\n    }),\n    _hoisted_18\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/transfer.md?vue&type=template&id=4f1e3dae\n");

/***/ })

}]);