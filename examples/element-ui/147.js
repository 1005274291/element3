(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[147],{

/***/ "./examples/docs/es/table.md":
/*!***********************************!*\
  !*** ./examples/docs/es/table.md ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _table_md_vue_type_template_id_1b036018__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./table.md?vue&type=template&id=1b036018 */ \"./examples/docs/es/table.md?vue&type=template&id=1b036018\");\n/* harmony import */ var _table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./table.md?vue&type=script&lang=js */ \"./examples/docs/es/table.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _table_md_vue_type_template_id_1b036018__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"1b036018\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('1b036018', _table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('1b036018', _table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./table.md?vue&type=template&id=1b036018 */ \"./examples/docs/es/table.md?vue&type=template&id=1b036018\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _table_md_vue_type_template_id_1b036018__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./table.md?vue&type=template&id=1b036018 */ \"./examples/docs/es/table.md?vue&type=template&id=1b036018\");\n(() => {\n    api.rerender('1b036018', _table_md_vue_type_template_id_1b036018__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/es/table.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RhYmxlLm1kPzBiNmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQWlFO0FBQ1Y7QUFDTDtBQUNsRCx5RUFBTSxVQUFVLDhFQUFNO0FBQ3RCO0FBQ0EsSUFBSSxJQUFVO0FBQ2QsRUFBRSx5RUFBTTtBQUNSO0FBQ0E7QUFDQSxvQ0FBb0MseUVBQU07QUFDMUMsMkJBQTJCLHlFQUFNO0FBQ2pDOztBQUVBLG9CQUFvQiwyR0FBMEMsRUFBRTtBQUFBO0FBQ2hFLDZCQUE2Qiw4RUFBTTtBQUNuQyxHQUFHOztBQUVIOztBQUVBLHlFQUFNOztBQUVTLHdJIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lcy90YWJsZS5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL3RhYmxlLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFiMDM2MDE4XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdGFibGUubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vdGFibGUubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuc2NyaXB0LnJlbmRlciA9IHJlbmRlclxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgc2NyaXB0Ll9faG1ySWQgPSBcIjFiMDM2MDE4XCJcbiAgY29uc3QgYXBpID0gX19WVUVfSE1SX1JVTlRJTUVfX1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghYXBpLmNyZWF0ZVJlY29yZCgnMWIwMzYwMTgnLCBzY3JpcHQpKSB7XG4gICAgYXBpLnJlbG9hZCgnMWIwMzYwMTgnLCBzY3JpcHQpXG4gIH1cbiAgXG4gIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi90YWJsZS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xYjAzNjAxOFwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCcxYjAzNjAxOCcsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VzL3RhYmxlLm1kXCJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/es/table.md\n");

/***/ }),

/***/ "./examples/docs/es/table.md?vue&type=script&lang=js":
/*!***********************************************************!*\
  !*** ./examples/docs/es/table.md?vue&type=script&lang=js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./table.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/table.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_table_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RhYmxlLm1kP2VmNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBME0iLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VzL3RhYmxlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RhYmxlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RhYmxlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/table.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/es/table.md?vue&type=template&id=1b036018":
/*!*****************************************************************!*\
  !*** ./examples/docs/es/table.md?vue&type=template&id=1b036018 ***!
  \*****************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_table_md_vue_type_template_id_1b036018__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./table.md?vue&type=template&id=1b036018 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/table.md?vue&type=template&id=1b036018\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_table_md_vue_type_template_id_1b036018__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RhYmxlLm1kP2RjM2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VzL3RhYmxlLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFiMDM2MDE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS01IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RhYmxlLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFiMDM2MDE4XCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/table.md?vue&type=template&id=1b036018\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/table.md?vue&type=script&lang=js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/table.md?vue&type=script&lang=js ***!
  \******************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          stripe: \"\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          border: \"\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          },\n          \"row-class-name\": _ctx.tableRowClassName\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\", \"row-class-name\"]);\n      }\n\n      const democomponentExport = {\n        methods: {\n          tableRowClassName({\n            row,\n            rowIndex\n          }) {\n            if (rowIndex === 1) {\n              return 'warning-row';\n            } else if (rowIndex === 3) {\n              return 'success-row';\n            }\n\n            return '';\n          }\n\n        },\n\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          height: \"250\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-08',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-06',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-07',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            fixed: \"\",\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"state\",\n            label: \"Estado\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"city\",\n            label: \"Ciudad\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\",\n            width: \"300\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"zip\",\n            label: \"Código postal\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            fixed: \"right\",\n            label: \"Operaciones\",\n            width: \"120\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(_component_el_button, {\n              onClick: _ctx.handleClick,\n              type: \"text\",\n              size: \"small\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Detalle\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              type: \"text\",\n              size: \"small\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Editar\")]),\n              _: 1\n            })])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        methods: {\n          handleClick() {\n            console.log('click');\n          }\n\n        },\n\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Home'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Office'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Home'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Office'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          },\n          height: \"250\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            fixed: \"\",\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"state\",\n            label: \"Estado\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"city\",\n            label: \"Ciudad\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\",\n            width: \"300\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"zip\",\n            label: \"Código postal\",\n            width: \"120\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-08',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-06',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-07',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo7\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        withModifiers: _withModifiers,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          },\n          \"max-height\": \"250\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            fixed: \"\",\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"state\",\n            label: \"Estado\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"city\",\n            label: \"Ciudad\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\",\n            width: \"300\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"zip\",\n            label: \"Código postal\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            fixed: \"right\",\n            label: \"Operaciones\",\n            width: \"120\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(_component_el_button, {\n              onClick: _withModifiers($event => _ctx.deleteRow(_ctx.scope.$index, _ctx.tableData), [\"prevent\"]),\n              type: \"text\",\n              size: \"small\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\" Eliminar \")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        methods: {\n          deleteRow(index, rows) {\n            rows.splice(index, 1);\n          }\n\n        },\n\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-08',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-06',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-07',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo8\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"Información de entrega\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_table_column, {\n              prop: \"name\",\n              label: \"Nombre\",\n              width: \"120\"\n            }), _createVNode(_component_el_table_column, {\n              label: \"Información de dirección\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_table_column, {\n                prop: \"state\",\n                label: \"Estado\",\n                width: \"120\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"city\",\n                label: \"Ciudad\",\n                width: \"120\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"address\",\n                label: \"Dirección\",\n                width: \"300\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"zip\",\n                label: \"Código postal\",\n                width: \"120\"\n              })]),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-08',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-06',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-07',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo9\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_table, {\n          ref: \"singleTable\",\n          data: _ctx.tableData,\n          \"highlight-current-row\": \"\",\n          onCurrentChange: _ctx.handleCurrentChange,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            type: \"index\",\n            width: \"50\"\n          }), _createVNode(_component_el_table_column, {\n            property: \"date\",\n            label: \"Fecha\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            property: \"name\",\n            label: \"Nombre\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            property: \"address\",\n            label: \"Dirección\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\", \"onCurrentChange\"]), _createVNode(\"div\", {\n          style: {\n            \"margin-top\": \"20px\"\n          }\n        }, [_createVNode(_component_el_button, {\n          onClick: $event => _ctx.setCurrent(_ctx.tableData[1])\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Seleccionar segunda fila\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: $event => _ctx.setCurrent()\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Limpiar selección\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }],\n            currentRow: null\n          };\n        },\n\n        methods: {\n          setCurrent(row) {\n            this.$refs.singleTable.setCurrentRow(row);\n          },\n\n          handleCurrentChange(val) {\n            this.currentRow = val;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo10\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        toDisplayString: _toDisplayString,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_table, {\n          ref: \"multipleTable\",\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          },\n          onSelectionChange: _ctx.handleSelectionChange\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            type: \"selection\",\n            width: \"55\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"Fecha\",\n            width: \"120\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, _toDisplayString(_ctx.scope.row.date), 1\n            /* TEXT */\n            )]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            property: \"name\",\n            label: \"Nombre\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            property: \"address\",\n            label: \"Dirección\",\n            \"show-overflow-tooltip\": \"\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\", \"onSelectionChange\"]), _createVNode(\"div\", {\n          style: {\n            \"margin-top\": \"20px\"\n          }\n        }, [_createVNode(_component_el_button, {\n          onClick: $event => _ctx.toggleSelection([_ctx.tableData[1], _ctx.tableData[2]])\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Cambia el estado de selección de la segunda y tercera fila.\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: $event => _ctx.toggleSelection()\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Limpiar selección\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-08',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-06',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-07',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }],\n            multipleSelection: []\n          };\n        },\n\n        methods: {\n          toggleSelection(rows) {\n            if (rows) {\n              rows.forEach(row => {\n                this.$refs.multipleTable.toggleRowSelection(row);\n              });\n            } else {\n              this.$refs.multipleTable.clearSelection();\n            }\n          },\n\n          handleSelectionChange(val) {\n            this.multipleSelection = val;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo11\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          \"default-sort\": {\n            prop: 'date',\n            order: 'descending'\n          },\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            sortable: \"\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\",\n            formatter: _ctx.formatter\n          }, null, 8\n          /* PROPS */\n          , [\"formatter\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }]\n          };\n        },\n\n        methods: {\n          formatter(row, column) {\n            return row.address;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo12\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        toDisplayString: _toDisplayString,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_tag = _resolveComponent(\"el-tag\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_button, {\n          onClick: _ctx.resetDateFilter\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"清除日期过滤器\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: _ctx.clearFilter\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"清除所有过滤器\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_el_table, {\n          ref: \"filterTable\",\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            sortable: \"\",\n            width: \"180\",\n            \"column-key\": \"date\",\n            filters: [{\n              text: '2016-05-01',\n              value: '2016-05-01'\n            }, {\n              text: '2016-05-02',\n              value: '2016-05-02'\n            }, {\n              text: '2016-05-03',\n              value: '2016-05-03'\n            }, {\n              text: '2016-05-04',\n              value: '2016-05-04'\n            }],\n            \"filter-method\": _ctx.filterHandler\n          }, null, 8\n          /* PROPS */\n          , [\"filter-method\"]), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\",\n            formatter: _ctx.formatter\n          }, null, 8\n          /* PROPS */\n          , [\"formatter\"]), _createVNode(_component_el_table_column, {\n            prop: \"tag\",\n            label: \"Etiqueta\",\n            width: \"100\",\n            filters: [{\n              text: 'Home',\n              value: 'Home'\n            }, {\n              text: 'Office',\n              value: 'Office'\n            }],\n            \"filter-method\": _ctx.filterTag,\n            \"filter-placement\": \"bottom-end\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(_component_el_tag, {\n              type: _ctx.scope.row.tag === 'Home' ? 'primary' : 'success',\n              \"disable-transitions\": \"\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.scope.row.tag), 1\n              /* TEXT */\n              )]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"type\"])])]),\n            _: 1\n          }, 8\n          /* PROPS */\n          , [\"filter-method\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles',\n              tag: 'Home'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles',\n              tag: 'Office'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles',\n              tag: 'Home'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles',\n              tag: 'Office'\n            }]\n          };\n        },\n\n        methods: {\n          resetDateFilter() {\n            this.$refs.filterTable.clearFilter('date');\n          },\n\n          clearFilter() {\n            this.$refs.filterTable.clearFilter();\n          },\n\n          formatter(row, column) {\n            return row.address;\n          },\n\n          filterTag(value, row) {\n            return row.tag === value;\n          },\n\n          filterHandler(value, row, column) {\n            const property = column['property'];\n            return row[property] === value;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo13\": function () {\n      const {\n        createVNode: _createVNode,\n        toDisplayString: _toDisplayString,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_tag = _resolveComponent(\"el-tag\");\n\n        const _component_el_popover = _resolveComponent(\"el-popover\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            label: \"Fecha\",\n            width: \"180\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(\"i\", {\n              class: \"el-icon-time\"\n            }), _createVNode(\"span\", {\n              style: {\n                \"margin-left\": \"10px\"\n              }\n            }, _toDisplayString(_ctx.scope.row.date), 1\n            /* TEXT */\n            )])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"Nombre\",\n            width: \"180\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(_component_el_popover, {\n              trigger: \"hover\",\n              placement: \"top\"\n            }, {\n              default: _withCtx(() => [_createVNode(\"p\", null, \"Name: \" + _toDisplayString(_ctx.scope.row.name), 1\n              /* TEXT */\n              ), _createVNode(\"p\", null, \"Addr: \" + _toDisplayString(_ctx.scope.row.address), 1\n              /* TEXT */\n              ), _createVNode(\"div\", {\n                slot: \"reference\",\n                class: \"name-wrapper\"\n              }, [_createVNode(_component_el_tag, {\n                size: \"medium\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.scope.row.name), 1\n                /* TEXT */\n                )]),\n                _: 1\n              })])]),\n              _: 1\n            })])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"Operaciones\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(_component_el_button, {\n              size: \"mini\",\n              onClick: $event => _ctx.handleEdit(_ctx.scope.$index, _ctx.scope.row)\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Editar\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              size: \"mini\",\n              type: \"danger\",\n              onClick: $event => _ctx.handleDelete(_ctx.scope.$index, _ctx.scope.row)\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Eliminar\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }]\n          };\n        },\n\n        methods: {\n          handleEdit(index, row) {\n            console.log(index, row);\n          },\n\n          handleDelete(index, row) {\n            console.log(index, row);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo14\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData.filter(data => !_ctx.search || data.name.toLowerCase().includes(_ctx.search.toLowerCase())),\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            label: \"Date\",\n            prop: \"date\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"Name\",\n            prop: \"name\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"right\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              slot: \"header\",\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(_component_el_input, {\n              modelValue: _ctx.search,\n              \"onUpdate:modelValue\": $event => _ctx.search = $event,\n              size: \"mini\",\n              placeholder: \"Type to search\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"template\", {\n              \"slot-scope\": \"scope\"\n            }, [_createVNode(_component_el_button, {\n              size: \"mini\",\n              onClick: $event => _ctx.handleEdit(_ctx.scope.$index, _ctx.scope.row)\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Edit\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              size: \"mini\",\n              type: \"danger\",\n              onClick: $event => _ctx.handleDelete(_ctx.scope.$index, _ctx.scope.row)\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Delete\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-02',\n              name: 'Tom',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-04',\n              name: 'John',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-01',\n              name: 'Morgan',\n              address: 'No. 189, Grove St, Los Angeles'\n            }, {\n              date: '2016-05-03',\n              name: 'Jessy',\n              address: 'No. 189, Grove St, Los Angeles'\n            }],\n            search: ''\n          };\n        },\n\n        methods: {\n          handleEdit(index, row) {\n            console.log(index, row);\n          },\n\n          handleDelete(index, row) {\n            console.log(index, row);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo15\": function () {\n      const {\n        toDisplayString: _toDisplayString,\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            type: \"expand\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              \"slot-scope\": \"props\"\n            }, [_createVNode(\"p\", null, \"Estado: \" + _toDisplayString(_ctx.props.row.state), 1\n            /* TEXT */\n            ), _createVNode(\"p\", null, \"Ciudad: \" + _toDisplayString(_ctx.props.row.city), 1\n            /* TEXT */\n            ), _createVNode(\"p\", null, \"Dirección: \" + _toDisplayString(_ctx.props.row.address), 1\n            /* TEXT */\n            ), _createVNode(\"p\", null, \"Código postal: \" + _toDisplayString(_ctx.props.row.zip), 1\n            /* TEXT */\n            )])]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            label: \"Fecha\",\n            prop: \"date\"\n          }), _createVNode(_component_el_table_column, {\n            label: \"Nombre\",\n            prop: \"name\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-08',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-06',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }, {\n              date: '2016-05-07',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036'\n            }]\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo16\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\",\n            \"margin-bottom\": \"20px\"\n          },\n          \"row-key\": \"id\",\n          border: \"\",\n          \"default-expand-all\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"日期\",\n            sortable: \"\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"name\",\n            sortable: \"\",\n            width: \"180\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]), _createVNode(_component_el_table, {\n          data: _ctx.tableData1,\n          style: {\n            \"width\": \"100%\"\n          },\n          \"row-key\": \"id\",\n          border: \"\",\n          lazy: \"\",\n          load: _ctx.load,\n          \"tree-props\": {\n            children: 'children',\n            hasChildren: 'hasChildren'\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"date\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"name\",\n            width: \"180\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\", \"load\"])]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              id: 1,\n              date: '2016-05-02',\n              name: 'wangxiaohu'\n            }, {\n              id: 2,\n              date: '2016-05-04',\n              name: 'wangxiaohu'\n            }, {\n              id: 3,\n              date: '2016-05-01',\n              name: 'wangxiaohu',\n              children: [{\n                id: 31,\n                date: '2016-05-01',\n                name: 'wangxiaohu'\n              }, {\n                id: 32,\n                date: '2016-05-01',\n                name: 'wangxiaohu'\n              }]\n            }, {\n              id: 4,\n              date: '2016-05-03',\n              name: 'wangxiaohu'\n            }],\n            tableData1: [{\n              id: 1,\n              date: '2016-05-02',\n              name: 'wangxiaohu'\n            }, {\n              id: 2,\n              date: '2016-05-04',\n              name: 'wangxiaohu'\n            }, {\n              id: 3,\n              date: '2016-05-01',\n              name: 'wangxiaohu',\n              hasChildren: true\n            }, {\n              id: 4,\n              date: '2016-05-03',\n              name: 'wangxiaohu'\n            }]\n          };\n        },\n\n        methods: {\n          load(tree, treeNode, resolve) {\n            setTimeout(() => {\n              resolve([{\n                id: 31,\n                date: '2016-05-01',\n                name: 'wangxiaohu'\n              }, {\n                id: 32,\n                date: '2016-05-01',\n                name: 'wangxiaohu'\n              }]);\n            }, 1000);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo17\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_table, {\n          data: _ctx.tableData,\n          border: \"\",\n          \"show-summary\": \"\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount1\",\n            sortable: \"\",\n            label: \"Monto 1\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount2\",\n            sortable: \"\",\n            label: \"Monto 2\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount3\",\n            sortable: \"\",\n            label: \"Monto 3\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]), _createVNode(_component_el_table, {\n          data: _ctx.tableData,\n          border: \"\",\n          height: \"200\",\n          \"summary-method\": _ctx.getSummaries,\n          \"show-summary\": \"\",\n          style: {\n            \"width\": \"100%\",\n            \"margin-top\": \"20px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount1\",\n            label: \"Costo 1 ($)\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount2\",\n            label: \"Costo 2 ($)\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount3\",\n            label: \"Costo 3 ($)\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\", \"summary-method\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              id: '12987122',\n              name: 'Tom',\n              amount1: '234',\n              amount2: '3.2',\n              amount3: 10\n            }, {\n              id: '12987123',\n              name: 'Tom',\n              amount1: '165',\n              amount2: '4.43',\n              amount3: 12\n            }, {\n              id: '12987124',\n              name: 'Tom',\n              amount1: '324',\n              amount2: '1.9',\n              amount3: 9\n            }, {\n              id: '12987125',\n              name: 'Tom',\n              amount1: '621',\n              amount2: '2.2',\n              amount3: 17\n            }, {\n              id: '12987126',\n              name: 'Tom',\n              amount1: '539',\n              amount2: '4.1',\n              amount3: 15\n            }]\n          };\n        },\n\n        methods: {\n          getSummaries(param) {\n            const {\n              columns,\n              data\n            } = param;\n            const sums = [];\n            columns.forEach((column, index) => {\n              if (index === 0) {\n                sums[index] = 'Costo total';\n                return;\n              }\n\n              const values = data.map(item => Number(item[column.property]));\n\n              if (!values.every(value => isNaN(value))) {\n                sums[index] = '$ ' + values.reduce((prev, curr) => {\n                  const value = Number(curr);\n\n                  if (!isNaN(value)) {\n                    return prev + curr;\n                  } else {\n                    return prev;\n                  }\n                }, 0);\n              } else {\n                sums[index] = 'N/A';\n              }\n            });\n            return sums;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo18\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(\"div\", null, [_createVNode(_component_el_table, {\n          data: _ctx.tableData,\n          \"span-method\": _ctx.arraySpanMethod,\n          border: \"\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount1\",\n            sortable: \"\",\n            label: \"Monto 1\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount2\",\n            sortable: \"\",\n            label: \"Monto 2\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount3\",\n            sortable: \"\",\n            label: \"Monto 3\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\", \"span-method\"]), _createVNode(_component_el_table, {\n          data: _ctx.tableData,\n          \"span-method\": _ctx.objectSpanMethod,\n          border: \"\",\n          style: {\n            \"width\": \"100%\",\n            \"margin-top\": \"20px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount1\",\n            label: \"Monto 1\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount2\",\n            label: \"Monto 2\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"amount3\",\n            label: \"Monto 3\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\", \"span-method\"])]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              id: '12987122',\n              name: 'Tom',\n              amount1: '234',\n              amount2: '3.2',\n              amount3: 10\n            }, {\n              id: '12987123',\n              name: 'Tom',\n              amount1: '165',\n              amount2: '4.43',\n              amount3: 12\n            }, {\n              id: '12987124',\n              name: 'Tom',\n              amount1: '324',\n              amount2: '1.9',\n              amount3: 9\n            }, {\n              id: '12987125',\n              name: 'Tom',\n              amount1: '621',\n              amount2: '2.2',\n              amount3: 17\n            }, {\n              id: '12987126',\n              name: 'Tom',\n              amount1: '539',\n              amount2: '4.1',\n              amount3: 15\n            }]\n          };\n        },\n\n        methods: {\n          arraySpanMethod({\n            row,\n            column,\n            rowIndex,\n            columnIndex\n          }) {\n            if (rowIndex % 2 === 0) {\n              if (columnIndex === 0) {\n                return [1, 2];\n              } else if (columnIndex === 1) {\n                return [0, 0];\n              }\n            }\n          },\n\n          objectSpanMethod({\n            row,\n            column,\n            rowIndex,\n            columnIndex\n          }) {\n            if (columnIndex === 0) {\n              if (rowIndex % 2 === 0) {\n                return {\n                  rowspan: 2,\n                  colspan: 1\n                };\n              } else {\n                return {\n                  rowspan: 0,\n                  colspan: 0\n                };\n              }\n            }\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo19\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n        const _component_el_table = _resolveComponent(\"el-table\");\n\n        return _openBlock(), _createBlock(_component_el_table, {\n          data: _ctx.tableData,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            type: \"index\",\n            index: _ctx.indexMethod\n          }, null, 8\n          /* PROPS */\n          , [\"index\"]), _createVNode(_component_el_table_column, {\n            prop: \"date\",\n            label: \"Fecha\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"Nombre\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"address\",\n            label: \"Dirección\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tableData: [{\n              date: '2016-05-03',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Home'\n            }, {\n              date: '2016-05-02',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Office'\n            }, {\n              date: '2016-05-04',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Home'\n            }, {\n              date: '2016-05-01',\n              name: 'Tom',\n              state: 'California',\n              city: 'Los Angeles',\n              address: 'No. 189, Grove St, Los Angeles',\n              zip: 'CA 90036',\n              tag: 'Office'\n            }]\n          };\n        },\n\n        methods: {\n          indexMethod(index) {\n            return index * 2;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/table.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/table.md?vue&type=template&id=1b036018":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/table.md?vue&type=template&id=1b036018 ***!
  \*************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"tablas\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tablas\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tablas\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Visualiza múltiples datos con un formato en particular. Podrá ordenar, filtrar y comparar datos en una tabla.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tabla-basica\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabla-basica\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabla básica\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"La tabla básica es solo para mostrar datos.\", -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Después de haber establecido el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"data\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" con un arreglo de objetos, puede usar la propiedad \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"prop\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" (el correspondiente a la clave de un objeto dentro del arreglo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"data\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\") en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para insertar datos a las columnas de la tabla, y establecer el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para definir el nombre de la columna. También puede usar el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"width\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para establecer el ancho de las columnas.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"  <template>\\n    <el-table\\n      :data=\\\"tableData\\\"\\n      style=\\\"width: 100%\\\">\\n      <el-table-column\\n        prop=\\\"date\\\"\\n        label=\\\"Fecha\\\"\\n        width=\\\"180\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"Nombre\\\"\\n        width=\\\"180\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"address\\\"\\n        label=\\\"Dirección\\\">\\n      </el-table-column>\\n    </el-table>\\n  </template>\\n\\n  <script>\\n    export default {\\n      data() {\\n        return {\\n          tableData: [{\\n            date: '2016-05-03',\\n            name: 'Tom',\\n            address: 'No. 189, Grove St, Los Angeles'\\n          }, {\\n            date: '2016-05-02',\\n            name: 'Tom',\\n            address: 'No. 189, Grove St, Los Angeles'\\n          }, {\\n            date: '2016-05-04',\\n            name: 'Tom',\\n            address: 'No. 189, Grove St, Los Angeles'\\n          }, {\\n            date: '2016-05-01',\\n            name: 'Tom',\\n            address: 'No. 189, Grove St, Los Angeles'\\n          }]\\n        }\\n      }\\n    }\\n  </script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tabla-con-franjas\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabla-con-franjas\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabla con franjas\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"La tabla con franjas hace más fácil distinguir filas diferentes.\", -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"El atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"stripe\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" también acepta un \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"Boolean\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Si se encuentra \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", la tabla será con franjas.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    stripe\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tabla-con-bordes\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabla-con-bordes\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabla con bordes\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Por defecto, la tabla no tiene bordes verticales. Si lo necesita, puede establecer el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"border\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    border\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tabla-con-estados\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabla-con-estados\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabla con estados\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Puede destacar el contenido de la tabla para distinguir entre \\\"success, information, warning, danger\\\" y otros estados.\", -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilice \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"row-class-name\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para agregar clases personalizadas a una fila en específico. Y entonces, podrá darle diseño con estas clases.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    :row-class-name=\\\"tableRowClassName\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<style>\\n  .el-table .warning-row {\\n    background: oldlace;\\n  }\\n\\n  .el-table .success-row {\\n    background: #f0f9eb;\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    methods: {\\n      tableRowClassName({row, rowIndex}) {\\n        if (rowIndex === 1) {\\n          return 'warning-row';\\n        } else if (rowIndex === 3) {\\n          return 'success-row';\\n        }\\n        return '';\\n      }\\n    },\\n    data() {\\n      return {\\n        tableData:  [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tabla-con-cabecera-fija\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabla-con-cabecera-fija\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabla con cabecera fija\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Cuando esta tiene demasiadas filas, puede utilizar una cabecera fija.\", -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Al configurar el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"height\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", puede fijar la cabecera de la tabla sin agregar otro código.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    height=\\\"250\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-08',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-06',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-07',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }],\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tabla-con-columnas-fijas\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabla-con-columnas-fijas\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabla con columnas fijas\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Cuando se tienen demasiadas columnas, puede fijar alguna de estas.\", -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"El atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"fixed\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" es utilizado en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", este acepta un \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"Boolean\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Si es \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", la columna será fijada a la izquierda. También acepta dos tipos: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"left\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"right\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", ambos indican donde debe ser fijada la columna.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      fixed\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"150\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"state\\\"\\n      label=\\\"Estado\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"city\\\"\\n      label=\\\"Ciudad\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\"\\n      width=\\\"300\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"zip\\\"\\n      label=\\\"Código postal\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      fixed=\\\"right\\\"\\n      label=\\\"Operaciones\\\"\\n      width=\\\"120\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <el-button @click=\\\"handleClick\\\" type=\\\"text\\\" size=\\\"small\\\">Detalle</el-button>\\n        <el-button type=\\\"text\\\" size=\\\"small\\\">Editar</el-button>\\n      </template>\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    methods: {\\n      handleClick() {\\n        console.log('click');\\n      }\\n    },\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Home'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Office'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Home'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Office'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tabla-con-columnas-y-cabecera-fija\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabla-con-columnas-y-cabecera-fija\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabla con columnas y cabecera fija.\")\n], -1 /* HOISTED */)\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Cuando tienes grandes cantidades de datos para colocar en una tabla, puede fijar la cabecera y columnas al mismo tiempo.\", -1 /* HOISTED */)\nconst _hoisted_29 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Fije las columnas y cabecera al mismo tiempo combinando los dos ejemplos anteriores.\")\n], -1 /* HOISTED */)\nconst _hoisted_30 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    height=\\\"250\\\">\\n    <el-table-column\\n      fixed\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"150\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"state\\\"\\n      label=\\\"Estado\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"city\\\"\\n      label=\\\"Ciudad\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\"\\n      width=\\\"300\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"zip\\\"\\n      label=\\\"Código postal\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-08',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-06',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-07',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_31 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"altura-fluido-de-tabla-con-cabecera-fija-y-columnas\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#altura-fluido-de-tabla-con-cabecera-fija-y-columnas\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Altura fluido de tabla con cabecera fija (y columnas)\")\n], -1 /* HOISTED */)\nconst _hoisted_32 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Cuando los datos se modifican dinámicamente, es posible que necesite que la tabla tenga una altura máxima en lugar de una altura fija, y además, que se muestre la barra de desplazamiento si es necesario.\", -1 /* HOISTED */)\nconst _hoisted_33 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Al configurar el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"max-height\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", tu puedes fijar la cabecera de la tabla. La barra de desplazamiento únicamente se mostrará si la altura sobrepasa el valor de la altura máxima.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_34 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    max-height=\\\"250\\\">\\n    <el-table-column\\n      fixed\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"150\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"state\\\"\\n      label=\\\"Estado\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"city\\\"\\n      label=\\\"Ciudad\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\"\\n      width=\\\"300\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"zip\\\"\\n      label=\\\"Código postal\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      fixed=\\\"right\\\"\\n      label=\\\"Operaciones\\\"\\n      width=\\\"120\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <el-button\\n          @click.native.prevent=\\\"deleteRow(scope.$index, tableData)\\\"\\n          type=\\\"text\\\"\\n          size=\\\"small\\\">\\n          Eliminar\\n        </el-button>\\n      </template>\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    methods: {\\n      deleteRow(index, rows) {\\n        rows.splice(index, 1);\\n      }\\n    },\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-08',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-06',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-07',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_35 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"agrupando-cabeceras-de-la-tabla\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#agrupando-cabeceras-de-la-tabla\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Agrupando cabeceras de la tabla\")\n], -1 /* HOISTED */)\nconst _hoisted_36 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Cuando la estructura de datos es compleja, tu puedes hacer uso de cabeceras agrupadas para mostrar datos por jerarquía.\", -1 /* HOISTED */)\nconst _hoisted_37 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Solo necesitas colocar \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" dentro de un \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", de esta forma lograrás agruparlas.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_38 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"150\\\">\\n    </el-table-column>\\n    <el-table-column label=\\\"Información de entrega\\\">\\n      <el-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"Nombre\\\"\\n        width=\\\"120\\\">\\n      </el-table-column>\\n      <el-table-column label=\\\"Información de dirección\\\">\\n        <el-table-column\\n          prop=\\\"state\\\"\\n          label=\\\"Estado\\\"\\n          width=\\\"120\\\">\\n        </el-table-column>\\n        <el-table-column\\n          prop=\\\"city\\\"\\n          label=\\\"Ciudad\\\"\\n          width=\\\"120\\\">\\n        </el-table-column>\\n        <el-table-column\\n          prop=\\\"address\\\"\\n          label=\\\"Dirección\\\"\\n          width=\\\"300\\\">\\n        </el-table-column>\\n        <el-table-column\\n          prop=\\\"zip\\\"\\n          label=\\\"Código postal\\\"\\n          width=\\\"120\\\">\\n        </el-table-column>\\n      </el-table-column>\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-08',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-06',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-07',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_39 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"seleccion-unica\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#seleccion-unica\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Selección única\")\n], -1 /* HOISTED */)\nconst _hoisted_40 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"La selección de una fila esta soportada.\", -1 /* HOISTED */)\nconst _hoisted_41 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"La tabla permite la selección de una sola fila. Puede activarlo agregando el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"highlight-current-row\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Un evento llamado \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"current-change\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" será disparado cuando la selección de la fila cambie, sus parámetros son la fila antes y después de que ocurre el cambio: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"currentRow\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"oldCurrentRow\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Si necesita mostrar el índice de la fila, puede agregar un nuevo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" con el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" asignado al \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"index\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y podrá ver el índice iniciando desde 1.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_42 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    ref=\\\"singleTable\\\"\\n    :data=\\\"tableData\\\"\\n    highlight-current-row\\n    @current-change=\\\"handleCurrentChange\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      type=\\\"index\\\"\\n      width=\\\"50\\\">\\n    </el-table-column>\\n    <el-table-column\\n      property=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      property=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      property=\\\"address\\\"\\n      label=\\\"Dirección\\\">\\n    </el-table-column>\\n  </el-table>\\n  <div style=\\\"margin-top: 20px\\\">\\n    <el-button @click=\\\"setCurrent(tableData[1])\\\">Seleccionar segunda fila</el-button>\\n    <el-button @click=\\\"setCurrent()\\\">Limpiar selección</el-button>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }],\\n        currentRow: null\\n      }\\n    },\\n\\n    methods: {\\n      setCurrent(row) {\\n        this.$refs.singleTable.setCurrentRow(row);\\n      },\\n      handleCurrentChange(val) {\\n        this.currentRow = val;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_43 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"seleccion-multiple\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#seleccion-multiple\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Selección multiple\")\n], -1 /* HOISTED */)\nconst _hoisted_44 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"También puede seleccionar múltiples filas.\", -1 /* HOISTED */)\nconst _hoisted_45 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Activar la selección múltiple es sencillo: Solo debe agregar a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" con su \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" establecido en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"selection\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Además de la selección múltiple, este ejemplo también utiliza \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"show-overflow-tooltip\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\": por defecto, si el contenido es demasiado largo, este permite córtalo dentro de múltiples líneas. Si lo que busca es mantener una línea, utilice el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"show-overflow-tooltip\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", que acepta un valor \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"Boolean\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Cuando este está establecido en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", el contenido extra puede mostrar un \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"em\", null, \"tooltip\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" cuando se hace \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"em\", null, \"hover\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" sobre la celda.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_46 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    ref=\\\"multipleTable\\\"\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\"\\n    @selection-change=\\\"handleSelectionChange\\\">\\n    <el-table-column\\n      type=\\\"selection\\\"\\n      width=\\\"55\\\">\\n    </el-table-column>\\n    <el-table-column\\n      label=\\\"Fecha\\\"\\n      width=\\\"120\\\">\\n      <template slot-scope=\\\"scope\\\">{{ scope.row.date }}</template>\\n    </el-table-column>\\n    <el-table-column\\n      property=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"120\\\">\\n    </el-table-column>\\n    <el-table-column\\n      property=\\\"address\\\"\\n      label=\\\"Dirección\\\"\\n      show-overflow-tooltip>\\n    </el-table-column>\\n  </el-table>\\n  <div style=\\\"margin-top: 20px\\\">\\n    <el-button @click=\\\"toggleSelection([tableData[1], tableData[2]])\\\">Cambia el estado de selección de la segunda y tercera fila.</el-button>\\n    <el-button @click=\\\"toggleSelection()\\\">Limpiar selección</el-button>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-08',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-06',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-07',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }],\\n        multipleSelection: []\\n      }\\n    },\\n\\n    methods: {\\n      toggleSelection(rows) {\\n        if (rows) {\\n          rows.forEach(row => {\\n            this.$refs.multipleTable.toggleRowSelection(row);\\n          });\\n        } else {\\n          this.$refs.multipleTable.clearSelection();\\n        }\\n      },\\n      handleSelectionChange(val) {\\n        this.multipleSelection = val;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_47 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"ordenamiento\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#ordenamiento\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Ordenamiento\")\n], -1 /* HOISTED */)\nconst _hoisted_48 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Ordena los datos para encontrar o comparar información rápidamente.\", -1 /* HOISTED */)\nconst _hoisted_49 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Establezca el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"sortable\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para ordenar los datos de una columna. Este acepta un \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"Boolean\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" con un valor por defecto \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"false\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Establezca el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"default-sort\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para determinar la columna y orden por defecto. Para aplicar sus propias reglas de ordenamiento, utilice \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"sort-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" o \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"sort-by\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Si lo que necesita es ordenar de forma remota desde backend, establezca \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"sortable\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"custom\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", y escuche el evento \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"sort-change\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de la tabla. Al dispararse el evento, tendrá acceso a la columna ordenada y orden para que pueda obtener los datos de la tabla ordenada desde su API. En este ejemplo utilizamos otro atributo llamado \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"formatter\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para darle un formato al valor de ciertas columnas. Este acepta una función que tiene dos parámetros: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"row\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Puede disparar este de acuerdo a sus propias necesidades.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_50 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    :default-sort = \\\"{prop: 'date', order: 'descending'}\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      sortable\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\"\\n      :formatter=\\\"formatter\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }]\\n      }\\n    },\\n    methods: {\\n      formatter(row, column) {\\n        return row.address;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_51 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"filtros\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#filtros\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Filtros\")\n], -1 /* HOISTED */)\nconst _hoisted_52 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Filtra la tabla para encontrar la información que necesita.\", -1 /* HOISTED */)\nconst _hoisted_53 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Establezca el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filters\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filter-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" haciendo esta columna filtrable. \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filters\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" es un arreglo, y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filter-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" es una función que decide que filas se muestra. Esta tiene tres parámetros: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"value\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"row\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_54 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-button @click=\\\"resetDateFilter\\\">清除日期过滤器</el-button>\\n  <el-button @click=\\\"clearFilter\\\">清除所有过滤器</el-button>\\n  <el-table\\n    ref=\\\"filterTable\\\"\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      sortable\\n      width=\\\"180\\\"\\n      column-key=\\\"date\\\"\\n      :filters=\\\"[{text: '2016-05-01', value: '2016-05-01'}, {text: '2016-05-02', value: '2016-05-02'}, {text: '2016-05-03', value: '2016-05-03'}, {text: '2016-05-04', value: '2016-05-04'}]\\\"\\n      :filter-method=\\\"filterHandler\\\"\\n    >\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\"\\n      :formatter=\\\"formatter\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"tag\\\"\\n      label=\\\"Etiqueta\\\"\\n      width=\\\"100\\\"\\n      :filters=\\\"[{ text: 'Home', value: 'Home' }, { text: 'Office', value: 'Office' }]\\\"\\n      :filter-method=\\\"filterTag\\\"\\n      filter-placement=\\\"bottom-end\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <el-tag\\n          :type=\\\"scope.row.tag === 'Home' ? 'primary' : 'success'\\\"\\n          disable-transitions>{{scope.row.tag}}</el-tag>\\n      </template>\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          tag: 'Home'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          tag: 'Office'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          tag: 'Home'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          tag: 'Office'\\n        }]\\n      }\\n    },\\n    methods: {\\n      resetDateFilter() {\\n        this.$refs.filterTable.clearFilter('date');\\n      },\\n      clearFilter() {\\n        this.$refs.filterTable.clearFilter();\\n      },\\n      formatter(row, column) {\\n        return row.address;\\n      },\\n      filterTag(value, row) {\\n        return row.tag === value;\\n      },\\n      filterHandler(value, row, column) {\\n        const property = column['property'];\\n        return row[property] === value;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_55 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"plantilla-de-columna-personalizada\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#plantilla-de-columna-personalizada\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Plantilla de columna personalizada\")\n], -1 /* HOISTED */)\nconst _hoisted_56 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Personalice la columna de la tabla para que pueda integrarse con otros componentes.\", -1 /* HOISTED */)\nconst _hoisted_57 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Tiene acceso a la siguiente información: row, column, $index, store (gestor de estados de la tabla) por \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", { href: \"https://vuejs.org/v2/guide/components.html#Scoped-Slots\" }, \"Scoped slots\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_58 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      label=\\\"Fecha\\\"\\n      width=\\\"180\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <i class=\\\"el-icon-time\\\"></i>\\n        <span style=\\\"margin-left: 10px\\\">{{ scope.row.date }}</span>\\n      </template>\\n    </el-table-column>\\n    <el-table-column\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <el-popover trigger=\\\"hover\\\" placement=\\\"top\\\">\\n          <p>Name: {{ scope.row.name }}</p>\\n          <p>Addr: {{ scope.row.address }}</p>\\n          <div slot=\\\"reference\\\" class=\\\"name-wrapper\\\">\\n            <el-tag size=\\\"medium\\\">{{ scope.row.name }}</el-tag>\\n          </div>\\n        </el-popover>\\n      </template>\\n    </el-table-column>\\n    <el-table-column\\n      label=\\\"Operaciones\\\">\\n      <template slot-scope=\\\"scope\\\">\\n        <el-button\\n          size=\\\"mini\\\"\\n          @click=\\\"handleEdit(scope.$index, scope.row)\\\">Editar</el-button>\\n        <el-button\\n          size=\\\"mini\\\"\\n          type=\\\"danger\\\"\\n          @click=\\\"handleDelete(scope.$index, scope.row)\\\">Eliminar</el-button>\\n      </template>\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles'\\n        }]\\n      }\\n    },\\n    methods: {\\n      handleEdit(index, row) {\\n        console.log(index, row);\\n      },\\n      handleDelete(index, row) {\\n        console.log(index, row);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_59 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"table-con-cabecera-personalizada\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#table-con-cabecera-personalizada\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Table con cabecera personalizada\")\n], -1 /* HOISTED */)\nconst _hoisted_60 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Se puede personalizar el encabezado de la tabla para que se pueda adaptar aún más.\", -1 /* HOISTED */)\nconst _hoisted_61 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Puede personalizar el aspecto del encabezado con header \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", { href: \"https://vuejs.org/v2/guide/components-slots.html#Scoped-Slots\" }, \"scoped slots\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_62 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      label=\\\"Date\\\"\\n      prop=\\\"date\\\">\\n    </el-table-column>\\n    <el-table-column\\n      label=\\\"Name\\\"\\n      prop=\\\"name\\\">\\n    </el-table-column>\\n    <el-table-column\\n      align=\\\"right\\\">\\n      <template slot=\\\"header\\\" slot-scope=\\\"scope\\\">\\n        <el-input\\n          v-model=\\\"search\\\"\\n          size=\\\"mini\\\"\\n          placeholder=\\\"Type to search\\\"/>\\n      </template>\\n      <template slot-scope=\\\"scope\\\">\\n        <el-button\\n          size=\\\"mini\\\"\\n          @click=\\\"handleEdit(scope.$index, scope.row)\\\">Edit</el-button>\\n        <el-button\\n          size=\\\"mini\\\"\\n          type=\\\"danger\\\"\\n          @click=\\\"handleDelete(scope.$index, scope.row)\\\">Delete</el-button>\\n      </template>\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          address: 'No. 189, Grove St, Los Angeles',\\n        }, {\\n          date: '2016-05-04',\\n          name: 'John',\\n          address: 'No. 189, Grove St, Los Angeles',\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Morgan',\\n          address: 'No. 189, Grove St, Los Angeles',\\n        }, {\\n          date: '2016-05-03',\\n          name: 'Jessy',\\n          address: 'No. 189, Grove St, Los Angeles',\\n        }],\\n        search: ''\\n      }\\n    },\\n    methods: {\\n      handleEdit(index, row) {\\n        console.log(index, row);\\n      },\\n      handleDelete(index, row) {\\n        console.log(index, row);\\n      }\\n    },\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_63 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"fila-expandible\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#fila-expandible\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Fila expandible\")\n], -1 /* HOISTED */)\nconst _hoisted_64 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Cuando el contenido de la fila es demasiado largo y busca no mostrar la barra de desplazamiento horizontal, puede utilizar la característica de fila expandible.\", -1 /* HOISTED */)\nconst _hoisted_65 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Puede activar la fila expandible estableciendo la propiedad \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"expand\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y Scoped Slots. La plantilla para \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"el-table-column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" se representará como el contenido de la fila expandible, y puede acceder a algunos atributos cuando está usando \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"Scoped Slots\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en plantillas de columna personalizadas.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_66 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column type=\\\"expand\\\">\\n      <template slot-scope=\\\"props\\\">\\n        <p>Estado: {{ props.row.state }}</p>\\n        <p>Ciudad: {{ props.row.city }}</p>\\n        <p>Dirección: {{ props.row.address }}</p>\\n        <p>Código postal: {{ props.row.zip }}</p>\\n      </template>\\n    </el-table-column>\\n    <el-table-column\\n      label=\\\"Fecha\\\"\\n      prop=\\\"date\\\">\\n    </el-table-column>\\n    <el-table-column\\n      label=\\\"Nombre\\\"\\n      prop=\\\"name\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-08',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-06',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }, {\\n          date: '2016-05-07',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036'\\n        }]\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_67 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"datos-tree-y-modo-lazy\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#datos-tree-y-modo-lazy\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Datos tree y modo lazy\")\n], -1 /* HOISTED */)\nconst _hoisted_68 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Puede visualizar datos de estructura de árbol. Cuando la fila contiene el campo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"children\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", se trata como datos anidados. Para renderizar datos anidados, la \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"row-key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" es requerida。Ademas, los datos de las filas secundarias pueden ser cargados asincrónicamente. Poner la propiedad \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"lazy\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de Table a true y la función \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"load\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Especifique el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"hasChildren\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en la fila para determinar qué fila contiene descendencia. Tanto \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"children\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" como \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"hasChildren\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pueden configurarse a través de \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"tree-props\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_69 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n<div>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%;margin-bottom: 20px;\\\"\\n    row-key=\\\"id\\\"\\n    border\\n    default-expand-all>\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"日期\\\"\\n      sortable\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"name\\\"\\n      sortable\\n      width=\\\"180\\\">\\n    </el-table-column>\\n  </el-table>\\n\\n  <el-table\\n    :data=\\\"tableData1\\\"\\n    style=\\\"width: 100%\\\"\\n    row-key=\\\"id\\\"\\n    border\\n    lazy\\n    :load=\\\"load\\\"\\n    :tree-props=\\\"{children: 'children', hasChildren: 'hasChildren'}\\\">\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"date\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"name\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n  </el-table>\\n</div>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          id: 1,\\n          date: '2016-05-02',\\n          name: 'wangxiaohu'\\n        }, {\\n          id: 2,\\n          date: '2016-05-04',\\n          name: 'wangxiaohu'\\n        }, {\\n          id: 3,\\n          date: '2016-05-01',\\n          name: 'wangxiaohu',\\n          children: [{\\n              id: 31,\\n              date: '2016-05-01',\\n              name: 'wangxiaohu'\\n            }, {\\n              id: 32,\\n              date: '2016-05-01',\\n              name: 'wangxiaohu'\\n          }]\\n        }, {\\n          id: 4,\\n          date: '2016-05-03',\\n          name: 'wangxiaohu'\\n        }],\\n        tableData1: [{\\n          id: 1,\\n          date: '2016-05-02',\\n          name: 'wangxiaohu'\\n        }, {\\n          id: 2,\\n          date: '2016-05-04',\\n          name: 'wangxiaohu'\\n        }, {\\n          id: 3,\\n          date: '2016-05-01',\\n          name: 'wangxiaohu',\\n          hasChildren: true\\n        }, {\\n          id: 4,\\n          date: '2016-05-03',\\n          name: 'wangxiaohu'\\n        }]\\n      }\\n    },\\n    methods: {\\n      load(tree, treeNode, resolve) {\\n        setTimeout(() => {\\n          resolve([\\n            {\\n              id: 31,\\n              date: '2016-05-01',\\n              name: 'wangxiaohu'\\n            }, {\\n              id: 32,\\n              date: '2016-05-01',\\n              name: 'wangxiaohu'\\n            }\\n          ])\\n        }, 1000)\\n      }\\n    },\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_70 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"fila-de-resumen\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#fila-de-resumen\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Fila de resumen\")\n], -1 /* HOISTED */)\nconst _hoisted_71 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Para una tabla de números, puede agregar una fila extra en el pie de página de la tabla que muestra la suma de cada columna.\", -1 /* HOISTED */)\nconst _hoisted_72 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Puede agregar la fila de resumen configurando \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"show-summary\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Por defecto, para la fila de resumen, la primera columna no resume nada, pero siempre muestra la suma (puede configurar el texto mostrado usando \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"sum-text\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"), mientras que otras columnas suman todos los números en esa columna y los muestran. Por supuesto, puede definir su propio comportamiento de suma. Para hacerlo, utiliza un método \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"summary-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", que devuelve un array, y cada elemento que fue retornado desde el arreglo puede ser mostrado en las columnas del resumen de fila. La segunda tabla de este ejemplo es una demostración detallada.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_73 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    border\\n    show-summary\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      prop=\\\"id\\\"\\n      label=\\\"ID\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"amount1\\\"\\n      sortable\\n      label=\\\"Monto 1\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"amount2\\\"\\n      sortable\\n      label=\\\"Monto 2\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"amount3\\\"\\n      sortable\\n      label=\\\"Monto 3\\\">\\n    </el-table-column>\\n  </el-table>\\n\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    border\\n    height=\\\"200\\\"\\n    :summary-method=\\\"getSummaries\\\"\\n    show-summary\\n    style=\\\"width: 100%; margin-top: 20px\\\">\\n    <el-table-column\\n      prop=\\\"id\\\"\\n      label=\\\"ID\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"amount1\\\"\\n      label=\\\"Costo 1 ($)\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"amount2\\\"\\n      label=\\\"Costo 2 ($)\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"amount3\\\"\\n      label=\\\"Costo 3 ($)\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          id: '12987122',\\n          name: 'Tom',\\n          amount1: '234',\\n          amount2: '3.2',\\n          amount3: 10\\n        }, {\\n          id: '12987123',\\n          name: 'Tom',\\n          amount1: '165',\\n          amount2: '4.43',\\n          amount3: 12\\n        }, {\\n          id: '12987124',\\n          name: 'Tom',\\n          amount1: '324',\\n          amount2: '1.9',\\n          amount3: 9\\n        }, {\\n          id: '12987125',\\n          name: 'Tom',\\n          amount1: '621',\\n          amount2: '2.2',\\n          amount3: 17\\n        }, {\\n          id: '12987126',\\n          name: 'Tom',\\n          amount1: '539',\\n          amount2: '4.1',\\n          amount3: 15\\n        }]\\n      };\\n    },\\n    methods: {\\n      getSummaries(param) {\\n        const { columns, data } = param;\\n        const sums = [];\\n        columns.forEach((column, index) => {\\n          if (index === 0) {\\n            sums[index] = 'Costo total';\\n            return;\\n          }\\n          const values = data.map(item => Number(item[column.property]));\\n          if (!values.every(value => isNaN(value))) {\\n            sums[index] = '$ ' + values.reduce((prev, curr) => {\\n              const value = Number(curr);\\n              if (!isNaN(value)) {\\n                return prev + curr;\\n              } else {\\n                return prev;\\n              }\\n            }, 0);\\n          } else {\\n            sums[index] = 'N/A';\\n          }\\n        });\\n\\n        return sums;\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_74 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"fusion-de-filas-y-columnas\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#fusion-de-filas-y-columnas\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Fusión de filas y columnas\")\n], -1 /* HOISTED */)\nconst _hoisted_75 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Configurar \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"em\", null, \"rowspan\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"em\", null, \"colspan\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" le permite fusionar celdas.\")\n], -1 /* HOISTED */)\nconst _hoisted_76 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilice el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"span-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para configurar rowspan y colspan. Este acepta un método, y pasa un objeto a ese método incluyendo la fila actual \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"row\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", columna actual \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"column\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", índice de fila actual \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"rowIndex\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y índice de columna actual \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"columnIndex\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". El método debe devolver un arreglo de dos números, el primer número siendo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"rowspan\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y el segundo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"colspan\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". También puede devolver un objeto con las propiedades \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"rowspan\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"colspan\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_77 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <div>\\n    <el-table\\n      :data=\\\"tableData\\\"\\n      :span-method=\\\"arraySpanMethod\\\"\\n      border\\n      style=\\\"width: 100%\\\">\\n      <el-table-column\\n        prop=\\\"id\\\"\\n        label=\\\"ID\\\"\\n        width=\\\"180\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"Nombre\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"amount1\\\"\\n        sortable\\n        label=\\\"Monto 1\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"amount2\\\"\\n        sortable\\n        label=\\\"Monto 2\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"amount3\\\"\\n        sortable\\n        label=\\\"Monto 3\\\">\\n      </el-table-column>\\n    </el-table>\\n\\n    <el-table\\n      :data=\\\"tableData\\\"\\n      :span-method=\\\"objectSpanMethod\\\"\\n      border\\n      style=\\\"width: 100%; margin-top: 20px\\\">\\n      <el-table-column\\n        prop=\\\"id\\\"\\n        label=\\\"ID\\\"\\n        width=\\\"180\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"name\\\"\\n        label=\\\"Nombre\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"amount1\\\"\\n        label=\\\"Monto 1\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"amount2\\\"\\n        label=\\\"Monto 2\\\">\\n      </el-table-column>\\n      <el-table-column\\n        prop=\\\"amount3\\\"\\n        label=\\\"Monto 3\\\">\\n      </el-table-column>\\n    </el-table>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          id: '12987122',\\n          name: 'Tom',\\n          amount1: '234',\\n          amount2: '3.2',\\n          amount3: 10\\n        }, {\\n          id: '12987123',\\n          name: 'Tom',\\n          amount1: '165',\\n          amount2: '4.43',\\n          amount3: 12\\n        }, {\\n          id: '12987124',\\n          name: 'Tom',\\n          amount1: '324',\\n          amount2: '1.9',\\n          amount3: 9\\n        }, {\\n          id: '12987125',\\n          name: 'Tom',\\n          amount1: '621',\\n          amount2: '2.2',\\n          amount3: 17\\n        }, {\\n          id: '12987126',\\n          name: 'Tom',\\n          amount1: '539',\\n          amount2: '4.1',\\n          amount3: 15\\n        }]\\n      };\\n    },\\n    methods: {\\n      arraySpanMethod({ row, column, rowIndex, columnIndex }) {\\n        if (rowIndex % 2 === 0) {\\n          if (columnIndex === 0) {\\n            return [1, 2];\\n          } else if (columnIndex === 1) {\\n            return [0, 0];\\n          }\\n        }\\n      },\\n\\n      objectSpanMethod({ row, column, rowIndex, columnIndex }) {\\n        if (columnIndex === 0) {\\n          if (rowIndex % 2 === 0) {\\n            return {\\n              rowspan: 2,\\n              colspan: 1\\n            };\\n          } else {\\n            return {\\n              rowspan: 0,\\n              colspan: 0\\n            };\\n          }\\n        }\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_78 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"indice-personalizado\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#indice-personalizado\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Índice personalizado\")\n], -1 /* HOISTED */)\nconst _hoisted_79 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Puede personalizar el índice de la fila con la propiedad \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type=index\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de las columnas.\")\n], -1 /* HOISTED */)\nconst _hoisted_80 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Para personalizar el índice de la fila, utilice el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"index\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"<el-table-column>\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" con \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type=index\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Si este es asignado a un número, todos los índices tendrán un desplazamiento de ese número. Este también acepta un método con cada índice (iniciando desde 0) como un parámetro, y este devuelve un valor que puede ser mostrado como índice.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_81 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-table\\n    :data=\\\"tableData\\\"\\n    style=\\\"width: 100%\\\">\\n    <el-table-column\\n      type=\\\"index\\\"\\n      :index=\\\"indexMethod\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"date\\\"\\n      label=\\\"Fecha\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"name\\\"\\n      label=\\\"Nombre\\\"\\n      width=\\\"180\\\">\\n    </el-table-column>\\n    <el-table-column\\n      prop=\\\"address\\\"\\n      label=\\\"Dirección\\\">\\n    </el-table-column>\\n  </el-table>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tableData: [{\\n          date: '2016-05-03',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Home'\\n        }, {\\n          date: '2016-05-02',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Office'\\n        }, {\\n          date: '2016-05-04',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Home'\\n        }, {\\n          date: '2016-05-01',\\n          name: 'Tom',\\n          state: 'California',\\n          city: 'Los Angeles',\\n          address: 'No. 189, Grove St, Los Angeles',\\n          zip: 'CA 90036',\\n          tag: 'Office'\\n        }],\\n      }\\n    },\\n    methods: {\\n      indexMethod(index) {\\n        return index * 2;\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_82 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"atributos-de-la-tabla\\\"><a class=\\\"header-anchor\\\" href=\\\"#atributos-de-la-tabla\\\">¶</a> Atributos de la tabla</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>data</td><td>Datos de la tabla</td><td>array</td><td>—</td><td>—</td></tr><tr><td>height</td><td>Altura de la tabla. Por defecto esta tiene un tamaño <code>auto</code>. Si este valor es un número, la altura es medido en pixeles; si este valor es una cadena, la altura es afectada por estilos externos.</td><td>string/number</td><td>—</td><td>—</td></tr><tr><td>max-height</td><td>Table&#39;s max-height. The legal value is a number or the height in px.</td><td>string/number</td><td>—</td><td>—</td></tr><tr><td>stripe</td><td>especifica si la tabla será en franjas</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>border</td><td>especifica si la tabla tiene bordes verticales</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>tamaño de la tabla</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>fit</td><td>especifica si el ancho de la columna se adapta automáticamente a su contenedor</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>show-header</td><td>especifica si la cabecera de la tabla es visible</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>highlight-current-row</td><td>especifica si la fila actual es resaltado</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>current-row-key</td><td>clave de la fila actual, un ajuste de propiedad única</td><td>string,number</td><td>—</td><td>—</td></tr><tr><td>row-class-name</td><td>función que devuelve nombres de clases personalizadas para una fila, o una cadena asignando nombres de clases para cada fila</td><td>Function({row, rowIndex})/String</td><td>—</td><td>—</td></tr><tr><td>row-style</td><td>función que devuelve el estilo personalizado para una fila, o un objeto asignando estilos personalizado para cada fila</td><td>Function({row, rowIndex})/Object</td><td>—</td><td>—</td></tr><tr><td>cell-class-name</td><td>función que devuelve nombres de clases personalizadas para una celda, o una cadena asignando nombres de clases para cada celda</td><td>Function({row, column, rowIndex, columnIndex})/String</td><td>—</td><td>—</td></tr><tr><td>cell-style</td><td>función que devuelve estilos personalizados para una celda, o un objeto asignado a estilos personalizados para cada celda</td><td>Function({row, column, rowIndex, columnIndex})/Object</td><td>—</td><td>—</td></tr><tr><td>header-row-class-name</td><td>función que devuelve nombre de clases personalizadas para una fila en la cabecera de la tabla, o una cadena asignando nombres de clases para cada fila en la cabecera de la tabla</td><td>Function({row, rowIndex})/String</td><td>—</td><td>—</td></tr><tr><td>header-row-style</td><td>función que devuelve estilos personalizados para una fila en la cabecera de la tabla, o un objeto asignando estilos personalizados para cada fila en la cabecera de la tabla</td><td>Function({row, rowIndex})/Object</td><td>—</td><td>—</td></tr><tr><td>header-cell-class-name</td><td>función que devuelve nombre de clases personalizadas para una celda en la cabecera de la tabla, o una cadena asignando nombres de clases para cada celda en la cabecera de la tabla</td><td>Function({row, column, rowIndex, columnIndex})/String</td><td>—</td><td>—</td></tr><tr><td>header-cell-style</td><td>función que devuelve estilos personalizados para una celda en la cabecera de la tabla, o un objeto asignando estilos personalizados para cada celda en la cabecera de la tabla</td><td>Function({row, column, rowIndex, columnIndex})/Object</td><td>—</td><td>—</td></tr><tr><td>row-key</td><td>key de los datos de las filas, utilizada para optimizar el renderizado. Requerido si <code>reserve-selection</code> está activada o muestra los datos del árbol. Cuando su tipo es String, se admite el acceso multinivel, por ejemplo, <code>user.info.id</code>, pero <code>user.info[0].id</code> no se admite, en cuyo caso se debe utilizar la función.</td><td>Function(row)/String</td><td>—</td><td>—</td></tr><tr><td>empty-text</td><td>Texto mostrado cuando no existen datos. Puede personalizar esta área con <code>slot=&quot;empty&quot;</code></td><td>String</td><td>—</td><td>No Data</td></tr><tr><td>default-expand-all</td><td>especifica si todas las filas se expanden por defecto, solo funciona cuando la tabla tiene una columna <code>type=&quot;expand&quot;</code></td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>expand-row-keys</td><td>establece las filas expandidas a través de esta propiedad, este valor es la clave de filas expandidas, debería establecer <code>row-key</code> antes de usar esta propiedad</td><td>Array</td><td>—</td><td></td></tr><tr><td>default-sort</td><td>establece la columna y orden por defecto. La propiedad <code>prop</code> es utilizada para establecer la columna de ordenamiento por defecto, la propiedad <code>order</code> es utilizada para definir el tipo de orden por defecto</td><td>Object</td><td><code>order</code>: ascending, descending</td><td>if <code>prop</code> is set, and <code>order</code> is not set, then <code>order</code> is default to ascending</td></tr><tr><td>tooltip-effect</td><td>propiedad <code>effect</code> para efectos en tooltip</td><td>String</td><td>dark/light</td><td></td></tr><tr><td>show-summary</td><td>especifica si debe mostrar la fila de resumen</td><td>Boolean</td><td>—</td><td>false</td></tr><tr><td>sum-text</td><td>texto a mostrar para la primer columna de la fila de resumen</td><td>String</td><td>—</td><td>Sum</td></tr><tr><td>summary-method</td><td>método personalizado para resumen</td><td>Function({ columns, data })</td><td>—</td><td>—</td></tr><tr><td>span-method</td><td>método que devuelve <em>rowspan</em> y <em>colspan</em></td><td>Function({ row, column, rowIndex, columnIndex })</td><td>—</td><td>—</td></tr><tr><td>select-on-indeterminate</td><td>controla el comportamiento del checkbox maestro en tablas de selección múltiple cuando sólo se seleccionan algunas filas (pero no todas). Si es true, todas las filas serán seleccionadas, de lo contrario deseleccionadas.</td><td>Boolean</td><td>—</td><td>true</td></tr><tr><td>indent</td><td>indentación horizontal de los datos en formato tree</td><td>Number</td><td>—</td><td>16</td></tr><tr><td>lazy</td><td>si se realiza un lazy loading de los datos</td><td>Boolean</td><td>—</td><td>—</td></tr><tr><td>load</td><td>método para cargar las filas de los hijos, solamente funciona cuando <code>lazy</code>es true</td><td>Function(row, treeNode, resolve)</td><td>—</td><td>—</td></tr><tr><td>tree-props</td><td>configuración para renderizar datos anidados</td><td>Object</td><td>—</td><td>{ hasChildren: &#39;hasChildren&#39;, children: &#39;children&#39; }</td></tr></tbody></table><h3 id=\\\"eventos-de-la-tabla\\\"><a class=\\\"header-anchor\\\" href=\\\"#eventos-de-la-tabla\\\">¶</a> Eventos de la tabla</h3><table><thead><tr><th>Nombre del evento</th><th>Descripción</th><th>Parámetros</th></tr></thead><tbody><tr><td>select</td><td>se dispara cuando el usuario hace clic al <em>checkbox</em> (caja de selección) en una fila</td><td>selection, row</td></tr><tr><td>select-all</td><td>se dispara cando el usuario hace clic al <em>checkbox</em> (caja de selección) en una cabecera de la tabla</td><td>selection</td></tr><tr><td>selection-change</td><td>se dispara cuando selección cambia</td><td>selection</td></tr><tr><td>cell-mouse-enter</td><td>se dispara cuando se desplaza dentro de una celda</td><td>row, column, cell, event</td></tr><tr><td>cell-mouse-leave</td><td>se dispara cuando se desplaza fuera de una celda</td><td>row, column, cell, event</td></tr><tr><td>cell-click</td><td>se dispara cuando se hace clic en una celda</td><td>row, column, cell, event</td></tr><tr><td>cell-dblclick</td><td>se dispara cuando se hace doble clic en una celda</td><td>row, column, cell, event</td></tr><tr><td>row-click</td><td>se dispara cuando se hace clic en una fila</td><td>row, column, event</td></tr><tr><td>row-contextmenu</td><td>se dispara cuando el usuario hace clic derecho en una fila</td><td>row, column, event</td></tr><tr><td>row-dblclick</td><td>se dispara cuando se hace doble clic en una fila</td><td>row, column, event</td></tr><tr><td>header-click</td><td>se dispara cuando se hace clic en una cabecera de columna</td><td>column, event</td></tr><tr><td>header-contextmenu</td><td>se dispara cuando el usuario hace clic derecho en una cabecera de columna</td><td>column, event</td></tr><tr><td>sort-change</td><td>se dispara cuando el ordenamiento de la tabla cambia</td><td>{ column, prop, order }</td></tr><tr><td>filter-change</td><td>clave de la columna. Si necesitas utilizar el evento filter-change, este atributo es obligatorio para identificar cuál columna está siendo filtrada</td><td>filters</td></tr><tr><td>current-change</td><td>se dispara cuando la fila actual cambia</td><td>currentRow, oldCurrentRow</td></tr><tr><td>header-dragend</td><td>se dispara después de modificar el ancho de una columna arrastrando el borde de la cabecera.</td><td>newWidth, oldWidth, column, event</td></tr><tr><td>expand-change</td><td>se activa cuando el usuario expande o colapsa una fila (para la tabla expansible, el segundo parámetro es expandedRows; para la tabla de árbol, el segundo parámetro es expanded)</td><td>row, (expandedRows | expanded)</td></tr></tbody></table><h3 id=\\\"metodos-de-la-tabla\\\"><a class=\\\"header-anchor\\\" href=\\\"#metodos-de-la-tabla\\\">¶</a> Métodos de la tabla</h3><table><thead><tr><th>Metodo</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>clearSelection</td><td>utilizado en selección múltiple de la tabla, limpiar selección</td><td>—</td></tr><tr><td>toggleRowSelection</td><td>utilizado en selección múltiple de la tabla, alterna si una cierta fila es seleccionada. Con el segundo parámetro, puede directamente establecer si la fila es seleccionada</td><td>row, selected</td></tr><tr><td>toggleAllSelection</td><td>usado en Table de selección múltiple, cambia los estados de selección de todas las filas.</td><td>-</td></tr><tr><td>toggleRowExpansion</td><td>utilizado en la Tabla expandible o en la Tabla de árbol, conmutar si se desglosa una determinada línea. Con el segundo parámetro, se puede fijar directamente si esta línea se desglosa o se pliega</td><td>row, expanded</td></tr><tr><td>setCurrentRow</td><td>utilizado en tabla con selección sencilla, establece una cierta fila seleccionada. Si es llamado sin ningún parámetro, este puede limpiar la selección</td><td>row</td></tr><tr><td>clearSort</td><td>limpiar ordenamiento, restaurar datos a orden original</td><td>—</td></tr><tr><td>clearFilter</td><td>Se utiliza para borrar todas las condiciones de filtro cuando no se pasan parámetros, los datos se restaurarán a un estado sin filtrar, o se puede pasar una matriz de columnas para borrar las condiciones de filtro de la columna especificada.</td><td>columnKey</td></tr><tr><td>doLayout</td><td>refresca el layout del Table. Cuando la visibilidad de Table cambia, puede que necesite llamar a este método para obtener un diseño correcto</td><td>—</td></tr><tr><td>sort</td><td>Ordenar tabla manualmente. La propiedad <code>prop</code> se utiliza para establecer la columna de ordenación, la propiedad <code>order</code> se utiliza para establecer el orden.</td><td>prop: string, order: string</td></tr></tbody></table><h3 id=\\\"slots-de-la-tabla\\\"><a class=\\\"header-anchor\\\" href=\\\"#slots-de-la-tabla\\\">¶</a> Slots de la tabla</h3><table><thead><tr><th>Nombre</th><th>Descripción</th></tr></thead><tbody><tr><td>append</td><td>El contenido será insertado después de la última fila. Es posible que necesites este espacio si deseas implementar <em>scroll</em> infinito para la tabla. Este espacio se mostrará sobre la fila de resumen si hay uno.</td></tr></tbody></table><h3 id=\\\"atributos-para-las-columnas-de-la-tabla\\\"><a class=\\\"header-anchor\\\" href=\\\"#atributos-para-las-columnas-de-la-tabla\\\">¶</a> Atributos para las columnas de la tabla</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>type</td><td>tipo de la columna. Si se establece a <code>selection</code>, la columna puede mostrar un <em>checkbox</em>. Si se establece a <code>index</code>, la columna puede mostrar el índice de la fila (iniciando desde 1). Si se establece a <code>expand</code>, la columna puede mostrar un ícono para expandir.</td><td>string</td><td>selection/index/expand</td><td>—</td></tr><tr><td>index</td><td>personalice los índices para cada fila, funciona en columnas con <code>type=index</code></td><td>number, Function(index)</td><td>-</td><td>-</td></tr><tr><td>label</td><td>etiqueta de la columna</td><td>string</td><td>—</td><td>—</td></tr><tr><td>column-key</td><td>clave de la columna. Si necesita utilizar el evento <code>filter-change</code>, necesita el atributo para identificar cual columna está siendo filtrada</td><td>string</td><td>string</td><td>—</td></tr><tr><td>prop</td><td>nombre del campo. También puede usar su alias: <code>property</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>width</td><td>ancho de la columna</td><td>string</td><td>—</td><td>—</td></tr><tr><td>min-width</td><td>ancho mínimo de la columna. Columnas con <code>width</code> tienen un ancho fijo, mientras que las columnas con <code>min-width</code> tienen un ancho que se distribuye en proporción.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>fixed</td><td>especifica si la columna se fija a la izquierda o a la derecha. Se fijará a la izquierda si es <code>true</code></td><td>string/boolean</td><td>true/left/right</td><td>—</td></tr><tr><td>render-header</td><td>Función de renderizado para la cabecera de la tabla de esta columna</td><td>Function(h, { column, $index })</td><td>—</td><td>—</td></tr><tr><td>sortable</td><td>especifica que columna puede ser ordenado. El ordenamiento remoto puede ser hecho configurando el atributo <code>custom</code> y escucha al evento de tabla <code>sort-change</code></td><td>boolean, string</td><td>true, false, custom</td><td>false</td></tr><tr><td>sort-method</td><td>método de ordenamiento, funciona cuando <code>sortable</code> está en <code>true</code>. Debería devolver un número, al igual que Array.sort</td><td>Function(a, b)</td><td>—</td><td>—</td></tr><tr><td>sort-by</td><td>especifica por cual propiedad de va a ordenar, funciona cuando <code>sortable</code> es <code>true</code> y <code>sort-method</code> es <code>undefined</code>. Si se establece a un arreglo, la columna ordenara secuencialmente por la siguiente propiedad si la anterior es igual</td><td>Function(row, index)/String/Array</td><td>—</td><td>—</td></tr><tr><td>sort-orders</td><td>el orden de las estrategias de ordenación utilizadas al ordenar los datos, funciona cuando <code>sortable</code> es <code>true</code>. Acepta un array, a medida que el usuario hace clic en el encabezado, la columna se ordena en el orden de los elementos del array.</td><td>array</td><td>los elementos en el arreglo necesitan ser uno de los siguientes: <code>ascending</code>, <code>descending</code> y <code>null</code> (restaura el orden original)</td><td>[&#39;ascending&#39;, &#39;descending&#39;, null]</td></tr><tr><td>resizable</td><td>especifica si el ancho de la columna puede ser redimensionado, funciona cuando <code>border</code> de <code>el-table</code> está en <code>true</code></td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>formatter</td><td>función que formatea el contenido de la celda</td><td>Function(row, column, cellValue, index)</td><td>—</td><td>—</td></tr><tr><td>show-overflow-tooltip</td><td>especifica si el <em>tooltip</em> debe ocultarse o mostrarse al hacer <em>hover</em> en la celda</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>align</td><td>alineación</td><td>string</td><td>left/center/right</td><td>left</td></tr><tr><td>header-align</td><td>alineación de la cabecera de la tabla. Si se omite, se aplicará el valor del atributo anterior.</td><td>String</td><td>left/center/right</td><td>—</td></tr><tr><td>class-name</td><td>nombre de clase de la celda en la columna</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label-class-name</td><td>nombre de clase de la etiqueta de esta columna</td><td>string</td><td>—</td><td>—</td></tr><tr><td>selectable</td><td>función que determina si una cierta fila puede ser seleccionada, funciona cuando <code>type</code> esta en <code>selection</code></td><td>Function(row, index)</td><td>—</td><td>—</td></tr><tr><td>reserve-selection</td><td>especifica si se reserva la selección después de actualizar los datos, funciona cuando <code>type</code> está en <code>selection</code>. Note que <code>row-key</code> es requerido para que esto funcione</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>filters</td><td>un arreglo de opciones para filtrado de datos. Para cada elemento en este arreglo, <code>text</code> y <code>value</code> son obligatorios</td><td>Array[{ text, value }]</td><td>—</td><td>—</td></tr><tr><td>filter-placement</td><td>colocación para el menú desplegable del filtro</td><td>String</td><td>same as Tooltip&#39;s <code>placement</code></td><td>—</td></tr><tr><td>filter-multiple</td><td>especifica si el filtrado de datos soporta múltiples opciones</td><td>Boolean</td><td>—</td><td>true</td></tr><tr><td>filter-method</td><td>método para filtrado de datos. Si <code>filter-multiple</code> está habilitado, este método se invocará varias veces para cada fila, y una fila puede mostrar si una de las llamadas devuelve <code>true</code></td><td>Function(value, row, column)</td><td>—</td><td>—</td></tr><tr><td>filtered-value</td><td>el valor del filtro para los datos seleccionados, puede ser útil cuando el encabezado de la tabla se representará con <code>render-header</code></td><td>Array</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"table-column-scoped-slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#table-column-scoped-slot\\\">¶</a> Table-column Scoped Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Contenido personalizado para las columnas de la tabla. El parámetro del scope es { row, column, $index }</td></tr><tr><td>header</td><td>Contenido personalizado para el encabezado de la tabla. El parámetro del scope es { column, $index }</td></tr></tbody></table>\", 12)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n  const _component_element_demo8 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo8\")\n  const _component_element_demo9 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo9\")\n  const _component_element_demo10 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo10\")\n  const _component_element_demo11 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo11\")\n  const _component_element_demo12 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo12\")\n  const _component_element_demo13 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo13\")\n  const _component_element_demo14 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo14\")\n  const _component_element_demo15 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo15\")\n  const _component_element_demo16 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo16\")\n  const _component_element_demo17 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo17\")\n  const _component_element_demo18 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo18\")\n  const _component_element_demo19 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo19\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_7\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_8,\n    _hoisted_9,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_11\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_10\n      ]),\n      _: 1\n    }),\n    _hoisted_12,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_14\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_13\n      ]),\n      _: 1\n    }),\n    _hoisted_15,\n    _hoisted_16,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_18\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      _: 1\n    }),\n    _hoisted_19,\n    _hoisted_20,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_22\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_21\n      ]),\n      _: 1\n    }),\n    _hoisted_23,\n    _hoisted_24,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_26\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_25\n      ]),\n      _: 1\n    }),\n    _hoisted_27,\n    _hoisted_28,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_30\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_29\n      ]),\n      _: 1\n    }),\n    _hoisted_31,\n    _hoisted_32,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_34\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_33\n      ]),\n      _: 1\n    }),\n    _hoisted_35,\n    _hoisted_36,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo8)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_38\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_37\n      ]),\n      _: 1\n    }),\n    _hoisted_39,\n    _hoisted_40,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo9)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_42\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_41\n      ]),\n      _: 1\n    }),\n    _hoisted_43,\n    _hoisted_44,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo10)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_46\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_45\n      ]),\n      _: 1\n    }),\n    _hoisted_47,\n    _hoisted_48,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo11)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_50\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_49\n      ]),\n      _: 1\n    }),\n    _hoisted_51,\n    _hoisted_52,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo12)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_54\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_53\n      ]),\n      _: 1\n    }),\n    _hoisted_55,\n    _hoisted_56,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo13)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_58\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_57\n      ]),\n      _: 1\n    }),\n    _hoisted_59,\n    _hoisted_60,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo14)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_62\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_61\n      ]),\n      _: 1\n    }),\n    _hoisted_63,\n    _hoisted_64,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo15)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_66\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_65\n      ]),\n      _: 1\n    }),\n    _hoisted_67,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo16)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_69\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_68\n      ]),\n      _: 1\n    }),\n    _hoisted_70,\n    _hoisted_71,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo17)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_73\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_72\n      ]),\n      _: 1\n    }),\n    _hoisted_74,\n    _hoisted_75,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo18)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_77\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_76\n      ]),\n      _: 1\n    }),\n    _hoisted_78,\n    _hoisted_79,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo19)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_81\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_80\n      ]),\n      _: 1\n    }),\n    _hoisted_82\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/table.md?vue&type=template&id=1b036018\n");

/***/ })

}]);