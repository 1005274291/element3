(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[101],{

/***/ "./examples/docs/en-US/upload.md":
/*!***************************************!*\
  !*** ./examples/docs/en-US/upload.md ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _upload_md_vue_type_template_id_6670ab13__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=6670ab13 */ \"./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13\");\n/* harmony import */ var _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./upload.md?vue&type=script&lang=js */ \"./examples/docs/en-US/upload.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _upload_md_vue_type_template_id_6670ab13__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"6670ab13\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('6670ab13', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('6670ab13', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./upload.md?vue&type=template&id=6670ab13 */ \"./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _upload_md_vue_type_template_id_6670ab13__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=6670ab13 */ \"./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13\");\n(() => {\n    api.rerender('6670ab13', _upload_md_vue_type_template_id_6670ab13__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/en-US/upload.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL3VwbG9hZC5tZD9jNzE2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFrRTtBQUNWO0FBQ0w7QUFDbkQsMEVBQU0sVUFBVSwrRUFBTTtBQUN0QjtBQUNBLElBQUksSUFBVTtBQUNkLEVBQUUsMEVBQU07QUFDUjtBQUNBO0FBQ0Esb0NBQW9DLDBFQUFNO0FBQzFDLDJCQUEyQiwwRUFBTTtBQUNqQzs7QUFFQSxvQkFBb0IsZ0hBQTJDLEVBQUU7QUFBQTtBQUNqRSw2QkFBNkIsK0VBQU07QUFDbkMsR0FBRzs7QUFFSDs7QUFFQSwwRUFBTTs7QUFFUyx5SSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZW4tVVMvdXBsb2FkLm1kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY2NzBhYjEzXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5zY3JpcHQucmVuZGVyID0gcmVuZGVyXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICBzY3JpcHQuX19obXJJZCA9IFwiNjY3MGFiMTNcIlxuICBjb25zdCBhcGkgPSBfX1ZVRV9ITVJfUlVOVElNRV9fXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFhcGkuY3JlYXRlUmVjb3JkKCc2NjcwYWIxMycsIHNjcmlwdCkpIHtcbiAgICBhcGkucmVsb2FkKCc2NjcwYWIxMycsIHNjcmlwdClcbiAgfVxuICBcbiAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3VwbG9hZC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NjcwYWIxM1wiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCc2NjcwYWIxMycsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VuLVVTL3VwbG9hZC5tZFwiXG5cbmV4cG9ydCBkZWZhdWx0IHNjcmlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./examples/docs/en-US/upload.md\n");

/***/ }),

/***/ "./examples/docs/en-US/upload.md?vue&type=script&lang=js":
/*!***************************************************************!*\
  !*** ./examples/docs/en-US/upload.md?vue&type=script&lang=js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/upload.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL3VwbG9hZC5tZD80YWE3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQTJNIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lbi1VUy91cGxvYWQubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/en-US/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13":
/*!*********************************************************************!*\
  !*** ./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13 ***!
  \*********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_6670ab13__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=template&id=6670ab13 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_6670ab13__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL3VwbG9hZC5tZD81MDBhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lbi1VUy91cGxvYWQubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY3MGFiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L3RlbXBsYXRlTG9hZGVyLmpzPz9yZWYtLTUhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY2NzBhYjEzXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/upload.md?vue&type=script&lang=js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/en-US/upload.md?vue&type=script&lang=js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"before-remove\": _ctx.beforeRemove,\n          multiple: \"\",\n          limit: 3,\n          \"on-exceed\": _ctx.handleExceed,\n          \"file-list\": _ctx.fileList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Click to upload\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"jpg/png files with a size less than 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"before-remove\", \"on-exceed\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePreview(file) {\n            console.log(file);\n          },\n\n          handleExceed(files, fileList) {\n            this.$message.warning(`The limit is 3, you selected ${files.length} files this time, add up to ${files.length + fileList.length} totally`);\n          },\n\n          beforeRemove(file, fileList) {\n            return this.$confirm(`Cancel the transfert of ${file.name} ?`);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createCommentVNode: _createCommentVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"avatar-uploader\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"show-file-list\": false,\n          \"on-success\": _ctx.handleAvatarSuccess,\n          \"before-upload\": _ctx.beforeAvatarUpload\n        }, {\n          default: _withCtx(() => [_ctx.imageUrl ? (_openBlock(), _createBlock(\"img\", {\n            key: 0,\n            src: _ctx.imageUrl,\n            class: \"avatar\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])) : (_openBlock(), _createBlock(\"i\", {\n            key: 1,\n            class: \"el-icon-plus avatar-uploader-icon\"\n          }))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-success\", \"before-upload\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            imageUrl: ''\n          };\n        },\n\n        methods: {\n          handleAvatarSuccess(res, file) {\n            this.imageUrl = URL.createObjectURL(file.raw);\n          },\n\n          beforeAvatarUpload(file) {\n            const isJPG = file.type === 'image/jpeg';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isJPG) {\n              this.$message.error('Avatar picture must be JPG format!');\n            }\n\n            if (!isLt2M) {\n              this.$message.error('Avatar picture size can not exceed 2MB!');\n            }\n\n            return isJPG && isLt2M;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"list-type\": \"picture-card\",\n          \"on-preview\": _ctx.handlePictureCardPreview,\n          \"on-remove\": _ctx.handleRemove\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-plus\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\"]), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            dialogImageUrl: '',\n            dialogVisible: false\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePictureCardPreview(file) {\n            this.dialogImageUrl = file.url;\n            this.dialogVisible = true;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createCommentVNode: _createCommentVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"#\",\n          \"list-type\": \"picture-card\",\n          \"auto-upload\": false\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            slot: \"default\",\n            class: \"el-icon-plus\"\n          }), _createVNode(\"div\", {\n            slot: \"file\",\n            \"slot-scope\": \"{file}\"\n          }, [_createVNode(\"img\", {\n            class: \"el-upload-list__item-thumbnail\",\n            src: _ctx.file.url,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"]), _createVNode(\"span\", {\n            class: \"el-upload-list__item-actions\"\n          }, [_createVNode(\"span\", {\n            class: \"el-upload-list__item-preview\",\n            onClick: $event => _ctx.handlePictureCardPreview(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-zoom-in\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"]), !_ctx.disabled ? (_openBlock(), _createBlock(\"span\", {\n            key: 0,\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleDownload(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-download\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), !_ctx.disabled ? (_openBlock(), _createBlock(\"span\", {\n            key: 1,\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleRemove(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-delete\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])])]),\n          _: 1\n        }), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            dialogImageUrl: '',\n            dialogVisible: false,\n            disabled: false\n          };\n        },\n\n        methods: {\n          handleRemove(file) {\n            console.log(file);\n          },\n\n          handlePictureCardPreview(file) {\n            this.dialogImageUrl = file.url;\n            this.dialogVisible = true;\n          },\n\n          handleDownload(file) {\n            console.log(file);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          \"list-type\": \"picture\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Click to upload\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"jpg/png files with a size less than 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePreview(file) {\n            console.log(file);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-change\": _ctx.handleChange,\n          \"file-list\": _ctx.fileList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Click to upload\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"jpg/png files with a size less than 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-change\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleChange(file, fileList) {\n            this.fileList = fileList.slice(-3);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          drag: \"\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          multiple: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-upload\"\n          }), _createVNode(\"div\", {\n            class: \"el-upload__text\"\n          }, [_createTextVNode(\"Drop file here or \"), _createVNode(\"em\", null, \"click to upload\")]), _createVNode(\"div\", {\n            class: \"el-upload__tip\",\n            slot: \"tip\"\n          }, \"jpg/png files with a size less than 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]);\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo7\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          ref: \"upload\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"auto-upload\": false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            slot: \"trigger\",\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"select file\")]),\n            _: 1\n          }), _createVNode(_component_el_button, {\n            style: {\n              \"margin-left\": \"10px\"\n            },\n            size: \"small\",\n            type: \"success\",\n            onClick: _ctx.submitUpload\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"upload to server\")]),\n            _: 1\n          }, 8\n          /* PROPS */\n          , [\"onClick\"]), _createVNode(\"div\", {\n            class: \"el-upload__tip\",\n            slot: \"tip\"\n          }, \"jpg/png files with a size less than 500kb\")]),\n          _: 1\n        }, 512\n        /* NEED_PATCH */\n        );\n      }\n\n      const democomponentExport = {\n        methods: {\n          submitUpload() {\n            this.$refs.upload.submit();\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13 ***!
  \*****************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"upload\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#upload\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Upload\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Upload files by clicking or drag-and-drop\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"click-to-upload-files\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#click-to-upload-files\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Click to upload files\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Customize upload button type and text using \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"slot\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Set \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"limit\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-exceed\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to limit the maximum number of uploads allowed and specify method when the limit is exceeded. Plus, you can abort removing a file in the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"before-remove\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" hook.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :before-remove=\\\"beforeRemove\\\"\\n  multiple\\n  :limit=\\\"3\\\"\\n  :on-exceed=\\\"handleExceed\\\"\\n  :file-list=\\\"fileList\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Click to upload</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">jpg/png files with a size less than 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePreview(file) {\\n        console.log(file);\\n      },\\n      handleExceed(files, fileList) {\\n        this.$message.warning(`The limit is 3, you selected ${files.length} files this time, add up to ${files.length + fileList.length} totally`);\\n      },\\n      beforeRemove(file, fileList) {\\n        return this.$confirm(`Cancel the transfert of ${ file.name } ?`);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"user-avatar-upload\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#user-avatar-upload\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" User avatar upload\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"before-upload\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" hook to limit the upload file format and size.\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"avatar-uploader\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :show-file-list=\\\"false\\\"\\n  :on-success=\\\"handleAvatarSuccess\\\"\\n  :before-upload=\\\"beforeAvatarUpload\\\">\\n  <img v-if=\\\"imageUrl\\\" :src=\\\"imageUrl\\\" class=\\\"avatar\\\">\\n  <i v-else class=\\\"el-icon-plus avatar-uploader-icon\\\"></i>\\n</el-upload>\\n\\n<style>\\n  .avatar-uploader .el-upload {\\n    border: 1px dashed #d9d9d9;\\n    border-radius: 6px;\\n    cursor: pointer;\\n    position: relative;\\n    overflow: hidden;\\n  }\\n  .avatar-uploader .el-upload:hover {\\n    border-color: #409EFF;\\n  }\\n  .avatar-uploader-icon {\\n    font-size: 28px;\\n    color: #8c939d;\\n    width: 178px;\\n    height: 178px;\\n    line-height: 178px;\\n    text-align: center;\\n  }\\n  .avatar {\\n    width: 178px;\\n    height: 178px;\\n    display: block;\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        imageUrl: ''\\n      };\\n    },\\n    methods: {\\n      handleAvatarSuccess(res, file) {\\n        this.imageUrl = URL.createObjectURL(file.raw);\\n      },\\n      beforeAvatarUpload(file) {\\n        const isJPG = file.type === 'image/jpeg';\\n        const isLt2M = file.size / 1024 / 1024 < 2;\\n\\n        if (!isJPG) {\\n          this.$message.error('Avatar picture must be JPG format!');\\n        }\\n        if (!isLt2M) {\\n          this.$message.error('Avatar picture size can not exceed 2MB!');\\n        }\\n        return isJPG && isLt2M;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"photo-wall\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#photo-wall\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Photo Wall\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"list-type\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to change the fileList style.\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  list-type=\\\"picture-card\\\"\\n  :on-preview=\\\"handlePictureCardPreview\\\"\\n  :on-remove=\\\"handleRemove\\\">\\n  <i class=\\\"el-icon-plus\\\"></i>\\n</el-upload>\\n<el-dialog :visible.sync=\\\"dialogVisible\\\">\\n  <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" alt=\\\"\\\">\\n</el-dialog>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dialogImageUrl: '',\\n        dialogVisible: false\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePictureCardPreview(file) {\\n        this.dialogImageUrl = file.url;\\n        this.dialogVisible = true;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"custom-file-thumbnail\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#custom-file-thumbnail\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Custom file thumbnail\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"scoped-slot\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to change default thumbnail template.\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  action=\\\"#\\\"\\n  list-type=\\\"picture-card\\\"\\n  :auto-upload=\\\"false\\\">\\n    <i slot=\\\"default\\\" class=\\\"el-icon-plus\\\"></i>\\n    <div slot=\\\"file\\\" slot-scope=\\\"{file}\\\">\\n      <img\\n        class=\\\"el-upload-list__item-thumbnail\\\"\\n        :src=\\\"file.url\\\" alt=\\\"\\\"\\n      >\\n      <span class=\\\"el-upload-list__item-actions\\\">\\n        <span\\n          class=\\\"el-upload-list__item-preview\\\"\\n          @click=\\\"handlePictureCardPreview(file)\\\"\\n        >\\n          <i class=\\\"el-icon-zoom-in\\\"></i>\\n        </span>\\n        <span\\n          v-if=\\\"!disabled\\\"\\n          class=\\\"el-upload-list__item-delete\\\"\\n          @click=\\\"handleDownload(file)\\\"\\n        >\\n          <i class=\\\"el-icon-download\\\"></i>\\n        </span>\\n        <span\\n          v-if=\\\"!disabled\\\"\\n          class=\\\"el-upload-list__item-delete\\\"\\n          @click=\\\"handleRemove(file)\\\"\\n        >\\n          <i class=\\\"el-icon-delete\\\"></i>\\n        </span>\\n      </span>\\n    </div>\\n</el-upload>\\n<el-dialog :visible.sync=\\\"dialogVisible\\\">\\n  <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" alt=\\\"\\\">\\n</el-dialog>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dialogImageUrl: '',\\n        dialogVisible: false,\\n        disabled: false\\n      };\\n    },\\n    methods: {\\n      handleRemove(file) {\\n        console.log(file);\\n      },\\n      handlePictureCardPreview(file) {\\n        this.dialogImageUrl = file.url;\\n        this.dialogVisible = true;\\n      },\\n      handleDownload(file) {\\n        console.log(file);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"filelist-with-thumbnail\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#filelist-with-thumbnail\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" FileList with thumbnail\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :file-list=\\\"fileList\\\"\\n  list-type=\\\"picture\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Click to upload</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">jpg/png files with a size less than 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePreview(file) {\\n        console.log(file);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"file-list-control\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#file-list-control\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" File list control\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-change\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" hook function to control upload file list\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-change=\\\"handleChange\\\"\\n  :file-list=\\\"fileList\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Click to upload</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">jpg/png files with a size less than 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{\\n          name: 'food.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }, {\\n          name: 'food2.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }]\\n      };\\n    },\\n    methods: {\\n      handleChange(file, fileList) {\\n        this.fileList = fileList.slice(-3);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"drag-to-upload\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#drag-to-upload\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Drag to upload\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"You can drag your file to a certain area to upload it.\", -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  drag\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :file-list=\\\"fileList\\\"\\n  multiple>\\n  <i class=\\\"el-icon-upload\\\"></i>\\n  <div class=\\\"el-upload__text\\\">Drop file here or <em>click to upload</em></div>\\n  <div class=\\\"el-upload__tip\\\" slot=\\\"tip\\\">jpg/png files with a size less than 500kb</div>\\n</el-upload>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"manual-upload\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#manual-upload\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Manual upload\")\n], -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  ref=\\\"upload\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :auto-upload=\\\"false\\\">\\n  <el-button slot=\\\"trigger\\\" size=\\\"small\\\" type=\\\"primary\\\">select file</el-button>\\n  <el-button style=\\\"margin-left: 10px;\\\" size=\\\"small\\\" type=\\\"success\\\" @click=\\\"submitUpload\\\">upload to server</el-button>\\n  <div class=\\\"el-upload__tip\\\" slot=\\\"tip\\\">jpg/png files with a size less than 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    methods: {\\n      submitUpload() {\\n        this.$refs.upload.submit();\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributes\\\">¶</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>action</td><td>required, request URL</td><td>string</td><td>—</td><td>—</td></tr><tr><td>headers</td><td>request headers</td><td>object</td><td>—</td><td>—</td></tr><tr><td>multiple</td><td>whether uploading multiple files is permitted</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>data</td><td>additions options of request</td><td>object</td><td>—</td><td>—</td></tr><tr><td>name</td><td>key name for uploaded file</td><td>string</td><td>—</td><td>file</td></tr><tr><td>with-credentials</td><td>whether cookies are sent</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-file-list</td><td>whether to show the uploaded file list</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>drag</td><td>whether to activate drag and drop mode</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>accept</td><td>accepted <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept\\\">file types</a>, will not work when <code>thumbnail-mode</code> is <code>true</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>on-preview</td><td>hook function when clicking the uploaded files</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>on-remove</td><td>hook function when files are removed</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-success</td><td>hook function when uploaded successfully</td><td>function(response, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-error</td><td>hook function when some errors occurs</td><td>function(err, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-progress</td><td>hook function when some progress occurs</td><td>function(event, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-change</td><td>hook function when select file or upload file success or upload file fail</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>before-upload</td><td>hook function before uploading with the file to be uploaded as its parameter. If <code>false</code> is returned or a <code>Promise</code> is returned and then is rejected, uploading will be aborted</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>before-remove</td><td>hook function before removing a file with the file and file list as its parameters. If <code>false</code> is returned or a <code>Promise</code> is returned and then is rejected, removing will be aborted.</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>thumbnail-mode</td><td>whether thumbnail is displayed</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>file-list</td><td>default uploaded files, e.g. [{name: &#39;food.jpg&#39;, url: &#39;https://xxx.cdn.com/xxx.jpg&#39;}]</td><td>array</td><td>—</td><td>[]</td></tr><tr><td>list-type</td><td>type of fileList</td><td>string</td><td>text/picture/picture-card</td><td>text</td></tr><tr><td>auto-upload</td><td>whether to auto upload file</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>http-request</td><td>override default xhr behavior, allowing you to implement your own upload-file&#39;s request</td><td>function</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>whether to disable upload</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>limit</td><td>maximum number of uploads allowed</td><td>number</td><td>—</td><td>—</td></tr><tr><td>on-exceed</td><td>hook function when limit is exceeded</td><td>function(files, fileList)</td><td>—</td><td>-</td></tr></tbody></table><h3 id=\\\"slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#slot\\\">¶</a> Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>trigger</td><td>content which triggers file dialog</td></tr><tr><td>tip</td><td>content of tips</td></tr></tbody></table><h3 id=\\\"methods\\\"><a class=\\\"header-anchor\\\" href=\\\"#methods\\\">¶</a> Methods</h3><table><thead><tr><th>Methods Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>clearFiles</td><td>clear the uploaded file list (this method is not supported in the <code>before-upload</code> hook)</td><td>—</td></tr><tr><td>abort</td><td>cancel upload request</td><td>（ file: fileList&#39;s item ）</td></tr><tr><td>submit</td><td>upload the file list manually</td><td>—</td></tr></tbody></table>\", 6)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_5\n      ]),\n      _: 1\n    }),\n    _hoisted_7,\n    _hoisted_8,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      _: 1\n    }),\n    _hoisted_10,\n    _hoisted_11,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      _: 1\n    }),\n    _hoisted_13,\n    _hoisted_14,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      _: 1\n    }),\n    _hoisted_16,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      _: 1\n    }),\n    _hoisted_18,\n    _hoisted_19,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_20\n      ]),\n      _: 1\n    }),\n    _hoisted_21,\n    _hoisted_22,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_23\n      ]),\n      _: 1\n    }),\n    _hoisted_24,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_25\n      ]),\n      _: 1\n    }),\n    _hoisted_26\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/upload.md?vue&type=template&id=6670ab13\n");

/***/ })

}]);