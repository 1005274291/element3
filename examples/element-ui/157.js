(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[157],{

/***/ "./examples/docs/es/upload.md":
/*!************************************!*\
  !*** ./examples/docs/es/upload.md ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _upload_md_vue_type_template_id_1dbddc07__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=1dbddc07 */ \"./examples/docs/es/upload.md?vue&type=template&id=1dbddc07\");\n/* harmony import */ var _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./upload.md?vue&type=script&lang=js */ \"./examples/docs/es/upload.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _upload_md_vue_type_template_id_1dbddc07__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"1dbddc07\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('1dbddc07', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('1dbddc07', _upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./upload.md?vue&type=template&id=1dbddc07 */ \"./examples/docs/es/upload.md?vue&type=template&id=1dbddc07\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _upload_md_vue_type_template_id_1dbddc07__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.md?vue&type=template&id=1dbddc07 */ \"./examples/docs/es/upload.md?vue&type=template&id=1dbddc07\");\n(() => {\n    api.rerender('1dbddc07', _upload_md_vue_type_template_id_1dbddc07__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/es/upload.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3VwbG9hZC5tZD83ODg2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFrRTtBQUNWO0FBQ0w7QUFDbkQsMEVBQU0sVUFBVSwrRUFBTTtBQUN0QjtBQUNBLElBQUksSUFBVTtBQUNkLEVBQUUsMEVBQU07QUFDUjtBQUNBO0FBQ0Esb0NBQW9DLDBFQUFNO0FBQzFDLDJCQUEyQiwwRUFBTTtBQUNqQzs7QUFFQSxvQkFBb0IsNkdBQTJDLEVBQUU7QUFBQTtBQUNqRSw2QkFBNkIsK0VBQU07QUFDbkMsR0FBRzs7QUFFSDs7QUFFQSwwRUFBTTs7QUFFUyx5SSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZXMvdXBsb2FkLm1kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFkYmRkYzA3XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5zY3JpcHQucmVuZGVyID0gcmVuZGVyXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICBzY3JpcHQuX19obXJJZCA9IFwiMWRiZGRjMDdcIlxuICBjb25zdCBhcGkgPSBfX1ZVRV9ITVJfUlVOVElNRV9fXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFhcGkuY3JlYXRlUmVjb3JkKCcxZGJkZGMwNycsIHNjcmlwdCkpIHtcbiAgICBhcGkucmVsb2FkKCcxZGJkZGMwNycsIHNjcmlwdClcbiAgfVxuICBcbiAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3VwbG9hZC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xZGJkZGMwN1wiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCcxZGJkZGMwNycsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VzL3VwbG9hZC5tZFwiXG5cbmV4cG9ydCBkZWZhdWx0IHNjcmlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./examples/docs/es/upload.md\n");

/***/ }),

/***/ "./examples/docs/es/upload.md?vue&type=script&lang=js":
/*!************************************************************!*\
  !*** ./examples/docs/es/upload.md?vue&type=script&lang=js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/upload.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3VwbG9hZC5tZD81YTI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQTJNIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lcy91cGxvYWQubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3VwbG9hZC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/es/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/es/upload.md?vue&type=template&id=1dbddc07":
/*!******************************************************************!*\
  !*** ./examples/docs/es/upload.md?vue&type=template&id=1dbddc07 ***!
  \******************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_1dbddc07__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./upload.md?vue&type=template&id=1dbddc07 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/upload.md?vue&type=template&id=1dbddc07\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_upload_md_vue_type_template_id_1dbddc07__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3VwbG9hZC5tZD8xYzQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lcy91cGxvYWQubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWRiZGRjMDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L3RlbXBsYXRlTG9hZGVyLmpzPz9yZWYtLTUhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vdXBsb2FkLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFkYmRkYzA3XCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/upload.md?vue&type=template&id=1dbddc07\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/upload.md?vue&type=script&lang=js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/upload.md?vue&type=script&lang=js ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          multiple: \"\",\n          limit: 3,\n          \"on-exceed\": _ctx.handleExceed,\n          \"file-list\": _ctx.fileList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Clic para subir archivo\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Solo archivos jpg/png con un tamaño menor de 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"on-exceed\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePreview(file) {\n            console.log(file);\n          },\n\n          handleExceed(files, fileList) {\n            this.$message.warning(`El límite es 3, haz seleccionado ${files.length} archivos esta vez, añade hasta ${files.length + fileList.length}`);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createCommentVNode: _createCommentVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"avatar-uploader\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"show-file-list\": false,\n          \"on-success\": _ctx.handleAvatarSuccess,\n          \"before-upload\": _ctx.beforeAvatarUpload\n        }, {\n          default: _withCtx(() => [_ctx.imageUrl ? (_openBlock(), _createBlock(\"img\", {\n            key: 0,\n            src: _ctx.imageUrl,\n            class: \"avatar\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])) : (_openBlock(), _createBlock(\"i\", {\n            key: 1,\n            class: \"el-icon-plus avatar-uploader-icon\"\n          }))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-success\", \"before-upload\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            imageUrl: ''\n          };\n        },\n\n        methods: {\n          handleAvatarSuccess(res, file) {\n            this.imageUrl = URL.createObjectURL(file.raw);\n          },\n\n          beforeAvatarUpload(file) {\n            const isJPG = file.type === 'image/jpeg';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isJPG) {\n              this.$message.error('La imagen debe estar en formato JPG!');\n            }\n\n            if (!isLt2M) {\n              this.$message.error('La imagen excede los 2MB!');\n            }\n\n            return isJPG && isLt2M;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"list-type\": \"picture-card\",\n          \"on-preview\": _ctx.handlePictureCardPreview,\n          \"on-remove\": _ctx.handleRemove\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-plus\"\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\"]), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            dialogImageUrl: '',\n            dialogVisible: false\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePictureCardPreview(file) {\n            this.dialogImageUrl = file.url;\n            this.dialogVisible = true;\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createCommentVNode: _createCommentVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        Fragment: _Fragment\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_upload, {\n          action: \"#\",\n          \"list-type\": \"picture-card\",\n          \"auto-upload\": false\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            slot: \"default\",\n            class: \"el-icon-plus\"\n          }), _createVNode(\"div\", {\n            slot: \"file\",\n            \"slot-scope\": \"{file}\"\n          }, [_createVNode(\"img\", {\n            class: \"el-upload-list__item-thumbnail\",\n            src: _ctx.file.url,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"]), _createVNode(\"span\", {\n            class: \"el-upload-list__item-actions\"\n          }, [_createVNode(\"span\", {\n            class: \"el-upload-list__item-preview\",\n            onClick: $event => _ctx.handlePictureCardPreview(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-zoom-in\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"]), !_ctx.disabled ? (_openBlock(), _createBlock(\"span\", {\n            key: 0,\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleDownload(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-download\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), !_ctx.disabled ? (_openBlock(), _createBlock(\"span\", {\n            key: 1,\n            class: \"el-upload-list__item-delete\",\n            onClick: $event => _ctx.handleRemove(_ctx.file)\n          }, [_createVNode(\"i\", {\n            class: \"el-icon-delete\"\n          })], 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])])]),\n          _: 1\n        }), _createVNode(_component_el_dialog, {\n          visible: _ctx.dialogVisible\n        }, {\n          default: _withCtx(() => [_createVNode(\"img\", {\n            width: \"100%\",\n            src: _ctx.dialogImageUrl,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , [\"src\"])]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"visible\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            dialogImageUrl: '',\n            dialogVisible: false,\n            disabled: false\n          };\n        },\n\n        methods: {\n          handleRemove(file) {\n            console.log(file);\n          },\n\n          handlePictureCardPreview(file) {\n            this.dialogImageUrl = file.url;\n            this.dialogVisible = true;\n          },\n\n          handleDownload(file) {\n            console.log(file);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          \"list-type\": \"picture\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Clic para subir archivo\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Solo archivos jpg/png con un tamaño menor de 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleRemove(file, fileList) {\n            console.log(file, fileList);\n          },\n\n          handlePreview(file) {\n            console.log(file);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-change\": _ctx.handleChange,\n          \"file-list\": _ctx.fileList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Clic para subir archivo\")]),\n            _: 1\n          }), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Solo archivos jpg/png con un tamaño menor de 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-change\", \"file-list\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            fileList: [{\n              name: 'food.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }, {\n              name: 'food2.jpeg',\n              url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\n            }]\n          };\n        },\n\n        methods: {\n          handleChange(file, fileList) {\n            this.fileList = fileList.slice(-3);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          drag: \"\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"on-preview\": _ctx.handlePreview,\n          \"on-remove\": _ctx.handleRemove,\n          \"file-list\": _ctx.fileList,\n          multiple: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(\"i\", {\n            class: \"el-icon-upload\"\n          }), _createVNode(\"div\", {\n            class: \"el-upload__text\"\n          }, [_createTextVNode(\"Suelta tu archivo aquí o \"), _createVNode(\"em\", null, \"haz clic para cargar\")]), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Solo archivos jpg/png con un tamaño menor de 500kb\")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"on-preview\", \"on-remove\", \"file-list\"]);\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo7\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_upload = _resolveComponent(\"el-upload\");\n\n        return _openBlock(), _createBlock(_component_el_upload, {\n          class: \"upload-demo\",\n          ref: \"upload\",\n          action: \"https://jsonplaceholder.typicode.com/posts/\",\n          \"auto-upload\": false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            slot: \"trigger\",\n            size: \"small\",\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Selecciona un archivo\")]),\n            _: 1\n          }), _createVNode(_component_el_button, {\n            style: {\n              \"margin-left\": \"10px\"\n            },\n            size: \"small\",\n            type: \"success\",\n            onClick: _ctx.submitUpload\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Cargar al servidor\")]),\n            _: 1\n          }, 8\n          /* PROPS */\n          , [\"onClick\"]), _createVNode(\"div\", {\n            slot: \"tip\",\n            class: \"el-upload__tip\"\n          }, \"Solo archivos jpg/png con un tamaño menor de 500kb\")]),\n          _: 1\n        }, 512\n        /* NEED_PATCH */\n        );\n      }\n\n      const democomponentExport = {\n        methods: {\n          submitUpload() {\n            this.$refs.upload.submit();\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/upload.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/upload.md?vue&type=template&id=1dbddc07":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/upload.md?vue&type=template&id=1dbddc07 ***!
  \**************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"carga-de-archivos\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#carga-de-archivos\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Carga de archivos\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Carga archivos haciendo clic o arrastrándolos.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"clic-para-cargar-archivos\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#clic-para-cargar-archivos\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Clic para cargar archivos\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Personalice el tipo y texto del botón utilizando la propiedad \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"slot\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Defina las propiedades \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"limit\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-exceed\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para limitar el número máximo de archivos a subir y especifique un método para cuando el límite ha sido excedido.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  multiple\\n  :limit=\\\"3\\\"\\n  :on-exceed=\\\"handleExceed\\\"\\n  :file-list=\\\"fileList\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Clic para subir archivo</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Solo archivos jpg/png con un tamaño menor de 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePreview(file) {\\n        console.log(file);\\n      },\\n      handleExceed(files, fileList) {\\n        this.$message.warning(`El límite es 3, haz seleccionado ${files.length} archivos esta vez, añade hasta ${files.length + fileList.length}`);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"cargar-avatar-de-usuario\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#cargar-avatar-de-usuario\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Cargar avatar de usuario\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilice el \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"em\", null, \"hook\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"before-upload\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para limitar el formato de archivo y su tamaño.\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"avatar-uploader\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :show-file-list=\\\"false\\\"\\n  :on-success=\\\"handleAvatarSuccess\\\"\\n  :before-upload=\\\"beforeAvatarUpload\\\">\\n  <img v-if=\\\"imageUrl\\\" :src=\\\"imageUrl\\\" class=\\\"avatar\\\">\\n  <i v-else class=\\\"el-icon-plus avatar-uploader-icon\\\"></i>\\n</el-upload>\\n\\n<style>\\n  .avatar-uploader .el-upload {\\n    border: 1px dashed #d9d9d9;\\n    border-radius: 6px;\\n    cursor: pointer;\\n    position: relative;\\n    overflow: hidden;\\n  }\\n  .avatar-uploader .el-upload:hover {\\n    border-color: #409EFF;\\n  }\\n  .avatar-uploader-icon {\\n    font-size: 28px;\\n    color: #8c939d;\\n    width: 178px;\\n    height: 178px;\\n    line-height: 178px;\\n    text-align: center;\\n  }\\n  .avatar {\\n    width: 178px;\\n    height: 178px;\\n    display: block;\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        imageUrl: ''\\n      };\\n    },\\n    methods: {\\n      handleAvatarSuccess(res, file) {\\n        this.imageUrl = URL.createObjectURL(file.raw);\\n      },\\n      beforeAvatarUpload(file) {\\n        const isJPG = file.type === 'image/jpeg';\\n        const isLt2M = file.size / 1024 / 1024 < 2;\\n\\n        if (!isJPG) {\\n          this.$message.error('La imagen debe estar en formato JPG!');\\n        }\\n        if (!isLt2M) {\\n          this.$message.error('La imagen excede los 2MB!');\\n        }\\n        return isJPG && isLt2M;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"pared-de-fotografias\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#pared-de-fotografias\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Pared de fotografías\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilice la propiedad \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"list-type\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para cambiar el estilo a un listado de archivos.\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  list-type=\\\"picture-card\\\"\\n  :on-preview=\\\"handlePictureCardPreview\\\"\\n  :on-remove=\\\"handleRemove\\\">\\n  <i class=\\\"el-icon-plus\\\"></i>\\n</el-upload>\\n<el-dialog :visible.sync=\\\"dialogVisible\\\">\\n  <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" alt=\\\"\\\">\\n</el-dialog>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dialogImageUrl: '',\\n        dialogVisible: false\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePictureCardPreview(file) {\\n        this.dialogImageUrl = file.url;\\n        this.dialogVisible = true;\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"custom-file-thumbnail\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#custom-file-thumbnail\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Custom file thumbnail\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"scoped-slot\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to change default thumbnail template.\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  action=\\\"#\\\"\\n  list-type=\\\"picture-card\\\"\\n  :auto-upload=\\\"false\\\">\\n    <i slot=\\\"default\\\" class=\\\"el-icon-plus\\\"></i>\\n    <div slot=\\\"file\\\" slot-scope=\\\"{file}\\\">\\n      <img\\n        class=\\\"el-upload-list__item-thumbnail\\\"\\n        :src=\\\"file.url\\\" alt=\\\"\\\"\\n      >\\n      <span class=\\\"el-upload-list__item-actions\\\">\\n        <span\\n          class=\\\"el-upload-list__item-preview\\\"\\n          @click=\\\"handlePictureCardPreview(file)\\\"\\n        >\\n          <i class=\\\"el-icon-zoom-in\\\"></i>\\n        </span>\\n        <span\\n          v-if=\\\"!disabled\\\"\\n          class=\\\"el-upload-list__item-delete\\\"\\n          @click=\\\"handleDownload(file)\\\"\\n        >\\n          <i class=\\\"el-icon-download\\\"></i>\\n        </span>\\n        <span\\n          v-if=\\\"!disabled\\\"\\n          class=\\\"el-upload-list__item-delete\\\"\\n          @click=\\\"handleRemove(file)\\\"\\n        >\\n          <i class=\\\"el-icon-delete\\\"></i>\\n        </span>\\n      </span>\\n    </div>\\n</el-upload>\\n<el-dialog :visible.sync=\\\"dialogVisible\\\">\\n  <img width=\\\"100%\\\" :src=\\\"dialogImageUrl\\\" alt=\\\"\\\">\\n</el-dialog>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dialogImageUrl: '',\\n        dialogVisible: false,\\n        disabled: false\\n      };\\n    },\\n    methods: {\\n      handleRemove(file) {\\n        console.log(file);\\n      },\\n      handlePictureCardPreview(file) {\\n        this.dialogImageUrl = file.url;\\n        this.dialogVisible = true;\\n      },\\n      handleDownload(file) {\\n        console.log(file);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"lista-de-archivos-con-miniatura\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#lista-de-archivos-con-miniatura\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Lista de archivos con miniatura\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :file-list=\\\"fileList\\\"\\n  list-type=\\\"picture\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Clic para subir archivo</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Solo archivos jpg/png con un tamaño menor de 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}]\\n      };\\n    },\\n    methods: {\\n      handleRemove(file, fileList) {\\n        console.log(file, fileList);\\n      },\\n      handlePreview(file) {\\n        console.log(file);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"control-de-lista-de-archivos\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#control-de-lista-de-archivos\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Control de lista de archivos\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Utilice el \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"em\", null, \"hook\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"on-change\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para controlar la funcionalidad de la lista de archivos subidos.\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-change=\\\"handleChange\\\"\\n  :file-list=\\\"fileList\\\">\\n  <el-button size=\\\"small\\\" type=\\\"primary\\\">Clic para subir archivo</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Solo archivos jpg/png con un tamaño menor de 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        fileList: [{\\n          name: 'food.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }, {\\n          name: 'food2.jpeg',\\n          url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'\\n        }]\\n      };\\n    },\\n    methods: {\\n      handleChange(file, fileList) {\\n        this.fileList = fileList.slice(-3);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"arrastrar-para-cargar-archivo\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#arrastrar-para-cargar-archivo\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Arrastrar para cargar archivo\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Puede arrastrar el archivo dentro de un área en especifico para cargar el archivo.\", -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  drag\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :on-preview=\\\"handlePreview\\\"\\n  :on-remove=\\\"handleRemove\\\"\\n  :file-list=\\\"fileList\\\"\\n  multiple>\\n  <i class=\\\"el-icon-upload\\\"></i>\\n  <div class=\\\"el-upload__text\\\">Suelta tu archivo aquí o <em>haz clic para cargar</em></div>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Solo archivos jpg/png con un tamaño menor de 500kb</div>\\n</el-upload>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"carga-normal\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#carga-normal\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Carga normal\")\n], -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-upload\\n  class=\\\"upload-demo\\\"\\n  ref=\\\"upload\\\"\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  :auto-upload=\\\"false\\\">\\n  <el-button slot=\\\"trigger\\\" size=\\\"small\\\" type=\\\"primary\\\">Selecciona un archivo</el-button>\\n  <el-button style=\\\"margin-left: 10px;\\\" size=\\\"small\\\" type=\\\"success\\\" @click=\\\"submitUpload\\\">Cargar al servidor</el-button>\\n  <div slot=\\\"tip\\\" class=\\\"el-upload__tip\\\">Solo archivos jpg/png con un tamaño menor de 500kb</div>\\n</el-upload>\\n<script>\\n  export default {\\n    methods: {\\n      submitUpload() {\\n        this.$refs.upload.submit();\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"atributos\\\"><a class=\\\"header-anchor\\\" href=\\\"#atributos\\\">¶</a> Atributos</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>action</td><td>obligatorio, URL de la petición</td><td>string</td><td>—</td><td>—</td></tr><tr><td>headers</td><td>cabeceras de la petición</td><td>object</td><td>—</td><td>—</td></tr><tr><td>multiple</td><td>especifica si se permite subir múltiples archivos</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>data</td><td>opciones adicionales de la petición</td><td>object</td><td>—</td><td>—</td></tr><tr><td>name</td><td>nombre clave del archivo</td><td>string</td><td>—</td><td>file</td></tr><tr><td>with-credentials</td><td>especifica si enviará cookies</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-file-list</td><td>especifica si se debe mostrar la lista de archivos cargados</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>drag</td><td>se especifica si se activará el modo arrastrar y soltar</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>accept</td><td>acepta <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept\\\">tipos de archivos</a>, puede no funcionar cuando <code>thumbnail-mode</code> esta en <code>true</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>on-preview</td><td><em>hook</em> lanzado al hacer clic en los archivos subidos</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>on-remove</td><td><em>hook</em> lanzado cuando los archivos son eliminados</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-success</td><td><em>hook</em> lanzado cuando los archivos fueron cargados correctamente</td><td>function(response, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-error</td><td><em>hook</em> lanzado cuando han ocurrido algunos errores</td><td>function(err, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-progress</td><td><em>hook</em> lanzado cuando se produce algún progreso</td><td>function(event, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-change</td><td><em>hook</em> lanzado cuando el archivo seleccionado se carga correctamente o falla</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>before-upload</td><td><em>hook</em> lanzado antes de que el archivo sea cargado. Si este devuelve <code>true</code> o <code>Promise</code> entonces será rechazado, la carga puede ser cancelada</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>before-remove</td><td><em>hook</em> lanzado antes de eliminar un archivo. Los parámetros son el archivo y la lista de archivos. Si se devuelve <code>false</code> o se devuelve una <code>Promise</code> y que luego es rechazada, la eliminación será abortada.</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>thumbnail-mode</td><td>especifica si se mostrará la miniatura</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>file-list</td><td>archivos cargados por defecto, por ejemplo, [{name: &#39;food.jpg&#39;, url: &#39;https://xxx.cdn.com/xxx.jpg&#39;}]</td><td>array</td><td>—</td><td>[]</td></tr><tr><td>list-type</td><td>tipo de lista de archivos</td><td>string</td><td>text/picture/picture-card</td><td>text</td></tr><tr><td>auto-upload</td><td>se especifica si se autocargan archivos</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>http-request</td><td>sobrescribe el comportamiento por defecto de xhr, permitiendo implementar tu propia petición de carga de archivos</td><td>function</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>especifica si se deshabilita la carga de archivos</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>limit</td><td>número máximo de cargas permitidas</td><td>number</td><td>—</td><td>—</td></tr><tr><td>on-exceed</td><td><em>hook</em> lanzado cuando el límite ha sido excedido</td><td>function(files, fileList)</td><td>—</td><td>-</td></tr></tbody></table><h3 id=\\\"slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#slot\\\">¶</a> Slot</h3><table><thead><tr><th>Nombre</th><th>Descripcion</th></tr></thead><tbody><tr><td>trigger</td><td>contenido que desencadena el diálogo de archivo</td></tr><tr><td>tip</td><td>contenido de los tips</td></tr></tbody></table><h3 id=\\\"metodos\\\"><a class=\\\"header-anchor\\\" href=\\\"#metodos\\\">¶</a> Métodos</h3><table><thead><tr><th>Nombre del método</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>clearFiles</td><td>limpia la lista de archivos cargados (este método no esta soportado en el <em>hook</em> <code>before-upload</code>)</td><td>—</td></tr><tr><td>abort</td><td>cancela la petición de carga</td><td>（ file: fileList&#39;s item ）</td></tr><tr><td>submit</td><td>La lista de archivos se sube manualmente</td><td>—</td></tr></tbody></table>\", 6)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_5\n      ]),\n      _: 1\n    }),\n    _hoisted_7,\n    _hoisted_8,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      _: 1\n    }),\n    _hoisted_10,\n    _hoisted_11,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      _: 1\n    }),\n    _hoisted_13,\n    _hoisted_14,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      _: 1\n    }),\n    _hoisted_16,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      _: 1\n    }),\n    _hoisted_18,\n    _hoisted_19,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_20\n      ]),\n      _: 1\n    }),\n    _hoisted_21,\n    _hoisted_22,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_23\n      ]),\n      _: 1\n    }),\n    _hoisted_24,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_25\n      ]),\n      _: 1\n    }),\n    _hoisted_26\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/upload.md?vue&type=template&id=1dbddc07\n");

/***/ })

}]);