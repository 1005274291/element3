(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[123],{

/***/ "./examples/docs/es/form.md":
/*!**********************************!*\
  !*** ./examples/docs/es/form.md ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _form_md_vue_type_template_id_904181b8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form.md?vue&type=template&id=904181b8 */ \"./examples/docs/es/form.md?vue&type=template&id=904181b8\");\n/* harmony import */ var _form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form.md?vue&type=script&lang=js */ \"./examples/docs/es/form.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _form_md_vue_type_template_id_904181b8__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"904181b8\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('904181b8', _form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('904181b8', _form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./form.md?vue&type=template&id=904181b8 */ \"./examples/docs/es/form.md?vue&type=template&id=904181b8\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _form_md_vue_type_template_id_904181b8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form.md?vue&type=template&id=904181b8 */ \"./examples/docs/es/form.md?vue&type=template&id=904181b8\");\n(() => {\n    api.rerender('904181b8', _form_md_vue_type_template_id_904181b8__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/es/form.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL2Zvcm0ubWQ/ZmY3ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBZ0U7QUFDVjtBQUNMO0FBQ2pELHdFQUFNLFVBQVUsNkVBQU07QUFDdEI7QUFDQSxJQUFJLElBQVU7QUFDZCxFQUFFLHdFQUFNO0FBQ1I7QUFDQTtBQUNBLG9DQUFvQyx3RUFBTTtBQUMxQywyQkFBMkIsd0VBQU07QUFDakM7O0FBRUEsb0JBQW9CLHlHQUF5QyxFQUFFO0FBQUE7QUFDL0QsNkJBQTZCLDZFQUFNO0FBQ25DLEdBQUc7O0FBRUg7O0FBRUEsd0VBQU07O0FBRVMsdUkiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VzL2Zvcm0ubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwiLi9mb3JtLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTkwNDE4MWI4XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZm9ybS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9mb3JtLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbnNjcmlwdC5yZW5kZXIgPSByZW5kZXJcbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHNjcmlwdC5fX2htcklkID0gXCI5MDQxODFiOFwiXG4gIGNvbnN0IGFwaSA9IF9fVlVFX0hNUl9SVU5USU1FX19cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIWFwaS5jcmVhdGVSZWNvcmQoJzkwNDE4MWI4Jywgc2NyaXB0KSkge1xuICAgIGFwaS5yZWxvYWQoJzkwNDE4MWI4Jywgc2NyaXB0KVxuICB9XG4gIFxuICBtb2R1bGUuaG90LmFjY2VwdChcIi4vZm9ybS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD05MDQxODFiOFwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCc5MDQxODFiOCcsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VzL2Zvcm0ubWRcIlxuXG5leHBvcnQgZGVmYXVsdCBzY3JpcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/form.md\n");

/***/ }),

/***/ "./examples/docs/es/form.md?vue&type=script&lang=js":
/*!**********************************************************!*\
  !*** ./examples/docs/es/form.md?vue&type=script&lang=js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./form.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/form.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_form_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL2Zvcm0ubWQ/MDc5ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUF5TSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZXMvZm9ybS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi8uLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi9mb3JtLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2Zvcm0ubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./examples/docs/es/form.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/es/form.md?vue&type=template&id=904181b8":
/*!****************************************************************!*\
  !*** ./examples/docs/es/form.md?vue&type=template&id=904181b8 ***!
  \****************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_form_md_vue_type_template_id_904181b8__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./form.md?vue&type=template&id=904181b8 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/form.md?vue&type=template&id=904181b8\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_form_md_vue_type_template_id_904181b8__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL2Zvcm0ubWQ/YTY3OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZXMvZm9ybS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD05MDQxODFiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvdGVtcGxhdGVMb2FkZXIuanM/P3JlZi0tNSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi8uLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi9mb3JtLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTkwNDE4MWI4XCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/form.md?vue&type=template&id=904181b8\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/form.md?vue&type=script&lang=js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/form.md?vue&type=script&lang=js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_option = _resolveComponent(\"el-option\");\n\n        const _component_el_select = _resolveComponent(\"el-select\");\n\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        const _component_el_col = _resolveComponent(\"el-col\");\n\n        const _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n\n        const _component_el_switch = _resolveComponent(\"el-switch\");\n\n        const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n\n        const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n\n        const _component_el_radio = _resolveComponent(\"el-radio\");\n\n        const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_component_el_form, {\n          ref: \"form\",\n          model: _ctx.form,\n          \"label-width\": \"120px\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Activity name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.form.name,\n              \"onUpdate:modelValue\": $event => _ctx.form.name = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity zone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: _ctx.form.region,\n              \"onUpdate:modelValue\": $event => _ctx.form.region = $event,\n              placeholder: \"please select your zone\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"Zone one\",\n                value: \"shanghai\"\n              }), _createVNode(_component_el_option, {\n                label: \"Zone two\",\n                value: \"beijing\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity time\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 11\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n                type: \"date\",\n                placeholder: \"Pick a date\",\n                modelValue: _ctx.form.date1,\n                \"onUpdate:modelValue\": $event => _ctx.form.date1 = $event,\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 1\n            }), _createVNode(_component_el_col, {\n              class: \"line\",\n              span: 2\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"-\")]),\n              _: 1\n            }), _createVNode(_component_el_col, {\n              span: 11\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_time_picker, {\n                placeholder: \"Pick a time\",\n                modelValue: _ctx.form.date2,\n                \"onUpdate:modelValue\": $event => _ctx.form.date2 = $event,\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 1\n            })]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Instant delivery\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_switch, {\n              modelValue: _ctx.form.delivery,\n              \"onUpdate:modelValue\": $event => _ctx.form.delivery = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity type\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_checkbox_group, {\n              modelValue: _ctx.form.type,\n              \"onUpdate:modelValue\": $event => _ctx.form.type = $event\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n                label: \"Online activities\",\n                name: \"type\"\n              }), _createVNode(_component_el_checkbox, {\n                label: \"Promotion activities\",\n                name: \"type\"\n              }), _createVNode(_component_el_checkbox, {\n                label: \"Offline activities\",\n                name: \"type\"\n              }), _createVNode(_component_el_checkbox, {\n                label: \"Simple brand exposure\",\n                name: \"type\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Resources\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n              modelValue: _ctx.form.resource,\n              \"onUpdate:modelValue\": $event => _ctx.form.resource = $event\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_radio, {\n                label: \"Sponsor\"\n              }), _createVNode(_component_el_radio, {\n                label: \"Venue\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity form\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              type: \"textarea\",\n              modelValue: _ctx.form.desc,\n              \"onUpdate:modelValue\": $event => _ctx.form.desc = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: _ctx.onSubmit\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Create\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, null, {\n              default: _withCtx(() => [_createTextVNode(\"Cancel\")]),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"model\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            form: {\n              name: '',\n              region: '',\n              date1: '',\n              date2: '',\n              delivery: false,\n              type: [],\n              resource: '',\n              desc: ''\n            }\n          };\n        },\n\n        methods: {\n          onSubmit() {\n            console.log('submit!');\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_option = _resolveComponent(\"el-option\");\n\n        const _component_el_select = _resolveComponent(\"el-select\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_component_el_form, {\n          inline: true,\n          model: _ctx.formInline,\n          class: \"demo-form-inline\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Approved by\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.formInline.user,\n              \"onUpdate:modelValue\": $event => _ctx.formInline.user = $event,\n              placeholder: \"Approved by\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity zone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: _ctx.formInline.region,\n              \"onUpdate:modelValue\": $event => _ctx.formInline.region = $event,\n              placeholder: \"Activity zone\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"Zone one\",\n                value: \"shanghai\"\n              }), _createVNode(_component_el_option, {\n                label: \"Zone two\",\n                value: \"beijing\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: _ctx.onSubmit\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Query\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"model\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            formInline: {\n              user: '',\n              region: ''\n            }\n          };\n        },\n\n        methods: {\n          onSubmit() {\n            console.log('submit!');\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n\n        const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_radio_group, {\n          modelValue: _ctx.labelPosition,\n          \"onUpdate:modelValue\": $event => _ctx.labelPosition = $event,\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n            label: \"left\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Left\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"right\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Right\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"top\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Top\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(\"div\", {\n          style: {\n            \"margin\": \"20px\"\n          }\n        }), _createVNode(_component_el_form, {\n          \"label-position\": _ctx.labelPosition,\n          \"label-width\": \"100px\",\n          model: _ctx.formLabelAlign\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.formLabelAlign.name,\n              \"onUpdate:modelValue\": $event => _ctx.formLabelAlign.name = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity zone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.formLabelAlign.region,\n              \"onUpdate:modelValue\": $event => _ctx.formLabelAlign.region = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity form\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.formLabelAlign.type,\n              \"onUpdate:modelValue\": $event => _ctx.formLabelAlign.type = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"label-position\", \"model\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            labelPosition: 'right',\n            formLabelAlign: {\n              name: '',\n              region: '',\n              type: ''\n            }\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_option = _resolveComponent(\"el-option\");\n\n        const _component_el_select = _resolveComponent(\"el-select\");\n\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        const _component_el_col = _resolveComponent(\"el-col\");\n\n        const _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n\n        const _component_el_switch = _resolveComponent(\"el-switch\");\n\n        const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n\n        const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n\n        const _component_el_radio = _resolveComponent(\"el-radio\");\n\n        const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_component_el_form, {\n          model: _ctx.ruleForm,\n          rules: _ctx.rules,\n          ref: \"ruleForm\",\n          \"label-width\": \"120px\",\n          class: \"demo-ruleForm\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Activity name\",\n            prop: \"name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.ruleForm.name,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.name = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity zone\",\n            prop: \"region\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: _ctx.ruleForm.region,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.region = $event,\n              placeholder: \"Activity zone\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"Zone one\",\n                value: \"shanghai\"\n              }), _createVNode(_component_el_option, {\n                label: \"Zone two\",\n                value: \"beijing\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity time\",\n            required: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 11\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                prop: \"date1\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n                  type: \"date\",\n                  placeholder: \"Pick a date\",\n                  modelValue: _ctx.ruleForm.date1,\n                  \"onUpdate:modelValue\": $event => _ctx.ruleForm.date1 = $event,\n                  style: {\n                    \"width\": \"100%\"\n                  }\n                }, null, 8\n                /* PROPS */\n                , [\"modelValue\", \"onUpdate:modelValue\"])]),\n                _: 1\n              })]),\n              _: 1\n            }), _createVNode(_component_el_col, {\n              class: \"line\",\n              span: 2\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"-\")]),\n              _: 1\n            }), _createVNode(_component_el_col, {\n              span: 11\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                prop: \"date2\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_time_picker, {\n                  placeholder: \"Pick a time\",\n                  modelValue: _ctx.ruleForm.date2,\n                  \"onUpdate:modelValue\": $event => _ctx.ruleForm.date2 = $event,\n                  style: {\n                    \"width\": \"100%\"\n                  }\n                }, null, 8\n                /* PROPS */\n                , [\"modelValue\", \"onUpdate:modelValue\"])]),\n                _: 1\n              })]),\n              _: 1\n            })]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Instant delivery\",\n            prop: \"delivery\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_switch, {\n              modelValue: _ctx.ruleForm.delivery,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.delivery = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity type\",\n            prop: \"type\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_checkbox_group, {\n              modelValue: _ctx.ruleForm.type,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.type = $event\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n                label: \"Online activities\",\n                name: \"type\"\n              }), _createVNode(_component_el_checkbox, {\n                label: \"Promotion activities\",\n                name: \"type\"\n              }), _createVNode(_component_el_checkbox, {\n                label: \"Offline activities\",\n                name: \"type\"\n              }), _createVNode(_component_el_checkbox, {\n                label: \"Simple brand exposure\",\n                name: \"type\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Resources\",\n            prop: \"resource\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n              modelValue: _ctx.ruleForm.resource,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.resource = $event\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_radio, {\n                label: \"Sponsorship\"\n              }), _createVNode(_component_el_radio, {\n                label: \"Venue\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity form\",\n            prop: \"desc\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              type: \"textarea\",\n              modelValue: _ctx.ruleForm.desc,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.desc = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: $event => _ctx.submitForm('ruleForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Create\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              onClick: $event => _ctx.resetForm('ruleForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Reset\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"model\", \"rules\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            ruleForm: {\n              name: '',\n              region: '',\n              date1: '',\n              date2: '',\n              delivery: false,\n              type: [],\n              resource: '',\n              desc: ''\n            },\n            rules: {\n              name: [{\n                required: true,\n                message: 'Please input Activity name',\n                trigger: 'blur'\n              }, {\n                min: 3,\n                max: 5,\n                message: 'Length should be 3 to 5',\n                trigger: 'blur'\n              }],\n              region: [{\n                required: true,\n                message: 'Please select Activity zone',\n                trigger: 'change'\n              }],\n              date1: [{\n                type: 'date',\n                required: true,\n                message: 'Please pick a date',\n                trigger: 'change'\n              }],\n              date2: [{\n                type: 'date',\n                required: true,\n                message: 'Please pick a time',\n                trigger: 'change'\n              }],\n              type: [{\n                type: 'array',\n                required: true,\n                message: 'Please select at least one activity type',\n                trigger: 'change'\n              }],\n              resource: [{\n                required: true,\n                message: 'Please select activity resource',\n                trigger: 'change'\n              }],\n              desc: [{\n                required: true,\n                message: 'Please input activity form',\n                trigger: 'blur'\n              }]\n            }\n          };\n        },\n\n        methods: {\n          submitForm(formName) {\n            this.$refs[formName].validate(valid => {\n              if (valid) {\n                alert('submit!');\n              } else {\n                console.log('error submit!!');\n                return false;\n              }\n            });\n          },\n\n          resetForm(formName) {\n            this.$refs[formName].resetFields();\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_component_el_form, {\n          model: _ctx.ruleForm,\n          \"status-icon\": \"\",\n          rules: _ctx.rules,\n          ref: \"ruleForm\",\n          \"label-width\": \"120px\",\n          class: \"demo-ruleForm\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Password\",\n            prop: \"pass\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              type: \"password\",\n              modelValue: _ctx.ruleForm.pass,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.pass = $event,\n              autocomplete: \"off\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Confirm\",\n            prop: \"checkPass\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              type: \"password\",\n              modelValue: _ctx.ruleForm.checkPass,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.checkPass = $event,\n              autocomplete: \"off\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Age\",\n            prop: \"age\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.ruleForm.age,\n              \"onUpdate:modelValue\": $event => _ctx.ruleForm.age = $event,\n              modelModifiers: {\n                number: true\n              }\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: $event => _ctx.submitForm('ruleForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Submit\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              onClick: $event => _ctx.resetForm('ruleForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Reset\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"model\", \"rules\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          var checkAge = (rule, value, callback) => {\n            if (!value) {\n              return callback(new Error('Please input the age'));\n            }\n\n            setTimeout(() => {\n              if (!Number.isInteger(value)) {\n                callback(new Error('Please input digits'));\n              } else {\n                if (value < 18) {\n                  callback(new Error('Age must be greater than 18'));\n                } else {\n                  callback();\n                }\n              }\n            }, 1000);\n          };\n\n          var validatePass = (rule, value, callback) => {\n            if (value === '') {\n              callback(new Error('Please input the password'));\n            } else {\n              if (this.ruleForm.checkPass !== '') {\n                this.$refs.ruleForm.validateField('checkPass');\n              }\n\n              callback();\n            }\n          };\n\n          var validatePass2 = (rule, value, callback) => {\n            if (value === '') {\n              callback(new Error('Please input the password again'));\n            } else if (value !== this.ruleForm.pass) {\n              callback(new Error('Two inputs don\\'t match!'));\n            } else {\n              callback();\n            }\n          };\n\n          return {\n            ruleForm: {\n              pass: '',\n              checkPass: '',\n              age: ''\n            },\n            rules: {\n              pass: [{\n                validator: validatePass,\n                trigger: 'blur'\n              }],\n              checkPass: [{\n                validator: validatePass2,\n                trigger: 'blur'\n              }],\n              age: [{\n                validator: checkAge,\n                trigger: 'blur'\n              }]\n            }\n          };\n        },\n\n        methods: {\n          submitForm(formName) {\n            this.$refs[formName].validate(valid => {\n              if (valid) {\n                alert('submit!');\n              } else {\n                console.log('error submit!!');\n                return false;\n              }\n            });\n          },\n\n          resetForm(formName) {\n            this.$refs[formName].resetFields();\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        createTextVNode: _createTextVNode,\n        withModifiers: _withModifiers\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_component_el_form, {\n          model: _ctx.dynamicValidateForm,\n          ref: \"dynamicValidateForm\",\n          \"label-width\": \"120px\",\n          class: \"demo-dynamic\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            prop: \"email\",\n            label: \"Email\",\n            rules: [{\n              required: true,\n              message: 'Please input email address',\n              trigger: 'blur'\n            }, {\n              type: 'email',\n              message: 'Please input correct email address',\n              trigger: ['blur', 'change']\n            }]\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.dynamicValidateForm.email,\n              \"onUpdate:modelValue\": $event => _ctx.dynamicValidateForm.email = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.dynamicValidateForm.domains, (domain, index) => {\n            return _openBlock(), _createBlock(_component_el_form_item, {\n              label: 'Domain' + index,\n              key: domain.key,\n              prop: 'domains.' + index + '.value',\n              rules: {\n                required: true,\n                message: 'domain can not be null',\n                trigger: 'blur'\n              }\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: domain.value,\n                \"onUpdate:modelValue\": $event => domain.value = $event\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_button, {\n                onClick: _withModifiers($event => _ctx.removeDomain(domain), [\"prevent\"])\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"Delete\")]),\n                _: 1\n              }, 8\n              /* PROPS */\n              , [\"onClick\"])]),\n              _: 2\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"label\", \"prop\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          )), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: $event => _ctx.submitForm('dynamicValidateForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Submit\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              onClick: _ctx.addDomain\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"New domain\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              onClick: $event => _ctx.resetForm('dynamicValidateForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Reset\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"model\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            dynamicValidateForm: {\n              domains: [{\n                key: 1,\n                value: ''\n              }],\n              email: ''\n            }\n          };\n        },\n\n        methods: {\n          submitForm(formName) {\n            this.$refs[formName].validate(valid => {\n              if (valid) {\n                alert('submit!');\n              } else {\n                console.log('error submit!!');\n                return false;\n              }\n            });\n          },\n\n          resetForm(formName) {\n            this.$refs[formName].resetFields();\n          },\n\n          removeDomain(item) {\n            var index = this.dynamicValidateForm.domains.indexOf(item);\n\n            if (index !== -1) {\n              this.dynamicValidateForm.domains.splice(index, 1);\n            }\n          },\n\n          addDomain() {\n            this.dynamicValidateForm.domains.push({\n              key: Date.now(),\n              value: ''\n            });\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_component_el_form, {\n          model: _ctx.numberValidateForm,\n          ref: \"numberValidateForm\",\n          \"label-width\": \"100px\",\n          class: \"demo-ruleForm\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"age\",\n            prop: \"age\",\n            rules: [{\n              required: true,\n              message: 'age is required'\n            }, {\n              type: 'number',\n              message: 'age must be a number'\n            }]\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              type: \"age\",\n              modelValue: _ctx.numberValidateForm.age,\n              \"onUpdate:modelValue\": $event => _ctx.numberValidateForm.age = $event,\n              modelModifiers: {\n                number: true\n              },\n              autocomplete: \"off\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: $event => _ctx.submitForm('numberValidateForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Submit\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              onClick: $event => _ctx.resetForm('numberValidateForm')\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Reset\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"model\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            numberValidateForm: {\n              age: ''\n            }\n          };\n        },\n\n        methods: {\n          submitForm(formName) {\n            this.$refs[formName].validate(valid => {\n              if (valid) {\n                alert('submit!');\n              } else {\n                console.log('error submit!!');\n                return false;\n              }\n            });\n          },\n\n          resetForm(formName) {\n            this.$refs[formName].resetFields();\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo7\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createTextVNode: _createTextVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_input = _resolveComponent(\"el-input\");\n\n        const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n        const _component_el_option = _resolveComponent(\"el-option\");\n\n        const _component_el_select = _resolveComponent(\"el-select\");\n\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        const _component_el_col = _resolveComponent(\"el-col\");\n\n        const _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n\n        const _component_el_checkbox_button = _resolveComponent(\"el-checkbox-button\");\n\n        const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n\n        const _component_el_radio = _resolveComponent(\"el-radio\");\n\n        const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_form = _resolveComponent(\"el-form\");\n\n        return _openBlock(), _createBlock(_component_el_form, {\n          ref: \"form\",\n          model: _ctx.sizeForm,\n          \"label-width\": \"120px\",\n          size: \"mini\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"Activity name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.sizeForm.name,\n              \"onUpdate:modelValue\": $event => _ctx.sizeForm.name = $event\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity zone\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: _ctx.sizeForm.region,\n              \"onUpdate:modelValue\": $event => _ctx.sizeForm.region = $event,\n              placeholder: \"please select your zone\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                label: \"Zone one\",\n                value: \"shanghai\"\n              }), _createVNode(_component_el_option, {\n                label: \"Zone two\",\n                value: \"beijing\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity time\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_col, {\n              span: 11\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n                type: \"date\",\n                placeholder: \"Pick a date\",\n                modelValue: _ctx.sizeForm.date1,\n                \"onUpdate:modelValue\": $event => _ctx.sizeForm.date1 = $event,\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 1\n            }), _createVNode(_component_el_col, {\n              class: \"line\",\n              span: 2\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"-\")]),\n              _: 1\n            }), _createVNode(_component_el_col, {\n              span: 11\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_time_picker, {\n                placeholder: \"Pick a time\",\n                modelValue: _ctx.sizeForm.date2,\n                \"onUpdate:modelValue\": $event => _ctx.sizeForm.date2 = $event,\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\", \"onUpdate:modelValue\"])]),\n              _: 1\n            })]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Activity type\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_checkbox_group, {\n              modelValue: _ctx.sizeForm.type,\n              \"onUpdate:modelValue\": $event => _ctx.sizeForm.type = $event\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_checkbox_button, {\n                label: \"Online activities\",\n                name: \"type\"\n              }), _createVNode(_component_el_checkbox_button, {\n                label: \"Promotion activities\",\n                name: \"type\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            label: \"Resources\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n              modelValue: _ctx.sizeForm.resource,\n              \"onUpdate:modelValue\": $event => _ctx.sizeForm.resource = $event,\n              size: \"medium\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_radio, {\n                border: \"\",\n                label: \"Sponsor\"\n              }), _createVNode(_component_el_radio, {\n                border: \"\",\n                label: \"Venue\"\n              })]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_el_form_item, {\n            size: \"large\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: _ctx.onSubmit\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Create\")]),\n              _: 1\n            }, 8\n            /* PROPS */\n            , [\"onClick\"]), _createVNode(_component_el_button, null, {\n              default: _withCtx(() => [_createTextVNode(\"Cancel\")]),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"model\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            sizeForm: {\n              name: '',\n              region: '',\n              date1: '',\n              date2: '',\n              delivery: false,\n              type: [],\n              resource: '',\n              desc: ''\n            }\n          };\n        },\n\n        methods: {\n          onSubmit() {\n            console.log('submit!');\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL2Zvcm0ubWQ/NTgzMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrMUJNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNlO0FBQ2IsTUFBSSxFQUFFLGVBRE87QUFFYixZQUFVLEVBQUU7QUFDVixxQkFBa0IsWUFBVztBQUVuQyxZQUFNO0FBQUUsd0JBQWdCLEVBQUUsaUJBQXBCO0FBQXVDLG1CQUFXLEVBQUUsWUFBcEQ7QUFBa0UsZUFBTyxFQUFFLFFBQTNFO0FBQXFGLHVCQUFlLEVBQUUsZ0JBQXRHO0FBQXdILGlCQUFTLEVBQUUsVUFBbkk7QUFBK0ksbUJBQVcsRUFBRTtBQUE1SixVQUE2SyxnQ0FBbkw7O0FBRUosZUFBUyxNQUFULENBQWlCLElBQWpCLEVBQXVCLE1BQXZCLEVBQStCO0FBQzdCLGNBQU0sbUJBQWtCLEdBQUksaUJBQWlCLENBQUMsVUFBRCxDQUE3Qzs7QUFDQSxjQUFNLHVCQUFzQixHQUFJLGlCQUFpQixDQUFDLGNBQUQsQ0FBakQ7O0FBQ0EsY0FBTSxvQkFBbUIsR0FBSSxpQkFBaUIsQ0FBQyxXQUFELENBQTlDOztBQUNBLGNBQU0sb0JBQW1CLEdBQUksaUJBQWlCLENBQUMsV0FBRCxDQUE5Qzs7QUFDQSxjQUFNLHlCQUF3QixHQUFJLGlCQUFpQixDQUFDLGdCQUFELENBQW5EOztBQUNBLGNBQU0saUJBQWdCLEdBQUksaUJBQWlCLENBQUMsUUFBRCxDQUEzQzs7QUFDQSxjQUFNLHlCQUF3QixHQUFJLGlCQUFpQixDQUFDLGdCQUFELENBQW5EOztBQUNBLGNBQU0sb0JBQW1CLEdBQUksaUJBQWlCLENBQUMsV0FBRCxDQUE5Qzs7QUFDQSxjQUFNLHNCQUFxQixHQUFJLGlCQUFpQixDQUFDLGFBQUQsQ0FBaEQ7O0FBQ0EsY0FBTSw0QkFBMkIsR0FBSSxpQkFBaUIsQ0FBQyxtQkFBRCxDQUF0RDs7QUFDQSxjQUFNLG1CQUFrQixHQUFJLGlCQUFpQixDQUFDLFVBQUQsQ0FBN0M7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ZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/IS4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vZXhhbXBsZXMvZG9jcy9lcy9mb3JtLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgPHRlbXBsYXRlPlxuICAgICAgPHNlY3Rpb24gY2xhc3M9XCJjb250ZW50IGVsZW1lbnQtZG9jXCI+XG4gICAgICAgIDxoMiBpZD1cImZvcm1cIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2Zvcm1cIj7CtjwvYT4gRm9ybTwvaDI+XG48cD5Gb3JtIGNvbnNpc3RlIGVuIDxjb2RlPmlucHV0PC9jb2RlPiwgPGNvZGU+cmFkaW88L2NvZGU+LCA8Y29kZT5zZWxlY3Q8L2NvZGU+LCA8Y29kZT5jaGVja2JveDwvY29kZT4sIGV0Y8OpdGVyYS4gQ29uIGVsIGZvcm11bGFyaW8sIHVzdGVkIHB1ZWRlIHJlY29waWxhciwgdmVyaWZpY2FyIHkgZW52aWFyIGRhdG9zLjwvcD5cbjxoMyBpZD1cImZvcm0tYmFzaWNvXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNmb3JtLWJhc2ljb1wiPsK2PC9hPiBGb3JtIGLDoXNpY288L2gzPlxuPHA+SW5jbHV5ZSB0b2RvIHRpcG8gZGUgZW50cmFkYXMsIHRhbGVzIGNvbW8gPGNvZGU+aW5wdXQ8L2NvZGU+LCA8Y29kZT5zZWxlY3Q8L2NvZGU+LCA8Y29kZT5yYWRpbzwvY29kZT4geSA8Y29kZT5jaGVja2JveDwvY29kZT4uPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+RW4gY2FkYSBjb21wb25lbnRlIDxjb2RlPmZvcm08L2NvZGU+LCBuZWNlc2l0YSB1biBjYW1wbyA8Y29kZT5mb3JtLWl0ZW08L2NvZGU+IHBhcmEgcXVlIHNlYSBlbCBjb250ZW5lZG9yIGRlbCDDrXRlbS48L3A+XG48L2Rpdj5cbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzAgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDtlbC1mb3JtIHJlZj0mcXVvdDtmb3JtJnF1b3Q7IDptb2RlbD0mcXVvdDtmb3JtJnF1b3Q7IGxhYmVsLXdpZHRoPSZxdW90OzEyMHB4JnF1b3Q7Jmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FjdGl2aXR5IG5hbWUmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHYtbW9kZWw9JnF1b3Q7Zm9ybS5uYW1lJnF1b3Q7Jmd0OyZsdDsvZWwtaW5wdXQmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FjdGl2aXR5IHpvbmUmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLXNlbGVjdCB2LW1vZGVsPSZxdW90O2Zvcm0ucmVnaW9uJnF1b3Q7IHBsYWNlaG9sZGVyPSZxdW90O3BsZWFzZSBzZWxlY3QgeW91ciB6b25lJnF1b3Q7Jmd0O1xuICAgICAgJmx0O2VsLW9wdGlvbiBsYWJlbD0mcXVvdDtab25lIG9uZSZxdW90OyB2YWx1ZT0mcXVvdDtzaGFuZ2hhaSZxdW90OyZndDsmbHQ7L2VsLW9wdGlvbiZndDtcbiAgICAgICZsdDtlbC1vcHRpb24gbGFiZWw9JnF1b3Q7Wm9uZSB0d28mcXVvdDsgdmFsdWU9JnF1b3Q7YmVpamluZyZxdW90OyZndDsmbHQ7L2VsLW9wdGlvbiZndDtcbiAgICAmbHQ7L2VsLXNlbGVjdCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7QWN0aXZpdHkgdGltZSZxdW90OyZndDtcbiAgICAmbHQ7ZWwtY29sIDpzcGFuPSZxdW90OzExJnF1b3Q7Jmd0O1xuICAgICAgJmx0O2VsLWRhdGUtcGlja2VyIHR5cGU9JnF1b3Q7ZGF0ZSZxdW90OyBwbGFjZWhvbGRlcj0mcXVvdDtQaWNrIGEgZGF0ZSZxdW90OyB2LW1vZGVsPSZxdW90O2Zvcm0uZGF0ZTEmcXVvdDsgc3R5bGU9JnF1b3Q7d2lkdGg6IDEwMCU7JnF1b3Q7Jmd0OyZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICAgJmx0Oy9lbC1jb2wmZ3Q7XG4gICAgJmx0O2VsLWNvbCBjbGFzcz0mcXVvdDtsaW5lJnF1b3Q7IDpzcGFuPSZxdW90OzImcXVvdDsmZ3Q7LSZsdDsvZWwtY29sJmd0O1xuICAgICZsdDtlbC1jb2wgOnNwYW49JnF1b3Q7MTEmcXVvdDsmZ3Q7XG4gICAgICAmbHQ7ZWwtdGltZS1waWNrZXIgcGxhY2Vob2xkZXI9JnF1b3Q7UGljayBhIHRpbWUmcXVvdDsgdi1tb2RlbD0mcXVvdDtmb3JtLmRhdGUyJnF1b3Q7IHN0eWxlPSZxdW90O3dpZHRoOiAxMDAlOyZxdW90OyZndDsmbHQ7L2VsLXRpbWUtcGlja2VyJmd0O1xuICAgICZsdDsvZWwtY29sJmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtJbnN0YW50IGRlbGl2ZXJ5JnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1zd2l0Y2ggdi1tb2RlbD0mcXVvdDtmb3JtLmRlbGl2ZXJ5JnF1b3Q7Jmd0OyZsdDsvZWwtc3dpdGNoJmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtBY3Rpdml0eSB0eXBlJnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1jaGVja2JveC1ncm91cCB2LW1vZGVsPSZxdW90O2Zvcm0udHlwZSZxdW90OyZndDtcbiAgICAgICZsdDtlbC1jaGVja2JveCBsYWJlbD0mcXVvdDtPbmxpbmUgYWN0aXZpdGllcyZxdW90OyBuYW1lPSZxdW90O3R5cGUmcXVvdDsmZ3Q7Jmx0Oy9lbC1jaGVja2JveCZndDtcbiAgICAgICZsdDtlbC1jaGVja2JveCBsYWJlbD0mcXVvdDtQcm9tb3Rpb24gYWN0aXZpdGllcyZxdW90OyBuYW1lPSZxdW90O3R5cGUmcXVvdDsmZ3Q7Jmx0Oy9lbC1jaGVja2JveCZndDtcbiAgICAgICZsdDtlbC1jaGVja2JveCBsYWJlbD0mcXVvdDtPZmZsaW5lIGFjdGl2aXRpZXMmcXVvdDsgbmFtZT0mcXVvdDt0eXBlJnF1b3Q7Jmd0OyZsdDsvZWwtY2hlY2tib3gmZ3Q7XG4gICAgICAmbHQ7ZWwtY2hlY2tib3ggbGFiZWw9JnF1b3Q7U2ltcGxlIGJyYW5kIGV4cG9zdXJlJnF1b3Q7IG5hbWU9JnF1b3Q7dHlwZSZxdW90OyZndDsmbHQ7L2VsLWNoZWNrYm94Jmd0O1xuICAgICZsdDsvZWwtY2hlY2tib3gtZ3JvdXAmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O1Jlc291cmNlcyZxdW90OyZndDtcbiAgICAmbHQ7ZWwtcmFkaW8tZ3JvdXAgdi1tb2RlbD0mcXVvdDtmb3JtLnJlc291cmNlJnF1b3Q7Jmd0O1xuICAgICAgJmx0O2VsLXJhZGlvIGxhYmVsPSZxdW90O1Nwb25zb3ImcXVvdDsmZ3Q7Jmx0Oy9lbC1yYWRpbyZndDtcbiAgICAgICZsdDtlbC1yYWRpbyBsYWJlbD0mcXVvdDtWZW51ZSZxdW90OyZndDsmbHQ7L2VsLXJhZGlvJmd0O1xuICAgICZsdDsvZWwtcmFkaW8tZ3JvdXAmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FjdGl2aXR5IGZvcm0mcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHR5cGU9JnF1b3Q7dGV4dGFyZWEmcXVvdDsgdi1tb2RlbD0mcXVvdDtmb3JtLmRlc2MmcXVvdDsmZ3Q7Jmx0Oy9lbC1pbnB1dCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0mZ3Q7XG4gICAgJmx0O2VsLWJ1dHRvbiB0eXBlPSZxdW90O3ByaW1hcnkmcXVvdDsgQGNsaWNrPSZxdW90O29uU3VibWl0JnF1b3Q7Jmd0O0NyZWF0ZSZsdDsvZWwtYnV0dG9uJmd0O1xuICAgICZsdDtlbC1idXR0b24mZ3Q7Q2FuY2VsJmx0Oy9lbC1idXR0b24mZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuJmx0Oy9lbC1mb3JtJmd0O1xuJmx0O3NjcmlwdCZndDtcbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmb3JtOiB7XG4gICAgICAgICAgbmFtZTogJycsXG4gICAgICAgICAgcmVnaW9uOiAnJyxcbiAgICAgICAgICBkYXRlMTogJycsXG4gICAgICAgICAgZGF0ZTI6ICcnLFxuICAgICAgICAgIGRlbGl2ZXJ5OiBmYWxzZSxcbiAgICAgICAgICB0eXBlOiBbXSxcbiAgICAgICAgICByZXNvdXJjZTogJycsXG4gICAgICAgICAgZGVzYzogJydcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgb25TdWJtaXQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzdWJtaXQhJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48ZGl2IGNsYXNzPVwidGlwXCI+XG48cD48YSBocmVmPVwiaHR0cHM6Ly93d3cudzMub3JnL01hcmtVcC9odG1sLXNwZWMvaHRtbC1zcGVjXzguaHRtbCNTRUM4LjJcIj5XM0M8L2E+IHJlZ2xhbWVudGEgcXVlPC9wPlxuPGJsb2NrcXVvdGU+XG48cD48aT5DdWFuZG8gc8OzbG8gaGF5IHVuIGNhbXBvIGRlIGVudHJhZGEgZGUgdGV4dG8gZGUgdW5hIHNvbGEgbMOtbmVhIGVuIHVuIGZvcm11bGFyaW8sIGVsIGFnZW50ZSB1c3VhcmlvIGRlYmUgYWNlcHRhciA8Yj5FbnRlcjwvYj4gZW4gZXNlIGNhbXBvIGNvbW8gdW5hIHNvbGljaXR1ZCBwYXJhIGVudmlhciBlbCBmb3JtdWxhcmlvLjwvaT48L3A+XG48L2Jsb2NrcXVvdGU+XG48cD5QYXJhIHByZXZlbmlyIGVzdGUgY29tcG9ydGFtaWVudG8sIHB1ZWRlIGFncmVnYXIgPGNvZGU+QHN1Ym1pdC5uYXRpdmUucHJldmVudDwvY29kZT4gb24gPGNvZGU+Jmx0O2VsLWZvcm0mZ3Q7PC9jb2RlPi48L3A+XG48L2Rpdj5cbjxoMyBpZD1cImZvcm11bGFyaW8taW5saW5lXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNmb3JtdWxhcmlvLWlubGluZVwiPsK2PC9hPiBGb3JtdWxhcmlvIGlubGluZTwvaDM+XG48cD5DdWFuZG8gZWwgZXNwYWNpbyB2ZXJ0aWNhbCBlcyBsaW1pdGFkbyB5IGxhIGZvcm1hIGVzIHJlbGF0aXZhbWVudGUgc2ltcGxlLCBwdWVkZSBwb25lcmxvIGVuIHVuYSB1bmljYSBsw61uZWEuPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+RXN0YWJsZXpjYSBlbCBhdHJpYnV0byA8Y29kZT5pbmxpbmU8L2NvZGU+IGNvbW8gPGNvZGU+dHJ1ZTwvY29kZT4geSBlbCBmb3JtdWxhcmlvIHNlcmEgaW5saW5lLjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMSAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWZvcm0gOmlubGluZT0mcXVvdDt0cnVlJnF1b3Q7IDptb2RlbD0mcXVvdDtmb3JtSW5saW5lJnF1b3Q7IGNsYXNzPSZxdW90O2RlbW8tZm9ybS1pbmxpbmUmcXVvdDsmZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7QXBwcm92ZWQgYnkmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHYtbW9kZWw9JnF1b3Q7Zm9ybUlubGluZS51c2VyJnF1b3Q7IHBsYWNlaG9sZGVyPSZxdW90O0FwcHJvdmVkIGJ5JnF1b3Q7Jmd0OyZsdDsvZWwtaW5wdXQmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FjdGl2aXR5IHpvbmUmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLXNlbGVjdCB2LW1vZGVsPSZxdW90O2Zvcm1JbmxpbmUucmVnaW9uJnF1b3Q7IHBsYWNlaG9sZGVyPSZxdW90O0FjdGl2aXR5IHpvbmUmcXVvdDsmZ3Q7XG4gICAgICAmbHQ7ZWwtb3B0aW9uIGxhYmVsPSZxdW90O1pvbmUgb25lJnF1b3Q7IHZhbHVlPSZxdW90O3NoYW5naGFpJnF1b3Q7Jmd0OyZsdDsvZWwtb3B0aW9uJmd0O1xuICAgICAgJmx0O2VsLW9wdGlvbiBsYWJlbD0mcXVvdDtab25lIHR3byZxdW90OyB2YWx1ZT0mcXVvdDtiZWlqaW5nJnF1b3Q7Jmd0OyZsdDsvZWwtb3B0aW9uJmd0O1xuICAgICZsdDsvZWwtc2VsZWN0Jmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSZndDtcbiAgICAmbHQ7ZWwtYnV0dG9uIHR5cGU9JnF1b3Q7cHJpbWFyeSZxdW90OyBAY2xpY2s9JnF1b3Q7b25TdWJtaXQmcXVvdDsmZ3Q7UXVlcnkmbHQ7L2VsLWJ1dHRvbiZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4mbHQ7L2VsLWZvcm0mZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZvcm1JbmxpbmU6IHtcbiAgICAgICAgICB1c2VyOiAnJyxcbiAgICAgICAgICByZWdpb246ICcnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIG9uU3VibWl0KCkge1xuICAgICAgICBjb25zb2xlLmxvZygnc3VibWl0IScpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiYWxpbmVhbWllbnRvXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNhbGluZWFtaWVudG9cIj7CtjwvYT4gQWxpbmVhbWllbnRvPC9oMz5cbjxwPkRlcGVuZGllbmRvIGRlIHN1IGRpc2XDsW8sIGhheSB2YXJpYXMgbWFuZXJhcyBkaWZlcmVudGVzIGRlIGFsaW5lYXIgZWwgZWxlbWVudG8gZGUgbGEgZXRpcXVldGEuPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+RWwgYXRyaWJ1dG8gPGNvZGU+bGFiZWwtcG9zaXRpb248L2NvZGU+IGRlY2lkZSBjw7NtbyBzZSBhbGluZWFuIGxhcyBldGlxdWV0YXMsIHB1ZWRlIGVzdGFyIDxjb2RlPnRvcDwvY29kZT4gbyA8Y29kZT5sZWZ0PC9jb2RlPi4gQ3VhbmRvIHNlIGVzdGFibGVjZSBlbiA8Y29kZT50b3A8L2NvZGU+LCBsYXMgZXRpcXVldGFzIHNlIGNvbG9jYXLDoW4gZW4gbGEgcGFydGUgc3VwZXJpb3IgZGVsIGNhbXBvIGRlIGZvcm11bGFyaW8uPC9wPlxuPC9kaXY+XG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW8yIC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtcmFkaW8tZ3JvdXAgdi1tb2RlbD0mcXVvdDtsYWJlbFBvc2l0aW9uJnF1b3Q7IHNpemU9JnF1b3Q7c21hbGwmcXVvdDsmZ3Q7XG4gICZsdDtlbC1yYWRpby1idXR0b24gbGFiZWw9JnF1b3Q7bGVmdCZxdW90OyZndDtMZWZ0Jmx0Oy9lbC1yYWRpby1idXR0b24mZ3Q7XG4gICZsdDtlbC1yYWRpby1idXR0b24gbGFiZWw9JnF1b3Q7cmlnaHQmcXVvdDsmZ3Q7UmlnaHQmbHQ7L2VsLXJhZGlvLWJ1dHRvbiZndDtcbiAgJmx0O2VsLXJhZGlvLWJ1dHRvbiBsYWJlbD0mcXVvdDt0b3AmcXVvdDsmZ3Q7VG9wJmx0Oy9lbC1yYWRpby1idXR0b24mZ3Q7XG4mbHQ7L2VsLXJhZGlvLWdyb3VwJmd0O1xuJmx0O2RpdiBzdHlsZT0mcXVvdDttYXJnaW46IDIwcHg7JnF1b3Q7Jmd0OyZsdDsvZGl2Jmd0O1xuJmx0O2VsLWZvcm0gOmxhYmVsLXBvc2l0aW9uPSZxdW90O2xhYmVsUG9zaXRpb24mcXVvdDsgbGFiZWwtd2lkdGg9JnF1b3Q7MTAwcHgmcXVvdDsgOm1vZGVsPSZxdW90O2Zvcm1MYWJlbEFsaWduJnF1b3Q7Jmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O05hbWUmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHYtbW9kZWw9JnF1b3Q7Zm9ybUxhYmVsQWxpZ24ubmFtZSZxdW90OyZndDsmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtBY3Rpdml0eSB6b25lJnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1pbnB1dCB2LW1vZGVsPSZxdW90O2Zvcm1MYWJlbEFsaWduLnJlZ2lvbiZxdW90OyZndDsmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtBY3Rpdml0eSBmb3JtJnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1pbnB1dCB2LW1vZGVsPSZxdW90O2Zvcm1MYWJlbEFsaWduLnR5cGUmcXVvdDsmZ3Q7Jmx0Oy9lbC1pbnB1dCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4mbHQ7L2VsLWZvcm0mZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxhYmVsUG9zaXRpb246ICdyaWdodCcsXG4gICAgICAgIGZvcm1MYWJlbEFsaWduOiB7XG4gICAgICAgICAgbmFtZTogJycsXG4gICAgICAgICAgcmVnaW9uOiAnJyxcbiAgICAgICAgICB0eXBlOiAnJ1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwidmFsaWRhY2lvblwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjdmFsaWRhY2lvblwiPsK2PC9hPiBWYWxpZGFjacOzbjwvaDM+XG48cD5FbCBjb21wb25lbnRlIDxjb2RlPmZvcm08L2NvZGU+IGxlIHBlcm1pdGUgdmVyaWZpY2FyIHN1cyBkYXRvcywgYXl1ZMOhbmRvbGUgYSBlbmNvbnRyYXIgeSBjb3JyZWdpciBlcnJvcmVzLjwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICA8ZGl2PjxwPlPDs2xvIHRpZW5lIHF1ZSBhw7FhZGlyIGVsIGF0cmlidXRvIDxjb2RlPnJ1bGVzPC9jb2RlPiBlbiBlbCBjb21wb25lbnRlIDxjb2RlPkZvcm08L2NvZGU+LCBwYXNhciBsYXMgcmVnbGFzIGRlIHZhbGlkYWNpw7NuIHkgZXN0YWJsZWNlciBlbCBhdHJpYnV0byA8Y29kZT5wcm9wPC9jb2RlPiBwYXJhIDxjb2RlPkZvcm0tSXRlbTwvY29kZT4gY29tbyB1bmEgY2xhdmUgZXNwZWPDrWZpY2EgcXVlIG5lY2VzaXRhIHNlciB2YWxpZGFkYS4gVmVyIG3DoXMgaW5mb3JtYWNpw7NuIGVuIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20veWltaW5naGUvYXN5bmMtdmFsaWRhdG9yXCI+YXN5bmMtdmFsaWRhdG9yPC9hPi48L3A+XG48L2Rpdj5cbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzMgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDtlbC1mb3JtIDptb2RlbD0mcXVvdDtydWxlRm9ybSZxdW90OyA6cnVsZXM9JnF1b3Q7cnVsZXMmcXVvdDsgcmVmPSZxdW90O3J1bGVGb3JtJnF1b3Q7IGxhYmVsLXdpZHRoPSZxdW90OzEyMHB4JnF1b3Q7IGNsYXNzPSZxdW90O2RlbW8tcnVsZUZvcm0mcXVvdDsmZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7QWN0aXZpdHkgbmFtZSZxdW90OyBwcm9wPSZxdW90O25hbWUmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHYtbW9kZWw9JnF1b3Q7cnVsZUZvcm0ubmFtZSZxdW90OyZndDsmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtBY3Rpdml0eSB6b25lJnF1b3Q7IHByb3A9JnF1b3Q7cmVnaW9uJnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1zZWxlY3Qgdi1tb2RlbD0mcXVvdDtydWxlRm9ybS5yZWdpb24mcXVvdDsgcGxhY2Vob2xkZXI9JnF1b3Q7QWN0aXZpdHkgem9uZSZxdW90OyZndDtcbiAgICAgICZsdDtlbC1vcHRpb24gbGFiZWw9JnF1b3Q7Wm9uZSBvbmUmcXVvdDsgdmFsdWU9JnF1b3Q7c2hhbmdoYWkmcXVvdDsmZ3Q7Jmx0Oy9lbC1vcHRpb24mZ3Q7XG4gICAgICAmbHQ7ZWwtb3B0aW9uIGxhYmVsPSZxdW90O1pvbmUgdHdvJnF1b3Q7IHZhbHVlPSZxdW90O2JlaWppbmcmcXVvdDsmZ3Q7Jmx0Oy9lbC1vcHRpb24mZ3Q7XG4gICAgJmx0Oy9lbC1zZWxlY3QmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FjdGl2aXR5IHRpbWUmcXVvdDsgcmVxdWlyZWQmZ3Q7XG4gICAgJmx0O2VsLWNvbCA6c3Bhbj0mcXVvdDsxMSZxdW90OyZndDtcbiAgICAgICZsdDtlbC1mb3JtLWl0ZW0gcHJvcD0mcXVvdDtkYXRlMSZxdW90OyZndDtcbiAgICAgICAgJmx0O2VsLWRhdGUtcGlja2VyIHR5cGU9JnF1b3Q7ZGF0ZSZxdW90OyBwbGFjZWhvbGRlcj0mcXVvdDtQaWNrIGEgZGF0ZSZxdW90OyB2LW1vZGVsPSZxdW90O3J1bGVGb3JtLmRhdGUxJnF1b3Q7IHN0eWxlPSZxdW90O3dpZHRoOiAxMDAlOyZxdW90OyZndDsmbHQ7L2VsLWRhdGUtcGlja2VyJmd0O1xuICAgICAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICAgJmx0Oy9lbC1jb2wmZ3Q7XG4gICAgJmx0O2VsLWNvbCBjbGFzcz0mcXVvdDtsaW5lJnF1b3Q7IDpzcGFuPSZxdW90OzImcXVvdDsmZ3Q7LSZsdDsvZWwtY29sJmd0O1xuICAgICZsdDtlbC1jb2wgOnNwYW49JnF1b3Q7MTEmcXVvdDsmZ3Q7XG4gICAgICAmbHQ7ZWwtZm9ybS1pdGVtIHByb3A9JnF1b3Q7ZGF0ZTImcXVvdDsmZ3Q7XG4gICAgICAgICZsdDtlbC10aW1lLXBpY2tlciBwbGFjZWhvbGRlcj0mcXVvdDtQaWNrIGEgdGltZSZxdW90OyB2LW1vZGVsPSZxdW90O3J1bGVGb3JtLmRhdGUyJnF1b3Q7IHN0eWxlPSZxdW90O3dpZHRoOiAxMDAlOyZxdW90OyZndDsmbHQ7L2VsLXRpbWUtcGlja2VyJmd0O1xuICAgICAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICAgJmx0Oy9lbC1jb2wmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0luc3RhbnQgZGVsaXZlcnkmcXVvdDsgcHJvcD0mcXVvdDtkZWxpdmVyeSZxdW90OyZndDtcbiAgICAmbHQ7ZWwtc3dpdGNoIHYtbW9kZWw9JnF1b3Q7cnVsZUZvcm0uZGVsaXZlcnkmcXVvdDsmZ3Q7Jmx0Oy9lbC1zd2l0Y2gmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FjdGl2aXR5IHR5cGUmcXVvdDsgcHJvcD0mcXVvdDt0eXBlJnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1jaGVja2JveC1ncm91cCB2LW1vZGVsPSZxdW90O3J1bGVGb3JtLnR5cGUmcXVvdDsmZ3Q7XG4gICAgICAmbHQ7ZWwtY2hlY2tib3ggbGFiZWw9JnF1b3Q7T25saW5lIGFjdGl2aXRpZXMmcXVvdDsgbmFtZT0mcXVvdDt0eXBlJnF1b3Q7Jmd0OyZsdDsvZWwtY2hlY2tib3gmZ3Q7XG4gICAgICAmbHQ7ZWwtY2hlY2tib3ggbGFiZWw9JnF1b3Q7UHJvbW90aW9uIGFjdGl2aXRpZXMmcXVvdDsgbmFtZT0mcXVvdDt0eXBlJnF1b3Q7Jmd0OyZsdDsvZWwtY2hlY2tib3gmZ3Q7XG4gICAgICAmbHQ7ZWwtY2hlY2tib3ggbGFiZWw9JnF1b3Q7T2ZmbGluZSBhY3Rpdml0aWVzJnF1b3Q7IG5hbWU9JnF1b3Q7dHlwZSZxdW90OyZndDsmbHQ7L2VsLWNoZWNrYm94Jmd0O1xuICAgICAgJmx0O2VsLWNoZWNrYm94IGxhYmVsPSZxdW90O1NpbXBsZSBicmFuZCBleHBvc3VyZSZxdW90OyBuYW1lPSZxdW90O3R5cGUmcXVvdDsmZ3Q7Jmx0Oy9lbC1jaGVja2JveCZndDtcbiAgICAmbHQ7L2VsLWNoZWNrYm94LWdyb3VwJmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtSZXNvdXJjZXMmcXVvdDsgcHJvcD0mcXVvdDtyZXNvdXJjZSZxdW90OyZndDtcbiAgICAmbHQ7ZWwtcmFkaW8tZ3JvdXAgdi1tb2RlbD0mcXVvdDtydWxlRm9ybS5yZXNvdXJjZSZxdW90OyZndDtcbiAgICAgICZsdDtlbC1yYWRpbyBsYWJlbD0mcXVvdDtTcG9uc29yc2hpcCZxdW90OyZndDsmbHQ7L2VsLXJhZGlvJmd0O1xuICAgICAgJmx0O2VsLXJhZGlvIGxhYmVsPSZxdW90O1ZlbnVlJnF1b3Q7Jmd0OyZsdDsvZWwtcmFkaW8mZ3Q7XG4gICAgJmx0Oy9lbC1yYWRpby1ncm91cCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7QWN0aXZpdHkgZm9ybSZxdW90OyBwcm9wPSZxdW90O2Rlc2MmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHR5cGU9JnF1b3Q7dGV4dGFyZWEmcXVvdDsgdi1tb2RlbD0mcXVvdDtydWxlRm9ybS5kZXNjJnF1b3Q7Jmd0OyZsdDsvZWwtaW5wdXQmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtJmd0O1xuICAgICZsdDtlbC1idXR0b24gdHlwZT0mcXVvdDtwcmltYXJ5JnF1b3Q7IEBjbGljaz0mcXVvdDtzdWJtaXRGb3JtKCdydWxlRm9ybScpJnF1b3Q7Jmd0O0NyZWF0ZSZsdDsvZWwtYnV0dG9uJmd0O1xuICAgICZsdDtlbC1idXR0b24gQGNsaWNrPSZxdW90O3Jlc2V0Rm9ybSgncnVsZUZvcm0nKSZxdW90OyZndDtSZXNldCZsdDsvZWwtYnV0dG9uJmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiZsdDsvZWwtZm9ybSZndDtcbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcnVsZUZvcm06IHtcbiAgICAgICAgICBuYW1lOiAnJyxcbiAgICAgICAgICByZWdpb246ICcnLFxuICAgICAgICAgIGRhdGUxOiAnJyxcbiAgICAgICAgICBkYXRlMjogJycsXG4gICAgICAgICAgZGVsaXZlcnk6IGZhbHNlLFxuICAgICAgICAgIHR5cGU6IFtdLFxuICAgICAgICAgIHJlc291cmNlOiAnJyxcbiAgICAgICAgICBkZXNjOiAnJ1xuICAgICAgICB9LFxuICAgICAgICBydWxlczoge1xuICAgICAgICAgIG5hbWU6IFtcbiAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdQbGVhc2UgaW5wdXQgQWN0aXZpdHkgbmFtZScsIHRyaWdnZXI6ICdibHVyJyB9LFxuICAgICAgICAgICAgeyBtaW46IDMsIG1heDogNSwgbWVzc2FnZTogJ0xlbmd0aCBzaG91bGQgYmUgMyB0byA1JywgdHJpZ2dlcjogJ2JsdXInIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHJlZ2lvbjogW1xuICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ1BsZWFzZSBzZWxlY3QgQWN0aXZpdHkgem9uZScsIHRyaWdnZXI6ICdjaGFuZ2UnIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIGRhdGUxOiBbXG4gICAgICAgICAgICB7IHR5cGU6ICdkYXRlJywgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdQbGVhc2UgcGljayBhIGRhdGUnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBkYXRlMjogW1xuICAgICAgICAgICAgeyB0eXBlOiAnZGF0ZScsIHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAnUGxlYXNlIHBpY2sgYSB0aW1lJywgdHJpZ2dlcjogJ2NoYW5nZScgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgdHlwZTogW1xuICAgICAgICAgICAgeyB0eXBlOiAnYXJyYXknLCByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ1BsZWFzZSBzZWxlY3QgYXQgbGVhc3Qgb25lIGFjdGl2aXR5IHR5cGUnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICByZXNvdXJjZTogW1xuICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ1BsZWFzZSBzZWxlY3QgYWN0aXZpdHkgcmVzb3VyY2UnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBkZXNjOiBbXG4gICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAnUGxlYXNlIGlucHV0IGFjdGl2aXR5IGZvcm0nLCB0cmlnZ2VyOiAnYmx1cicgfVxuICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHN1Ym1pdEZvcm0oZm9ybU5hbWUpIHtcbiAgICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUoKHZhbGlkKSA9Jmd0OyB7XG4gICAgICAgICAgaWYgKHZhbGlkKSB7XG4gICAgICAgICAgICBhbGVydCgnc3VibWl0IScpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3Igc3VibWl0ISEnKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHJlc2V0Rm9ybShmb3JtTmFtZSkge1xuICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwicmVnbGFzLXBlcnNvbmFsaXphZGFzLWRlLXZhbGlkYWNpb25cIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI3JlZ2xhcy1wZXJzb25hbGl6YWRhcy1kZS12YWxpZGFjaW9uXCI+wrY8L2E+IFJlZ2xhcyBwZXJzb25hbGl6YWRhcyBkZSB2YWxpZGFjacOzbjwvaDM+XG48cD5Fc3RlIGVqZW1wbG8gbXVlc3RyYSBjw7NtbyBwZXJzb25hbGl6YXIgc3VzIHByb3BpYXMgcmVnbGFzIGRlIHZhbGlkYWNpw7NuIHBhcmEgZmluYWxpemFyIHVuYSB2ZXJpZmljYWNpw7NuIGRlIGNvbnRyYXNlw7FhIGRlIGRvcyBwYXNvcy48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5BcXXDrSB1dGlsaXphbW9zIGVsIDxjb2RlPnN0YXR1cy1pY29uPC9jb2RlPiBwYXJhIHJlZmxlamFyIGVsIHJlc3VsdGFkbyBkZSBsYSB2YWxpZGFjacOzbiBjb21vIHVuIGljb25vLjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNCAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWZvcm0gOm1vZGVsPSZxdW90O3J1bGVGb3JtJnF1b3Q7IHN0YXR1cy1pY29uIDpydWxlcz0mcXVvdDtydWxlcyZxdW90OyByZWY9JnF1b3Q7cnVsZUZvcm0mcXVvdDsgbGFiZWwtd2lkdGg9JnF1b3Q7MTIwcHgmcXVvdDsgY2xhc3M9JnF1b3Q7ZGVtby1ydWxlRm9ybSZxdW90OyZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtQYXNzd29yZCZxdW90OyBwcm9wPSZxdW90O3Bhc3MmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHR5cGU9JnF1b3Q7cGFzc3dvcmQmcXVvdDsgdi1tb2RlbD0mcXVvdDtydWxlRm9ybS5wYXNzJnF1b3Q7IGF1dG9jb21wbGV0ZT0mcXVvdDtvZmYmcXVvdDsmZ3Q7Jmx0Oy9lbC1pbnB1dCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7Q29uZmlybSZxdW90OyBwcm9wPSZxdW90O2NoZWNrUGFzcyZxdW90OyZndDtcbiAgICAmbHQ7ZWwtaW5wdXQgdHlwZT0mcXVvdDtwYXNzd29yZCZxdW90OyB2LW1vZGVsPSZxdW90O3J1bGVGb3JtLmNoZWNrUGFzcyZxdW90OyBhdXRvY29tcGxldGU9JnF1b3Q7b2ZmJnF1b3Q7Jmd0OyZsdDsvZWwtaW5wdXQmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FnZSZxdW90OyBwcm9wPSZxdW90O2FnZSZxdW90OyZndDtcbiAgICAmbHQ7ZWwtaW5wdXQgdi1tb2RlbC5udW1iZXI9JnF1b3Q7cnVsZUZvcm0uYWdlJnF1b3Q7Jmd0OyZsdDsvZWwtaW5wdXQmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtJmd0O1xuICAgICZsdDtlbC1idXR0b24gdHlwZT0mcXVvdDtwcmltYXJ5JnF1b3Q7IEBjbGljaz0mcXVvdDtzdWJtaXRGb3JtKCdydWxlRm9ybScpJnF1b3Q7Jmd0O1N1Ym1pdCZsdDsvZWwtYnV0dG9uJmd0O1xuICAgICZsdDtlbC1idXR0b24gQGNsaWNrPSZxdW90O3Jlc2V0Rm9ybSgncnVsZUZvcm0nKSZxdW90OyZndDtSZXNldCZsdDsvZWwtYnV0dG9uJmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiZsdDsvZWwtZm9ybSZndDtcbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgdmFyIGNoZWNrQWdlID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPSZndDsge1xuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcignUGxlYXNlIGlucHV0IHRoZSBhZ2UnKSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0VGltZW91dCgoKSA9Jmd0OyB7XG4gICAgICAgICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdQbGVhc2UgaW5wdXQgZGlnaXRzJykpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgJmx0OyAxOCkge1xuICAgICAgICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ0FnZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAxOCcpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCAxMDAwKTtcbiAgICAgIH07XG4gICAgICB2YXIgdmFsaWRhdGVQYXNzID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPSZndDsge1xuICAgICAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdQbGVhc2UgaW5wdXQgdGhlIHBhc3N3b3JkJykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICh0aGlzLnJ1bGVGb3JtLmNoZWNrUGFzcyAhPT0gJycpIHtcbiAgICAgICAgICAgIHRoaXMuJHJlZnMucnVsZUZvcm0udmFsaWRhdGVGaWVsZCgnY2hlY2tQYXNzJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgdmFsaWRhdGVQYXNzMiA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0mZ3Q7IHtcbiAgICAgICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcignUGxlYXNlIGlucHV0IHRoZSBwYXNzd29yZCBhZ2FpbicpKTtcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSAhPT0gdGhpcy5ydWxlRm9ybS5wYXNzKSB7XG4gICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdUd28gaW5wdXRzIGRvblxcJ3QgbWF0Y2ghJykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICByZXR1cm4ge1xuICAgICAgICBydWxlRm9ybToge1xuICAgICAgICAgIHBhc3M6ICcnLFxuICAgICAgICAgIGNoZWNrUGFzczogJycsXG4gICAgICAgICAgYWdlOiAnJ1xuICAgICAgICB9LFxuICAgICAgICBydWxlczoge1xuICAgICAgICAgIHBhc3M6IFtcbiAgICAgICAgICAgIHsgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MsIHRyaWdnZXI6ICdibHVyJyB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBjaGVja1Bhc3M6IFtcbiAgICAgICAgICAgIHsgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MyLCB0cmlnZ2VyOiAnYmx1cicgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgYWdlOiBbXG4gICAgICAgICAgICB7IHZhbGlkYXRvcjogY2hlY2tBZ2UsIHRyaWdnZXI6ICdibHVyJyB9XG4gICAgICAgICAgXVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgc3VibWl0Rm9ybShmb3JtTmFtZSkge1xuICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZSgodmFsaWQpID0mZ3Q7IHtcbiAgICAgICAgICBpZiAodmFsaWQpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdzdWJtaXQhJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7XG4gICAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48ZGl2IGNsYXNzPVwidGlwXCI+XG48cD5TZSBkZWJlIGxsYW1hciBhIGxhIGZ1bmNpw7NuIGRlIHZhbGlkYWNpw7NuIGRlIGxsYW1hZGEgZGUgcmV0b3JubyBwZXJzb25hbGl6YWRhLiBWZXIgdXNvIG3DoXMgYXZhbnphZG8gZW4gPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS95aW1pbmdoZS9hc3luYy12YWxpZGF0b3JcIj5hc3luYy12YWxpZGF0b3I8L2E+LjwvcD5cbjwvZGl2PlxuPGgzIGlkPVwiZWxpbWluYXItby1hZ3JlZ2FyLXZhbGlkYWNpb25lcy1kaW5hbWljYW1lbnRlXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNlbGltaW5hci1vLWFncmVnYXItdmFsaWRhY2lvbmVzLWRpbmFtaWNhbWVudGVcIj7CtjwvYT4gRWxpbWluYXIgbyBhZ3JlZ2FyIHZhbGlkYWNpb25lcyBkaW5hbWljYW1lbnRlPC9oMz5cbjxkZW1vLWJsb2NrPlxuICAgICAgICA8ZGl2PjxwPkFkZW3DoXMgZGUgcGFzYXIgdG9kYXMgbGFzIHJlZ2xhcyBkZSB2YWxpZGFjacOzbiBhbCBtaXNtbyB0aWVtcG8gZW4gZWwgY29tcG9uZW50ZSA8Y29kZT5mb3JtPC9jb2RlPiwgdGFtYmnDqW4gcHVlZGUgcGFzYXIgbGFzIHJlZ2xhcyBkZSB2YWxpZGFjacOzbiBvIGJvcnJhciByZWdsYXMgZW4gdW4gw7puaWNvIGNhbXBvIGRlIGZvcm11bGFyaW8gZGUgZm9ybWEgZGluw6FtaWNhLjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNSAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWZvcm0gOm1vZGVsPSZxdW90O2R5bmFtaWNWYWxpZGF0ZUZvcm0mcXVvdDsgcmVmPSZxdW90O2R5bmFtaWNWYWxpZGF0ZUZvcm0mcXVvdDsgbGFiZWwtd2lkdGg9JnF1b3Q7MTIwcHgmcXVvdDsgY2xhc3M9JnF1b3Q7ZGVtby1keW5hbWljJnF1b3Q7Jmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtXG4gICAgcHJvcD0mcXVvdDtlbWFpbCZxdW90O1xuICAgIGxhYmVsPSZxdW90O0VtYWlsJnF1b3Q7XG4gICAgOnJ1bGVzPSZxdW90O1tcbiAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdQbGVhc2UgaW5wdXQgZW1haWwgYWRkcmVzcycsIHRyaWdnZXI6ICdibHVyJyB9LFxuICAgICAgeyB0eXBlOiAnZW1haWwnLCBtZXNzYWdlOiAnUGxlYXNlIGlucHV0IGNvcnJlY3QgZW1haWwgYWRkcmVzcycsIHRyaWdnZXI6IFsnYmx1cicsICdjaGFuZ2UnXSB9XG4gICAgXSZxdW90O1xuICAmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHYtbW9kZWw9JnF1b3Q7ZHluYW1pY1ZhbGlkYXRlRm9ybS5lbWFpbCZxdW90OyZndDsmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbVxuICAgIHYtZm9yPSZxdW90Oyhkb21haW4sIGluZGV4KSBpbiBkeW5hbWljVmFsaWRhdGVGb3JtLmRvbWFpbnMmcXVvdDtcbiAgICA6bGFiZWw9JnF1b3Q7J0RvbWFpbicgKyBpbmRleCZxdW90O1xuICAgIDprZXk9JnF1b3Q7ZG9tYWluLmtleSZxdW90O1xuICAgIDpwcm9wPSZxdW90Oydkb21haW5zLicgKyBpbmRleCArICcudmFsdWUnJnF1b3Q7XG4gICAgOnJ1bGVzPSZxdW90O3tcbiAgICAgIHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAnZG9tYWluIGNhbiBub3QgYmUgbnVsbCcsIHRyaWdnZXI6ICdibHVyJ1xuICAgIH0mcXVvdDtcbiAgJmd0O1xuICAgICZsdDtlbC1pbnB1dCB2LW1vZGVsPSZxdW90O2RvbWFpbi52YWx1ZSZxdW90OyZndDsmbHQ7L2VsLWlucHV0Jmd0OyZsdDtlbC1idXR0b24gQGNsaWNrLnByZXZlbnQ9JnF1b3Q7cmVtb3ZlRG9tYWluKGRvbWFpbikmcXVvdDsmZ3Q7RGVsZXRlJmx0Oy9lbC1idXR0b24mZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtJmd0O1xuICAgICZsdDtlbC1idXR0b24gdHlwZT0mcXVvdDtwcmltYXJ5JnF1b3Q7IEBjbGljaz0mcXVvdDtzdWJtaXRGb3JtKCdkeW5hbWljVmFsaWRhdGVGb3JtJykmcXVvdDsmZ3Q7U3VibWl0Jmx0Oy9lbC1idXR0b24mZ3Q7XG4gICAgJmx0O2VsLWJ1dHRvbiBAY2xpY2s9JnF1b3Q7YWRkRG9tYWluJnF1b3Q7Jmd0O05ldyBkb21haW4mbHQ7L2VsLWJ1dHRvbiZndDtcbiAgICAmbHQ7ZWwtYnV0dG9uIEBjbGljaz0mcXVvdDtyZXNldEZvcm0oJ2R5bmFtaWNWYWxpZGF0ZUZvcm0nKSZxdW90OyZndDtSZXNldCZsdDsvZWwtYnV0dG9uJmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiZsdDsvZWwtZm9ybSZndDtcbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZHluYW1pY1ZhbGlkYXRlRm9ybToge1xuICAgICAgICAgIGRvbWFpbnM6IFt7XG4gICAgICAgICAgICBrZXk6IDEsXG4gICAgICAgICAgICB2YWx1ZTogJydcbiAgICAgICAgICB9XSxcbiAgICAgICAgICBlbWFpbDogJydcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHN1Ym1pdEZvcm0oZm9ybU5hbWUpIHtcbiAgICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUoKHZhbGlkKSA9Jmd0OyB7XG4gICAgICAgICAgaWYgKHZhbGlkKSB7XG4gICAgICAgICAgICBhbGVydCgnc3VibWl0IScpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3Igc3VibWl0ISEnKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHJlc2V0Rm9ybShmb3JtTmFtZSkge1xuICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZURvbWFpbihpdGVtKSB7XG4gICAgICAgIHZhciBpbmRleCA9IHRoaXMuZHluYW1pY1ZhbGlkYXRlRm9ybS5kb21haW5zLmluZGV4T2YoaXRlbSk7XG4gICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICB0aGlzLmR5bmFtaWNWYWxpZGF0ZUZvcm0uZG9tYWlucy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYWRkRG9tYWluKCkge1xuICAgICAgICB0aGlzLmR5bmFtaWNWYWxpZGF0ZUZvcm0uZG9tYWlucy5wdXNoKHtcbiAgICAgICAgICBrZXk6IERhdGUubm93KCksXG4gICAgICAgICAgdmFsdWU6ICcnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwidmFsaWRhY2lvbi1udW1lcmljYVwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjdmFsaWRhY2lvbi1udW1lcmljYVwiPsK2PC9hPiBWYWxpZGFjacOzbiBudW1lcmljYTwvaDM+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5MYSB2YWxpZGFjacOzbiBudW3DqXJpY2EgbmVjZXNpdGEgdW4gbW9kaWZpY2Fkb3IgPGNvZGU+Lm51bWJlcjwvY29kZT4gYcOxYWRpZG8gZW4gZWwgZW5sYWNlIDxjb2RlPnYtbW9kZWw8L2NvZGU+IGRlIGVudHJhZGEsIHNpcnZlIHBhcmEgdHJhbnNmb3JtYXIgZWwgdmFsb3IgZGUgbGEgY2FkZW5hIGFsIG7Dum1lcm8gcHJvcG9yY2lvbmFkbyBwb3IgVnVlanMuPC9wPlxuPC9kaXY+XG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW82IC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZWwtZm9ybSA6bW9kZWw9JnF1b3Q7bnVtYmVyVmFsaWRhdGVGb3JtJnF1b3Q7IHJlZj0mcXVvdDtudW1iZXJWYWxpZGF0ZUZvcm0mcXVvdDsgbGFiZWwtd2lkdGg9JnF1b3Q7MTAwcHgmcXVvdDsgY2xhc3M9JnF1b3Q7ZGVtby1ydWxlRm9ybSZxdW90OyZndDtcbiAgJmx0O2VsLWZvcm0taXRlbVxuICAgIGxhYmVsPSZxdW90O2FnZSZxdW90O1xuICAgIHByb3A9JnF1b3Q7YWdlJnF1b3Q7XG4gICAgOnJ1bGVzPSZxdW90O1tcbiAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdhZ2UgaXMgcmVxdWlyZWQnfSxcbiAgICAgIHsgdHlwZTogJ251bWJlcicsIG1lc3NhZ2U6ICdhZ2UgbXVzdCBiZSBhIG51bWJlcid9XG4gICAgXSZxdW90O1xuICAmZ3Q7XG4gICAgJmx0O2VsLWlucHV0IHR5cGU9JnF1b3Q7YWdlJnF1b3Q7IHYtbW9kZWwubnVtYmVyPSZxdW90O251bWJlclZhbGlkYXRlRm9ybS5hZ2UmcXVvdDsgYXV0b2NvbXBsZXRlPSZxdW90O29mZiZxdW90OyZndDsmbHQ7L2VsLWlucHV0Jmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSZndDtcbiAgICAmbHQ7ZWwtYnV0dG9uIHR5cGU9JnF1b3Q7cHJpbWFyeSZxdW90OyBAY2xpY2s9JnF1b3Q7c3VibWl0Rm9ybSgnbnVtYmVyVmFsaWRhdGVGb3JtJykmcXVvdDsmZ3Q7U3VibWl0Jmx0Oy9lbC1idXR0b24mZ3Q7XG4gICAgJmx0O2VsLWJ1dHRvbiBAY2xpY2s9JnF1b3Q7cmVzZXRGb3JtKCdudW1iZXJWYWxpZGF0ZUZvcm0nKSZxdW90OyZndDtSZXNldCZsdDsvZWwtYnV0dG9uJmd0O1xuICAmbHQ7L2VsLWZvcm0taXRlbSZndDtcbiZsdDsvZWwtZm9ybSZndDtcbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbnVtYmVyVmFsaWRhdGVGb3JtOiB7XG4gICAgICAgICAgYWdlOiAnJ1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgc3VibWl0Rm9ybShmb3JtTmFtZSkge1xuICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZSgodmFsaWQpID0mZ3Q7IHtcbiAgICAgICAgICBpZiAodmFsaWQpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdzdWJtaXQhJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7XG4gICAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48ZGl2IGNsYXNzPVwidGlwXCI+XG48cD5DdWFuZG8gdW4gPGNvZGU+ZWwtZm9ybS1pdGVtPC9jb2RlPiBlc3TDoSBhbmlkYWRvIGVuIG90cm8gPGNvZGU+ZWwtZm9ybS1pdGVtPC9jb2RlPiwgc3UgYW5jaG8gZGUgZXRpcXVldGEgc2Vyw6EgMC4gU2kgZXMgbmVjZXNhcmlvLCBwdWVkZSBlc3RhYmxlY2VyIGVsIGFuY2hvIGRlIGV0aXF1ZXRhIGVuIGVzZSA8Y29kZT5lbC1mb3JtLWl0ZW08L2NvZGU+LjwvcD5cbjwvZGl2PlxuPGgzIGlkPVwidGFtYW5vLWRlbC1jb250cm9sXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiN0YW1hbm8tZGVsLWNvbnRyb2xcIj7CtjwvYT4gVGFtYcOxbyBkZWwgY29udHJvbDwvaDM+XG48cD5Ub2RvcyBsb3MgY29tcG9uZW50ZXMgZGUgdW4gZm9ybXVsYXJpbyBoZXJlZGFuIHN1IGF0cmlidXRvIDxjb2RlPnNpemU8L2NvZGU+LiBEZSBtYW5lcmEgc2ltaWxhciwgRm9ybUl0ZW0gdGFtYmnDqW4gdGllbmUgdW4gYXRyaWJ1dG8gPGNvZGU+c2l6ZTwvY29kZT4uPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+QcO6biBhc8OtLCBwdWVkZSBhanVzdGFyIGVsIDxjb2RlPnNpemU8L2NvZGU+IGRlIGNhZGEgY29tcG9uZW50ZSBzaSBubyBkZXNlYSBxdWUgaGVyZWRlIHN1IHRhbWHDsW8gZGUgRnJvbSBvIEZvcm1JdGVtLjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNyAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O2VsLWZvcm0gcmVmPSZxdW90O2Zvcm0mcXVvdDsgOm1vZGVsPSZxdW90O3NpemVGb3JtJnF1b3Q7IGxhYmVsLXdpZHRoPSZxdW90OzEyMHB4JnF1b3Q7IHNpemU9JnF1b3Q7bWluaSZxdW90OyZndDtcbiAgJmx0O2VsLWZvcm0taXRlbSBsYWJlbD0mcXVvdDtBY3Rpdml0eSBuYW1lJnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1pbnB1dCB2LW1vZGVsPSZxdW90O3NpemVGb3JtLm5hbWUmcXVvdDsmZ3Q7Jmx0Oy9lbC1pbnB1dCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7QWN0aXZpdHkgem9uZSZxdW90OyZndDtcbiAgICAmbHQ7ZWwtc2VsZWN0IHYtbW9kZWw9JnF1b3Q7c2l6ZUZvcm0ucmVnaW9uJnF1b3Q7IHBsYWNlaG9sZGVyPSZxdW90O3BsZWFzZSBzZWxlY3QgeW91ciB6b25lJnF1b3Q7Jmd0O1xuICAgICAgJmx0O2VsLW9wdGlvbiBsYWJlbD0mcXVvdDtab25lIG9uZSZxdW90OyB2YWx1ZT0mcXVvdDtzaGFuZ2hhaSZxdW90OyZndDsmbHQ7L2VsLW9wdGlvbiZndDtcbiAgICAgICZsdDtlbC1vcHRpb24gbGFiZWw9JnF1b3Q7Wm9uZSB0d28mcXVvdDsgdmFsdWU9JnF1b3Q7YmVpamluZyZxdW90OyZndDsmbHQ7L2VsLW9wdGlvbiZndDtcbiAgICAmbHQ7L2VsLXNlbGVjdCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7QWN0aXZpdHkgdGltZSZxdW90OyZndDtcbiAgICAmbHQ7ZWwtY29sIDpzcGFuPSZxdW90OzExJnF1b3Q7Jmd0O1xuICAgICAgJmx0O2VsLWRhdGUtcGlja2VyIHR5cGU9JnF1b3Q7ZGF0ZSZxdW90OyBwbGFjZWhvbGRlcj0mcXVvdDtQaWNrIGEgZGF0ZSZxdW90OyB2LW1vZGVsPSZxdW90O3NpemVGb3JtLmRhdGUxJnF1b3Q7IHN0eWxlPSZxdW90O3dpZHRoOiAxMDAlOyZxdW90OyZndDsmbHQ7L2VsLWRhdGUtcGlja2VyJmd0O1xuICAgICZsdDsvZWwtY29sJmd0O1xuICAgICZsdDtlbC1jb2wgY2xhc3M9JnF1b3Q7bGluZSZxdW90OyA6c3Bhbj0mcXVvdDsyJnF1b3Q7Jmd0Oy0mbHQ7L2VsLWNvbCZndDtcbiAgICAmbHQ7ZWwtY29sIDpzcGFuPSZxdW90OzExJnF1b3Q7Jmd0O1xuICAgICAgJmx0O2VsLXRpbWUtcGlja2VyIHBsYWNlaG9sZGVyPSZxdW90O1BpY2sgYSB0aW1lJnF1b3Q7IHYtbW9kZWw9JnF1b3Q7c2l6ZUZvcm0uZGF0ZTImcXVvdDsgc3R5bGU9JnF1b3Q7d2lkdGg6IDEwMCU7JnF1b3Q7Jmd0OyZsdDsvZWwtdGltZS1waWNrZXImZ3Q7XG4gICAgJmx0Oy9lbC1jb2wmZ3Q7XG4gICZsdDsvZWwtZm9ybS1pdGVtJmd0O1xuICAmbHQ7ZWwtZm9ybS1pdGVtIGxhYmVsPSZxdW90O0FjdGl2aXR5IHR5cGUmcXVvdDsmZ3Q7XG4gICAgJmx0O2VsLWNoZWNrYm94LWdyb3VwIHYtbW9kZWw9JnF1b3Q7c2l6ZUZvcm0udHlwZSZxdW90OyZndDtcbiAgICAgICZsdDtlbC1jaGVja2JveC1idXR0b24gbGFiZWw9JnF1b3Q7T25saW5lIGFjdGl2aXRpZXMmcXVvdDsgbmFtZT0mcXVvdDt0eXBlJnF1b3Q7Jmd0OyZsdDsvZWwtY2hlY2tib3gtYnV0dG9uJmd0O1xuICAgICAgJmx0O2VsLWNoZWNrYm94LWJ1dHRvbiBsYWJlbD0mcXVvdDtQcm9tb3Rpb24gYWN0aXZpdGllcyZxdW90OyBuYW1lPSZxdW90O3R5cGUmcXVvdDsmZ3Q7Jmx0Oy9lbC1jaGVja2JveC1idXR0b24mZ3Q7XG4gICAgJmx0Oy9lbC1jaGVja2JveC1ncm91cCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gbGFiZWw9JnF1b3Q7UmVzb3VyY2VzJnF1b3Q7Jmd0O1xuICAgICZsdDtlbC1yYWRpby1ncm91cCB2LW1vZGVsPSZxdW90O3NpemVGb3JtLnJlc291cmNlJnF1b3Q7IHNpemU9JnF1b3Q7bWVkaXVtJnF1b3Q7Jmd0O1xuICAgICAgJmx0O2VsLXJhZGlvIGJvcmRlciBsYWJlbD0mcXVvdDtTcG9uc29yJnF1b3Q7Jmd0OyZsdDsvZWwtcmFkaW8mZ3Q7XG4gICAgICAmbHQ7ZWwtcmFkaW8gYm9yZGVyIGxhYmVsPSZxdW90O1ZlbnVlJnF1b3Q7Jmd0OyZsdDsvZWwtcmFkaW8mZ3Q7XG4gICAgJmx0Oy9lbC1yYWRpby1ncm91cCZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4gICZsdDtlbC1mb3JtLWl0ZW0gc2l6ZT0mcXVvdDtsYXJnZSZxdW90OyZndDtcbiAgICAmbHQ7ZWwtYnV0dG9uIHR5cGU9JnF1b3Q7cHJpbWFyeSZxdW90OyBAY2xpY2s9JnF1b3Q7b25TdWJtaXQmcXVvdDsmZ3Q7Q3JlYXRlJmx0Oy9lbC1idXR0b24mZ3Q7XG4gICAgJmx0O2VsLWJ1dHRvbiZndDtDYW5jZWwmbHQ7L2VsLWJ1dHRvbiZndDtcbiAgJmx0Oy9lbC1mb3JtLWl0ZW0mZ3Q7XG4mbHQ7L2VsLWZvcm0mZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2l6ZUZvcm06IHtcbiAgICAgICAgICBuYW1lOiAnJyxcbiAgICAgICAgICByZWdpb246ICcnLFxuICAgICAgICAgIGRhdGUxOiAnJyxcbiAgICAgICAgICBkYXRlMjogJycsXG4gICAgICAgICAgZGVsaXZlcnk6IGZhbHNlLFxuICAgICAgICAgIHR5cGU6IFtdLFxuICAgICAgICAgIHJlc291cmNlOiAnJyxcbiAgICAgICAgICBkZXNjOiAnJ1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgb25TdWJtaXQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzdWJtaXQhJyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiZm9ybS1hdHJpYnV0b3NcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2Zvcm0tYXRyaWJ1dG9zXCI+wrY8L2E+IEZvcm0gQXRyaWJ1dG9zPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5BdHJpYnV0bzwvdGg+XG48dGg+RGVzY3JpcGNpw7NuPC90aD5cbjx0aD5UaXBvPC90aD5cbjx0aD5WYWxvcmVzIGFjZXB0YWRvczwvdGg+XG48dGg+UG9yIGRlZmVjdG88L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+bW9kZWw8L3RkPlxuPHRkPkRhdG9zIGRlbCBjb21wb25lbnRlPC90ZD5cbjx0ZD5vYmplY3Q8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cnVsZXM8L3RkPlxuPHRkPlJlZ2xhcyBkZSB2YWxpZGFjacOzbjwvdGQ+XG48dGQ+b2JqZWN0PC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmlubGluZTwvdGQ+XG48dGQ+U2kgZWwgZm9ybSBlcyBpbmxpbmU8L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5sYWJlbC1wb3NpdGlvbjwvdGQ+XG48dGQ+UG9zaWNpw7NuIGRlIGxhIGV0aXF1ZXRhPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPmxlZnQgLyByaWdodCAvIHRvcDwvdGQ+XG48dGQ+cmlnaHQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5sYWJlbC13aWR0aDwvdGQ+XG48dGQ+YW5jaHVyYSBkZSBsYSBldGlxdWV0YSwgcG9yIGVqZW1wbG8sICZxdW90OzUwcHgmcXVvdDsuIFRvZG9zIHN1cyBlbGVtZW50b3MgZGUgZm9ybXVsYXJpbyBoaWpvIGRpcmVjdG8gaGVyZWRhcsOhbiBlc3RlIHZhbG9yLiBFbCB2YWxvciA8Y29kZT5hdXRvPC9jb2RlPiBlc3TDoSBzb3BvcnRhZG8uPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bGFiZWwtc3VmZml4PC90ZD5cbjx0ZD5zdWZpam8gZGUgbGEgZXRpcXVldGE8L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5oaWRlLXJlcXVpcmVkLWFzdGVyaXNrPC90ZD5cbjx0ZD5zaSBsb3MgY2FtcG9zIG9ibGlnYXRvcmlvcyBkZWJlbiB0ZW5lciB1biBhc3RlcmlzY28gcm9qbyAoZXN0cmVsbGEpIGFsIGxhZG8gZGUgc3VzIGV0aXF1ZXRhczwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNob3ctbWVzc2FnZTwvdGQ+XG48dGQ+c2kgbW9zdHJhciBvIG5vIGVsIG1lbnNhamUgZGUgZXJyb3I8L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+dHJ1ZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmlubGluZS1tZXNzYWdlPC90ZD5cbjx0ZD5zaSBkZXNlYSB2aXN1YWxpemFyIGVsIG1lbnNhamUgZGUgZXJyb3IgaW5saW5lIGNvbiBsYSBwb3NpY2nDs24gZGVsIGZvcm0gaXRlbTwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnN0YXR1cy1pY29uPC90ZD5cbjx0ZD5zaSBkZXNlYSB2aXN1YWxpemFyIHVuIGljb25vIHF1ZSBpbmRpcXVlIGVsIHJlc3VsdGFkbyBkZSBsYSB2YWxpZGFjacOzbjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnZhbGlkYXRlLW9uLXJ1bGUtY2hhbmdlPC90ZD5cbjx0ZD5zaSBzZSBkaXNwYXJhIGxhIHZhbGlkYWNpw7NuIGN1YW5kbyBlbCBwcm9wIDxjb2RlPnJ1bGVzPC9jb2RlPiBjYW1iaWE8L3RkPlxuPHRkPmJvb2xlYW48L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+dHJ1ZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNpemU8L3RkPlxuPHRkPmVsIHRhbWHDsW8gZGUgbG9zIGNvbXBvbmVudGVzIGVuIGVzdGUgZm9ybTwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD5tZWRpdW0gLyBzbWFsbCAvIG1pbmk8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmRpc2FibGVkPC90ZD5cbjx0ZD5zaSBzZSBkZXNhY3RpdmFuIHRvZG9zIGxvcyBjb21wb25lbnRlcyBkZWwgZm9ybXVsYXJpby4gU2kgZXN0YSBlbiA8Y29kZT50cnVlPC9jb2RlPiBubyBwdWVkZSBzZXIgY2FtYmlhZG8gcG9yIGVsIHByb3AgPGNvZGU+ZGlzYWJsZWQ8L2NvZGU+IGluZGl2aWR1YWwgZGUgbG9zIGNvbXBvbmVudGVzLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJmb3JtLW1ldG9kb3NcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2Zvcm0tbWV0b2Rvc1wiPsK2PC9hPiBGb3JtIE1ldG9kb3M8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPk1ldG9kbzwvdGg+XG48dGg+RGVzY3JpcGNpw7NuPC90aD5cbjx0aD5QYXJhbWV0cm9zPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnZhbGlkYXRlPC90ZD5cbjx0ZD5lbCBtw6l0b2RvIHBhcmEgdmFsaWRhciB0b2RvIGVsIGZvcm11bGFyaW8uIFJlY2liZSB1bmEgbGxhbWFkYSBjb21vIHBhcsOhbWV0cm8uIERlc3B1w6lzIGRlIGxhIHZhbGlkYWNpw7NuLCBsYSBsbGFtYWRhIGRlIHJldG9ybm8gc2UgZWplY3V0YXLDoSBjb24gZG9zIHBhcsOhbWV0cm9zOiB1biBib29sZWFubyBxdWUgaW5kaWNhIHNpIGxhIHZhbGlkYWNpw7NuIGhhIHBhc2FkbywgeSB1biBvYmpldG8gcXVlIGNvbnRpZW5lIHRvZG9zIGxvcyBjYW1wb3MgcXVlIGZhbGxhcm9uIGVuIGxhIHZhbGlkYWNpw7NuLiBEZXZ1ZWx2ZSB1bmEgcHJvbWVzYSBzaSBzZSBvbWl0ZSBlbCByZXR1cm48L3RkPlxuPHRkPkZ1bmN0aW9uKGNhbGxiYWNrOiBGdW5jdGlvbihib29sZWFuLCBvYmplY3QpKTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnZhbGlkYXRlRmllbGQ8L3RkPlxuPHRkPnZhbGlkYXIgdW5vIG8gdmFyaW9zIGVsZW1lbnRvcyBkZSBmb3JtdWxhcmlvPC90ZD5cbjx0ZD5GdW5jdGlvbihwcm9wczogc3RyaW5nIHwgYXJyYXksIGNhbGxiYWNrOiBGdW5jdGlvbihlcnJvck1lc3NhZ2U6IHN0cmluZykpPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cmVzZXRGaWVsZHM8L3RkPlxuPHRkPnJlc3RhYmxlY2UgdG9kb3MgbG9zIGNhbXBvcyB5IGVsaW1pbmEgZWwgcmVzdWx0YWRvIGRlIHZhbGlkYWNpw7NuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5jbGVhclZhbGlkYXRlPC90ZD5cbjx0ZD5ib3JyYSBlbCBtZW5zYWplIGRlIHZhbGlkYWNpw7NuIHBhcmEgZGV0ZXJtaW5hZG9zIGNhbXBvcy4gRWwgcGFyw6FtZXRybyBlcyB1biBwcm9wIG5hbWUgbyB1biBhcnJheSBkZSBwcm9wcyBuYW1lcyBkZSBsb3MgaXRlbXMgZGVsIGZvcm11bGFyaW8gY3V5b3MgbWVuc2FqZXMgZGUgdmFsaWRhY2nDs24gc2UgZWxpbWluYXLDoW4uIFNpIHNlIG9taXRlbiwgc2UgYm9ycmFyw6FuIHRvZG9zIGxvcyBtZW5zYWplcyBkZSB2YWxpZGFjacOzbiBkZSBsb3MgY2FtcG9zLjwvdGQ+XG48dGQ+RnVuY3Rpb24ocHJvcHM6IHN0cmluZyB8IGFycmF5KTwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJmb3JtLWV2ZW50c1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjZm9ybS1ldmVudHNcIj7CtjwvYT4gRm9ybSBFdmVudHM8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPk5vbWJyZTwvdGg+XG48dGg+RGVzY3JpcGNpw7NuPC90aD5cbjx0aD5QYXJhbWV0cm9zPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnZhbGlkYXRlPC90ZD5cbjx0ZD5zZSBkaXNwYXJhIGRlc3B1w6lzIGRlIHZhbGlkYXIgdW4gw610ZW0gZGVsIGZvcm11bGFyaW88L3RkPlxuPHRkPmxhIHByb3BpZWRhZCAoPGNvZGU+cHJvcCBuYW1lPC9jb2RlPikgbm9tYnJlIGRlbCDDrXRlbSBkZWwgZm9ybSBxdWUgc2UgZXN0YSB2YWxpZGFuZG8sIHNpIGxhIHZhbGlkYWNpw7NuIHBhc28gbyBubywgeSBlbCBtZW5zYWplIGRlIGVycm9yIHNpIGV4aXN0ZS48L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwiZm9ybS1pdGVtLWF0cmlidXRvc1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjZm9ybS1pdGVtLWF0cmlidXRvc1wiPsK2PC9hPiBGb3JtLUl0ZW0gQXRyaWJ1dG9zPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5BdHJpYnV0bzwvdGg+XG48dGg+RGVzY3JpcGNpw7NuPC90aD5cbjx0aD5UaXBvPC90aD5cbjx0aD5WYWxvcmVzIGFjZXB0YWRvczwvdGg+XG48dGg+UG9yIGRlZmVjdG88L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+cHJvcDwvdGQ+XG48dGQ+dW4gY2xhdmUgZGVsIG1vZGVsby4gRW4gZWwgdXNvIGRlbCBtw6l0b2RvIDxjb2RlPnZhbGlkYXRlPC9jb2RlPiB5IDxjb2RlPnJlc2V0RmllbGRzPC9jb2RlPiwgZWwgYXRyaWJ1dG8gZXMgb2JsaWdhdG9yaW8uPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPkNsYXZlIGRlbCBtb2RlbG8gcXVlIHNlIGhhIHBhc2FkbyBhICA8Y29kZT5mb3JtPC9jb2RlPjwvdGQ+XG48dGQ+PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bGFiZWw8L3RkPlxuPHRkPmV0aXF1ZXRhPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bGFiZWwtd2lkdGg8L3RkPlxuPHRkPmFuY2hvIGRlIGxhIGV0aXF1ZXRhLCBFamVtcGxvOiAnNTBweCcuIEVsIHZhbG9yIDxjb2RlPmF1dG88L2NvZGU+IGVzdGEgc29wb3J0YWRvPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cmVxdWlyZWQ8L3RkPlxuPHRkPnNpIGVsIGNhbXBvIGVzIG9ibGlnYXRvcmlvIG8gbm8sIGVzdGFyw6EgZGV0ZXJtaW5hZG8gcG9yIGxhcyByZWdsYXMgZGUgdmFsaWRhY2nDs24gc2kgc2Ugb21pdGUuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cnVsZXM8L3RkPlxuPHRkPnJlZ2xhcyBkZSB2YWxpZGFjacOzbiBkZWwgZm9ybTwvdGQ+XG48dGQ+b2JqZWN0PC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmVycm9yPC90ZD5cbjx0ZD5tZW5zYWplIGRlIGVycm9yIGRlIGNhbXBvLCBlc3RhYmxlemNhIHN1IHZhbG9yIHkgZWwgY2FtcG8gdmFsaWRhcsOhIGVsIGVycm9yIHkgbW9zdHJhcsOhIGVzdGUgbWVuc2FqZSBpbm1lZGlhdGFtZW50ZS48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5zaG93LW1lc3NhZ2U8L3RkPlxuPHRkPnNpIG1vc3RyYXIgbyBubyBlbCBtZW5zYWplIGRlIGVycm9yPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPnRydWU8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5pbmxpbmUtbWVzc2FnZTwvdGQ+XG48dGQ+bWVuc2FqZSBkZSB2YWxpZGFjacOzbiBlc3RpbG8gaW5saW5lPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+c2l6ZTwvdGQ+XG48dGQ+VGFtYcOxbyBkZSBsb3MgY29tcG9uZW50ZXMgZW4gZXN0ZSBmb3JtIGl0ZW08L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+bWVkaXVtIC8gc21hbGwgLyBtaW5pPC90ZD5cbjx0ZD4tPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMyBpZD1cImZvcm0taXRlbS1zbG90XCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNmb3JtLWl0ZW0tc2xvdFwiPsK2PC9hPiBGb3JtLUl0ZW0gU2xvdDwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+Tm9tYnJlPC90aD5cbjx0aD5EZXNjcmlwY2nDs248L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+4oCUPC90ZD5cbjx0ZD5jb250ZW5pZG8gZGVsIEZvcm0gSXRlbTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmxhYmVsPC90ZD5cbjx0ZD5jb250ZW5pZG8gZGUgbGEgZXRpcXVldGE8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwiZm9ybS1pdGVtLXNjb3BlZC1zbG90XCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNmb3JtLWl0ZW0tc2NvcGVkLXNsb3RcIj7CtjwvYT4gRm9ybS1JdGVtIFNjb3BlZCBTbG90PC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5OYW1lPC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD5lcnJvcjwvdGQ+XG48dGQ+Q29udGVuaWRvIHBlcnNvbmFsaXphZG8gcGFyYSBtb3N0cmFyIGVsIG1lbnNhamUgZGUgdmFsaWRhY2nDs24uIEVsIHBhcsOhbWV0cm8gZGVsIHNjb3BlIGVzIHsgZXJyb3IgfTwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJmb3JtLWl0ZW0tbWV0b2RvXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNmb3JtLWl0ZW0tbWV0b2RvXCI+wrY8L2E+IEZvcm0tSXRlbSBNZXRvZG88L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPk1ldG9kbzwvdGg+XG48dGg+RGVzY3JpcGNpw7NuPC90aD5cbjx0aD5QYXJhbWV0cm9zPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnJlc2V0RmllbGQ8L3RkPlxuPHRkPnJlc3RhYmxlY2VyIGNhbXBvIGFjdHVhbCB5IGVsaW1pbmFyIHJlc3VsdGFkbyBkZSB2YWxpZGFjacOzbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2xlYXJWYWxpZGF0ZTwvdGQ+XG48dGQ+ZWxpbWluYSBlbCBlc3RhZG8gZGUgbGEgdmFsaWRhY2nDs24gZGUgdW4gY2FtcG88L3RkPlxuPHRkPi08L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuXG4gICAgICA8L3NlY3Rpb24+XG4gICAgPC90ZW1wbGF0ZT5cbiAgICA8c2NyaXB0PlxuICAgICAgaW1wb3J0IGhsanMgZnJvbSAnaGlnaGxpZ2h0LmpzJ1xuICAgICAgaW1wb3J0ICogYXMgVnVlIGZyb20gXCJ2dWVcIlxuICAgICAgZXhwb3J0IGRlZmF1bHQge1xuICAgICAgICBuYW1lOiAnY29tcG9uZW50LWRvYycsXG4gICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICBcImVsZW1lbnQtZGVtbzBcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIHdpdGhDdHg6IF93aXRoQ3R4LCBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfaW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWlucHV0XCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfZm9ybV9pdGVtID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1mb3JtLWl0ZW1cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9vcHRpb24gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLW9wdGlvblwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3NlbGVjdCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtc2VsZWN0XCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWRhdGUtcGlja2VyXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfY29sID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1jb2xcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF90aW1lX3BpY2tlciA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtdGltZS1waWNrZXJcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9zd2l0Y2ggPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXN3aXRjaFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2NoZWNrYm94ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1jaGVja2JveFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2NoZWNrYm94X2dyb3VwID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1jaGVja2JveC1ncm91cFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3JhZGlvID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1yYWRpb1wiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3JhZGlvX2dyb3VwID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1yYWRpby1ncm91cFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtYnV0dG9uXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfZm9ybSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZm9ybVwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF9mb3JtLCB7XG4gICAgcmVmOiBcImZvcm1cIixcbiAgICBtb2RlbDogX2N0eC5mb3JtLFxuICAgIFwibGFiZWwtd2lkdGhcIjogXCIxMjBweFwiXG4gIH0sIHtcbiAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiQWN0aXZpdHkgbmFtZVwiIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmZvcm0ubmFtZSxcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguZm9ybS5uYW1lID0gJGV2ZW50KVxuICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiQWN0aXZpdHkgem9uZVwiIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3NlbGVjdCwge1xuICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5mb3JtLnJlZ2lvbixcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguZm9ybS5yZWdpb24gPSAkZXZlbnQpLFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwicGxlYXNlIHNlbGVjdCB5b3VyIHpvbmVcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfb3B0aW9uLCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiWm9uZSBvbmVcIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCJzaGFuZ2hhaVwiXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9vcHRpb24sIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJab25lIHR3b1wiLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBcImJlaWppbmdcIlxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBsYWJlbDogXCJBY3Rpdml0eSB0aW1lXCIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY29sLCB7IHNwYW46IDExIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcImRhdGVcIixcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJQaWNrIGEgZGF0ZVwiLFxuICAgICAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguZm9ybS5kYXRlMSxcbiAgICAgICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmZvcm0uZGF0ZTEgPSAkZXZlbnQpLFxuICAgICAgICAgICAgICAgIHN0eWxlOiB7XCJ3aWR0aFwiOlwiMTAwJVwifVxuICAgICAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NvbCwge1xuICAgICAgICAgICAgY2xhc3M6IFwibGluZVwiLFxuICAgICAgICAgICAgc3BhbjogMlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIi1cIilcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NvbCwgeyBzcGFuOiAxMSB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3RpbWVfcGlja2VyLCB7XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiUGljayBhIHRpbWVcIixcbiAgICAgICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmZvcm0uZGF0ZTIsXG4gICAgICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5mb3JtLmRhdGUyID0gJGV2ZW50KSxcbiAgICAgICAgICAgICAgICBzdHlsZToge1wid2lkdGhcIjpcIjEwMCVcIn1cbiAgICAgICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9KVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiSW5zdGFudCBkZWxpdmVyeVwiIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3N3aXRjaCwge1xuICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5mb3JtLmRlbGl2ZXJ5LFxuICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5mb3JtLmRlbGl2ZXJ5ID0gJGV2ZW50KVxuICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiQWN0aXZpdHkgdHlwZVwiIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NoZWNrYm94X2dyb3VwLCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmZvcm0udHlwZSxcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguZm9ybS50eXBlID0gJGV2ZW50KVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY2hlY2tib3gsIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJPbmxpbmUgYWN0aXZpdGllc1wiLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwidHlwZVwiXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9jaGVja2JveCwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlByb21vdGlvbiBhY3Rpdml0aWVzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJ0eXBlXCJcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NoZWNrYm94LCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiT2ZmbGluZSBhY3Rpdml0aWVzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJ0eXBlXCJcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NoZWNrYm94LCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiU2ltcGxlIGJyYW5kIGV4cG9zdXJlXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJ0eXBlXCJcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiUmVzb3VyY2VzXCIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfcmFkaW9fZ3JvdXAsIHtcbiAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguZm9ybS5yZXNvdXJjZSxcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguZm9ybS5yZXNvdXJjZSA9ICRldmVudClcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3JhZGlvLCB7IGxhYmVsOiBcIlNwb25zb3JcIiB9KSxcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfcmFkaW8sIHsgbGFiZWw6IFwiVmVudWVcIiB9KVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBsYWJlbDogXCJBY3Rpdml0eSBmb3JtXCIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgICAgIHR5cGU6IFwidGV4dGFyZWFcIixcbiAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguZm9ybS5kZXNjLFxuICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5mb3JtLmRlc2MgPSAkZXZlbnQpXG4gICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgbnVsbCwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgICAgICB0eXBlOiBcInByaW1hcnlcIixcbiAgICAgICAgICAgIG9uQ2xpY2s6IF9jdHgub25TdWJtaXRcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJDcmVhdGVcIilcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwgbnVsbCwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiQ2FuY2VsXCIpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9KVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSlcbiAgICBdKSxcbiAgICBfOiAxXG4gIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsXCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZm9ybToge1xuICAgICAgICAgIG5hbWU6ICcnLFxuICAgICAgICAgIHJlZ2lvbjogJycsXG4gICAgICAgICAgZGF0ZTE6ICcnLFxuICAgICAgICAgIGRhdGUyOiAnJyxcbiAgICAgICAgICBkZWxpdmVyeTogZmFsc2UsXG4gICAgICAgICAgdHlwZTogW10sXG4gICAgICAgICAgcmVzb3VyY2U6ICcnLFxuICAgICAgICAgIGRlc2M6ICcnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIG9uU3VibWl0KCkge1xuICAgICAgICBjb25zb2xlLmxvZygnc3VibWl0IScpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzFcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIHdpdGhDdHg6IF93aXRoQ3R4LCBjcmVhdGVUZXh0Vk5vZGU6IF9jcmVhdGVUZXh0Vk5vZGUsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfaW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWlucHV0XCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfZm9ybV9pdGVtID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1mb3JtLWl0ZW1cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9vcHRpb24gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLW9wdGlvblwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3NlbGVjdCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtc2VsZWN0XCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1idXR0b25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9mb3JtID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1mb3JtXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2Zvcm0sIHtcbiAgICBpbmxpbmU6IHRydWUsXG4gICAgbW9kZWw6IF9jdHguZm9ybUlubGluZSxcbiAgICBjbGFzczogXCJkZW1vLWZvcm0taW5saW5lXCJcbiAgfSwge1xuICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBsYWJlbDogXCJBcHByb3ZlZCBieVwiIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmZvcm1JbmxpbmUudXNlcixcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguZm9ybUlubGluZS51c2VyID0gJGV2ZW50KSxcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIkFwcHJvdmVkIGJ5XCJcbiAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7IGxhYmVsOiBcIkFjdGl2aXR5IHpvbmVcIiB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9zZWxlY3QsIHtcbiAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguZm9ybUlubGluZS5yZWdpb24sXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmZvcm1JbmxpbmUucmVnaW9uID0gJGV2ZW50KSxcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIkFjdGl2aXR5IHpvbmVcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfb3B0aW9uLCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiWm9uZSBvbmVcIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCJzaGFuZ2hhaVwiXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9vcHRpb24sIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJab25lIHR3b1wiLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBcImJlaWppbmdcIlxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgbnVsbCwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgICAgICB0eXBlOiBcInByaW1hcnlcIixcbiAgICAgICAgICAgIG9uQ2xpY2s6IF9jdHgub25TdWJtaXRcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJRdWVyeVwiKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wib25DbGlja1wiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFwiXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZvcm1JbmxpbmU6IHtcbiAgICAgICAgICB1c2VyOiAnJyxcbiAgICAgICAgICByZWdpb246ICcnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIG9uU3VibWl0KCkge1xuICAgICAgICBjb25zb2xlLmxvZygnc3VibWl0IScpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzJcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgY3JlYXRlVGV4dFZOb2RlOiBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eDogX3dpdGhDdHgsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIEZyYWdtZW50OiBfRnJhZ21lbnQsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfcmFkaW9fYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1yYWRpby1idXR0b25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9yYWRpb19ncm91cCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtcmFkaW8tZ3JvdXBcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWZvcm0taXRlbVwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2Zvcm0gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWZvcm1cIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW1xuICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3JhZGlvX2dyb3VwLCB7XG4gICAgICBtb2RlbFZhbHVlOiBfY3R4LmxhYmVsUG9zaXRpb24sXG4gICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmxhYmVsUG9zaXRpb24gPSAkZXZlbnQpLFxuICAgICAgc2l6ZTogXCJzbWFsbFwiXG4gICAgfSwge1xuICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9yYWRpb19idXR0b24sIHsgbGFiZWw6IFwibGVmdFwiIH0sIHtcbiAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiTGVmdFwiKVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIF86IDFcbiAgICAgICAgfSksXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3JhZGlvX2J1dHRvbiwgeyBsYWJlbDogXCJyaWdodFwiIH0sIHtcbiAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiUmlnaHRcIilcbiAgICAgICAgICBdKSxcbiAgICAgICAgICBfOiAxXG4gICAgICAgIH0pLFxuICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9yYWRpb19idXR0b24sIHsgbGFiZWw6IFwidG9wXCIgfSwge1xuICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJUb3BcIilcbiAgICAgICAgICBdKSxcbiAgICAgICAgICBfOiAxXG4gICAgICAgIH0pXG4gICAgICBdKSxcbiAgICAgIF86IDFcbiAgICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSksXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgc3R5bGU6IHtcIm1hcmdpblwiOlwiMjBweFwifSB9KSxcbiAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtLCB7XG4gICAgICBcImxhYmVsLXBvc2l0aW9uXCI6IF9jdHgubGFiZWxQb3NpdGlvbixcbiAgICAgIFwibGFiZWwtd2lkdGhcIjogXCIxMDBweFwiLFxuICAgICAgbW9kZWw6IF9jdHguZm9ybUxhYmVsQWxpZ25cbiAgICB9LCB7XG4gICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBsYWJlbDogXCJOYW1lXCIgfSwge1xuICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguZm9ybUxhYmVsQWxpZ24ubmFtZSxcbiAgICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5mb3JtTGFiZWxBbGlnbi5uYW1lID0gJGV2ZW50KVxuICAgICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgICAgXSksXG4gICAgICAgICAgXzogMVxuICAgICAgICB9KSxcbiAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7IGxhYmVsOiBcIkFjdGl2aXR5IHpvbmVcIiB9LCB7XG4gICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5mb3JtTGFiZWxBbGlnbi5yZWdpb24sXG4gICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguZm9ybUxhYmVsQWxpZ24ucmVnaW9uID0gJGV2ZW50KVxuICAgICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgICAgXSksXG4gICAgICAgICAgXzogMVxuICAgICAgICB9KSxcbiAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7IGxhYmVsOiBcIkFjdGl2aXR5IGZvcm1cIiB9LCB7XG4gICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5mb3JtTGFiZWxBbGlnbi50eXBlLFxuICAgICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmZvcm1MYWJlbEFsaWduLnR5cGUgPSAkZXZlbnQpXG4gICAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgICBdKSxcbiAgICAgICAgICBfOiAxXG4gICAgICAgIH0pXG4gICAgICBdKSxcbiAgICAgIF86IDFcbiAgICB9LCA4IC8qIFBST1BTICovLCBbXCJsYWJlbC1wb3NpdGlvblwiLCBcIm1vZGVsXCJdKVxuICBdLCA2NCAvKiBTVEFCTEVfRlJBR01FTlQgKi8pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBsYWJlbFBvc2l0aW9uOiAncmlnaHQnLFxuICAgICAgICBmb3JtTGFiZWxBbGlnbjoge1xuICAgICAgICAgIG5hbWU6ICcnLFxuICAgICAgICAgIHJlZ2lvbjogJycsXG4gICAgICAgICAgdHlwZTogJydcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW8zXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCB3aXRoQ3R4OiBfd2l0aEN0eCwgY3JlYXRlVGV4dFZOb2RlOiBfY3JlYXRlVGV4dFZOb2RlLCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2lucHV0ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1pbnB1dFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2Zvcm1faXRlbSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZm9ybS1pdGVtXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfb3B0aW9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1vcHRpb25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9zZWxlY3QgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXNlbGVjdFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1kYXRlLXBpY2tlclwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2NvbCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtY29sXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfdGltZV9waWNrZXIgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXRpbWUtcGlja2VyXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfc3dpdGNoID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1zd2l0Y2hcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9jaGVja2JveCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtY2hlY2tib3hcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9jaGVja2JveF9ncm91cCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtY2hlY2tib3gtZ3JvdXBcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9yYWRpbyA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtcmFkaW9cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9yYWRpb19ncm91cCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtcmFkaW8tZ3JvdXBcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9idXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWJ1dHRvblwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2Zvcm0gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWZvcm1cIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZWxfZm9ybSwge1xuICAgIG1vZGVsOiBfY3R4LnJ1bGVGb3JtLFxuICAgIHJ1bGVzOiBfY3R4LnJ1bGVzLFxuICAgIHJlZjogXCJydWxlRm9ybVwiLFxuICAgIFwibGFiZWwtd2lkdGhcIjogXCIxMjBweFwiLFxuICAgIGNsYXNzOiBcImRlbW8tcnVsZUZvcm1cIlxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7XG4gICAgICAgIGxhYmVsOiBcIkFjdGl2aXR5IG5hbWVcIixcbiAgICAgICAgcHJvcDogXCJuYW1lXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnJ1bGVGb3JtLm5hbWUsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnJ1bGVGb3JtLm5hbWUgPSAkZXZlbnQpXG4gICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwge1xuICAgICAgICBsYWJlbDogXCJBY3Rpdml0eSB6b25lXCIsXG4gICAgICAgIHByb3A6IFwicmVnaW9uXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3NlbGVjdCwge1xuICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5ydWxlRm9ybS5yZWdpb24sXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnJ1bGVGb3JtLnJlZ2lvbiA9ICRldmVudCksXG4gICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJBY3Rpdml0eSB6b25lXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX29wdGlvbiwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlpvbmUgb25lXCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwic2hhbmdoYWlcIlxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfb3B0aW9uLCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiWm9uZSB0d29cIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCJiZWlqaW5nXCJcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHtcbiAgICAgICAgbGFiZWw6IFwiQWN0aXZpdHkgdGltZVwiLFxuICAgICAgICByZXF1aXJlZDogXCJcIlxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY29sLCB7IHNwYW46IDExIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7IHByb3A6IFwiZGF0ZTFcIiB9LCB7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlBpY2sgYSBkYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHgucnVsZUZvcm0uZGF0ZTEsXG4gICAgICAgICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgucnVsZUZvcm0uZGF0ZTEgPSAkZXZlbnQpLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZToge1wid2lkdGhcIjpcIjEwMCVcIn1cbiAgICAgICAgICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NvbCwge1xuICAgICAgICAgICAgY2xhc3M6IFwibGluZVwiLFxuICAgICAgICAgICAgc3BhbjogMlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIi1cIilcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NvbCwgeyBzcGFuOiAxMSB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBwcm9wOiBcImRhdGUyXCIgfSwge1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3RpbWVfcGlja2VyLCB7XG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlBpY2sgYSB0aW1lXCIsXG4gICAgICAgICAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHgucnVsZUZvcm0uZGF0ZTIsXG4gICAgICAgICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgucnVsZUZvcm0uZGF0ZTIgPSAkZXZlbnQpLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZToge1wid2lkdGhcIjpcIjEwMCVcIn1cbiAgICAgICAgICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwge1xuICAgICAgICBsYWJlbDogXCJJbnN0YW50IGRlbGl2ZXJ5XCIsXG4gICAgICAgIHByb3A6IFwiZGVsaXZlcnlcIlxuICAgICAgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfc3dpdGNoLCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnJ1bGVGb3JtLmRlbGl2ZXJ5LFxuICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5ydWxlRm9ybS5kZWxpdmVyeSA9ICRldmVudClcbiAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7XG4gICAgICAgIGxhYmVsOiBcIkFjdGl2aXR5IHR5cGVcIixcbiAgICAgICAgcHJvcDogXCJ0eXBlXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NoZWNrYm94X2dyb3VwLCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnJ1bGVGb3JtLnR5cGUsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnJ1bGVGb3JtLnR5cGUgPSAkZXZlbnQpXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9jaGVja2JveCwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIk9ubGluZSBhY3Rpdml0aWVzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJ0eXBlXCJcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NoZWNrYm94LCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiUHJvbW90aW9uIGFjdGl2aXRpZXNcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInR5cGVcIlxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY2hlY2tib3gsIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJPZmZsaW5lIGFjdGl2aXRpZXNcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInR5cGVcIlxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY2hlY2tib3gsIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJTaW1wbGUgYnJhbmQgZXhwb3N1cmVcIixcbiAgICAgICAgICAgICAgICBuYW1lOiBcInR5cGVcIlxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwge1xuICAgICAgICBsYWJlbDogXCJSZXNvdXJjZXNcIixcbiAgICAgICAgcHJvcDogXCJyZXNvdXJjZVwiXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9yYWRpb19ncm91cCwge1xuICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5ydWxlRm9ybS5yZXNvdXJjZSxcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgucnVsZUZvcm0ucmVzb3VyY2UgPSAkZXZlbnQpXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9yYWRpbywgeyBsYWJlbDogXCJTcG9uc29yc2hpcFwiIH0pLFxuICAgICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9yYWRpbywgeyBsYWJlbDogXCJWZW51ZVwiIH0pXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7XG4gICAgICAgIGxhYmVsOiBcIkFjdGl2aXR5IGZvcm1cIixcbiAgICAgICAgcHJvcDogXCJkZXNjXCJcbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgICAgICB0eXBlOiBcInRleHRhcmVhXCIsXG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnJ1bGVGb3JtLmRlc2MsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnJ1bGVGb3JtLmRlc2MgPSAkZXZlbnQpXG4gICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgbnVsbCwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgICAgICB0eXBlOiBcInByaW1hcnlcIixcbiAgICAgICAgICAgIG9uQ2xpY2s6ICRldmVudCA9PiAoX2N0eC5zdWJtaXRGb3JtKCdydWxlRm9ybScpKVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIkNyZWF0ZVwiKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wib25DbGlja1wiXSksXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgICAgICBvbkNsaWNrOiAkZXZlbnQgPT4gKF9jdHgucmVzZXRGb3JtKCdydWxlRm9ybScpKVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIlJlc2V0XCIpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJvbkNsaWNrXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSlcbiAgICBdKSxcbiAgICBfOiAxXG4gIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsXCIsIFwicnVsZXNcIl0pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBydWxlRm9ybToge1xuICAgICAgICAgIG5hbWU6ICcnLFxuICAgICAgICAgIHJlZ2lvbjogJycsXG4gICAgICAgICAgZGF0ZTE6ICcnLFxuICAgICAgICAgIGRhdGUyOiAnJyxcbiAgICAgICAgICBkZWxpdmVyeTogZmFsc2UsXG4gICAgICAgICAgdHlwZTogW10sXG4gICAgICAgICAgcmVzb3VyY2U6ICcnLFxuICAgICAgICAgIGRlc2M6ICcnXG4gICAgICAgIH0sXG4gICAgICAgIHJ1bGVzOiB7XG4gICAgICAgICAgbmFtZTogW1xuICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ1BsZWFzZSBpbnB1dCBBY3Rpdml0eSBuYW1lJywgdHJpZ2dlcjogJ2JsdXInIH0sXG4gICAgICAgICAgICB7IG1pbjogMywgbWF4OiA1LCBtZXNzYWdlOiAnTGVuZ3RoIHNob3VsZCBiZSAzIHRvIDUnLCB0cmlnZ2VyOiAnYmx1cicgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgcmVnaW9uOiBbXG4gICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAnUGxlYXNlIHNlbGVjdCBBY3Rpdml0eSB6b25lJywgdHJpZ2dlcjogJ2NoYW5nZScgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgZGF0ZTE6IFtcbiAgICAgICAgICAgIHsgdHlwZTogJ2RhdGUnLCByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ1BsZWFzZSBwaWNrIGEgZGF0ZScsIHRyaWdnZXI6ICdjaGFuZ2UnIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIGRhdGUyOiBbXG4gICAgICAgICAgICB7IHR5cGU6ICdkYXRlJywgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdQbGVhc2UgcGljayBhIHRpbWUnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICB0eXBlOiBbXG4gICAgICAgICAgICB7IHR5cGU6ICdhcnJheScsIHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAnUGxlYXNlIHNlbGVjdCBhdCBsZWFzdCBvbmUgYWN0aXZpdHkgdHlwZScsIHRyaWdnZXI6ICdjaGFuZ2UnIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHJlc291cmNlOiBbXG4gICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAnUGxlYXNlIHNlbGVjdCBhY3Rpdml0eSByZXNvdXJjZScsIHRyaWdnZXI6ICdjaGFuZ2UnIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIGRlc2M6IFtcbiAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdQbGVhc2UgaW5wdXQgYWN0aXZpdHkgZm9ybScsIHRyaWdnZXI6ICdibHVyJyB9XG4gICAgICAgICAgXVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgc3VibWl0Rm9ybShmb3JtTmFtZSkge1xuICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZSgodmFsaWQpID0+IHtcbiAgICAgICAgICBpZiAodmFsaWQpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdzdWJtaXQhJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7XG4gICAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vNFwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgd2l0aEN0eDogX3dpdGhDdHgsIGNyZWF0ZVRleHRWTm9kZTogX2NyZWF0ZVRleHRWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWZvcm0taXRlbVwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtYnV0dG9uXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfZm9ybSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZm9ybVwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF9mb3JtLCB7XG4gICAgbW9kZWw6IF9jdHgucnVsZUZvcm0sXG4gICAgXCJzdGF0dXMtaWNvblwiOiBcIlwiLFxuICAgIHJ1bGVzOiBfY3R4LnJ1bGVzLFxuICAgIHJlZjogXCJydWxlRm9ybVwiLFxuICAgIFwibGFiZWwtd2lkdGhcIjogXCIxMjBweFwiLFxuICAgIGNsYXNzOiBcImRlbW8tcnVsZUZvcm1cIlxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7XG4gICAgICAgIGxhYmVsOiBcIlBhc3N3b3JkXCIsXG4gICAgICAgIHByb3A6IFwicGFzc1wiXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgICAgICAgdHlwZTogXCJwYXNzd29yZFwiLFxuICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5ydWxlRm9ybS5wYXNzLFxuICAgICAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC5ydWxlRm9ybS5wYXNzID0gJGV2ZW50KSxcbiAgICAgICAgICAgIGF1dG9jb21wbGV0ZTogXCJvZmZcIlxuICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHtcbiAgICAgICAgbGFiZWw6IFwiQ29uZmlybVwiLFxuICAgICAgICBwcm9wOiBcImNoZWNrUGFzc1wiXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgICAgICAgdHlwZTogXCJwYXNzd29yZFwiLFxuICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5ydWxlRm9ybS5jaGVja1Bhc3MsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnJ1bGVGb3JtLmNoZWNrUGFzcyA9ICRldmVudCksXG4gICAgICAgICAgICBhdXRvY29tcGxldGU6IFwib2ZmXCJcbiAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7XG4gICAgICAgIGxhYmVsOiBcIkFnZVwiLFxuICAgICAgICBwcm9wOiBcImFnZVwiXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC5ydWxlRm9ybS5hZ2UsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnJ1bGVGb3JtLmFnZSA9ICRldmVudCksXG4gICAgICAgICAgICBtb2RlbE1vZGlmaWVyczogeyBudW1iZXI6IHRydWUgfVxuICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIG51bGwsIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwge1xuICAgICAgICAgICAgdHlwZTogXCJwcmltYXJ5XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiAkZXZlbnQgPT4gKF9jdHguc3VibWl0Rm9ybSgncnVsZUZvcm0nKSlcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJTdWJtaXRcIilcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwge1xuICAgICAgICAgICAgb25DbGljazogJGV2ZW50ID0+IChfY3R4LnJlc2V0Rm9ybSgncnVsZUZvcm0nKSlcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJSZXNldFwiKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wib25DbGlja1wiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFwiLCBcInJ1bGVzXCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgdmFyIGNoZWNrQWdlID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcignUGxlYXNlIGlucHV0IHRoZSBhZ2UnKSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdQbGVhc2UgaW5wdXQgZGlnaXRzJykpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgPCAxOCkge1xuICAgICAgICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ0FnZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAxOCcpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCAxMDAwKTtcbiAgICAgIH07XG4gICAgICB2YXIgdmFsaWRhdGVQYXNzID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAodmFsdWUgPT09ICcnKSB7XG4gICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdQbGVhc2UgaW5wdXQgdGhlIHBhc3N3b3JkJykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICh0aGlzLnJ1bGVGb3JtLmNoZWNrUGFzcyAhPT0gJycpIHtcbiAgICAgICAgICAgIHRoaXMuJHJlZnMucnVsZUZvcm0udmFsaWRhdGVGaWVsZCgnY2hlY2tQYXNzJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgdmFsaWRhdGVQYXNzMiA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcignUGxlYXNlIGlucHV0IHRoZSBwYXNzd29yZCBhZ2FpbicpKTtcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSAhPT0gdGhpcy5ydWxlRm9ybS5wYXNzKSB7XG4gICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdUd28gaW5wdXRzIGRvblxcJ3QgbWF0Y2ghJykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICByZXR1cm4ge1xuICAgICAgICBydWxlRm9ybToge1xuICAgICAgICAgIHBhc3M6ICcnLFxuICAgICAgICAgIGNoZWNrUGFzczogJycsXG4gICAgICAgICAgYWdlOiAnJ1xuICAgICAgICB9LFxuICAgICAgICBydWxlczoge1xuICAgICAgICAgIHBhc3M6IFtcbiAgICAgICAgICAgIHsgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MsIHRyaWdnZXI6ICdibHVyJyB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBjaGVja1Bhc3M6IFtcbiAgICAgICAgICAgIHsgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MyLCB0cmlnZ2VyOiAnYmx1cicgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgYWdlOiBbXG4gICAgICAgICAgICB7IHZhbGlkYXRvcjogY2hlY2tBZ2UsIHRyaWdnZXI6ICdibHVyJyB9XG4gICAgICAgICAgXVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgc3VibWl0Rm9ybShmb3JtTmFtZSkge1xuICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZSgodmFsaWQpID0+IHtcbiAgICAgICAgICBpZiAodmFsaWQpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdzdWJtaXQhJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7XG4gICAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vNVwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgd2l0aEN0eDogX3dpdGhDdHgsIHJlbmRlckxpc3Q6IF9yZW5kZXJMaXN0LCBGcmFnbWVudDogX0ZyYWdtZW50LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2ssIGNyZWF0ZVRleHRWTm9kZTogX2NyZWF0ZVRleHRWTm9kZSwgd2l0aE1vZGlmaWVyczogX3dpdGhNb2RpZmllcnMgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2lucHV0ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1pbnB1dFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2Zvcm1faXRlbSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZm9ybS1pdGVtXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1idXR0b25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9mb3JtID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1mb3JtXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2Zvcm0sIHtcbiAgICBtb2RlbDogX2N0eC5keW5hbWljVmFsaWRhdGVGb3JtLFxuICAgIHJlZjogXCJkeW5hbWljVmFsaWRhdGVGb3JtXCIsXG4gICAgXCJsYWJlbC13aWR0aFwiOiBcIjEyMHB4XCIsXG4gICAgY2xhc3M6IFwiZGVtby1keW5hbWljXCJcbiAgfSwge1xuICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwge1xuICAgICAgICBwcm9wOiBcImVtYWlsXCIsXG4gICAgICAgIGxhYmVsOiBcIkVtYWlsXCIsXG4gICAgICAgIHJ1bGVzOiBbXG4gICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAnUGxlYXNlIGlucHV0IGVtYWlsIGFkZHJlc3MnLCB0cmlnZ2VyOiAnYmx1cicgfSxcbiAgICAgIHsgdHlwZTogJ2VtYWlsJywgbWVzc2FnZTogJ1BsZWFzZSBpbnB1dCBjb3JyZWN0IGVtYWlsIGFkZHJlc3MnLCB0cmlnZ2VyOiBbJ2JsdXInLCAnY2hhbmdlJ10gfVxuICAgIF1cbiAgICAgIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LmR5bmFtaWNWYWxpZGF0ZUZvcm0uZW1haWwsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LmR5bmFtaWNWYWxpZGF0ZUZvcm0uZW1haWwgPSAkZXZlbnQpXG4gICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChfY3R4LmR5bmFtaWNWYWxpZGF0ZUZvcm0uZG9tYWlucywgKGRvbWFpbiwgaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwge1xuICAgICAgICAgIGxhYmVsOiAnRG9tYWluJyArIGluZGV4LFxuICAgICAgICAgIGtleTogZG9tYWluLmtleSxcbiAgICAgICAgICBwcm9wOiAnZG9tYWlucy4nICsgaW5kZXggKyAnLnZhbHVlJyxcbiAgICAgICAgICBydWxlczoge1xuICAgICAgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdkb21haW4gY2FuIG5vdCBiZSBudWxsJywgdHJpZ2dlcjogJ2JsdXInXG4gICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHtcbiAgICAgICAgICAgICAgbW9kZWxWYWx1ZTogZG9tYWluLnZhbHVlLFxuICAgICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChkb21haW4udmFsdWUgPSAkZXZlbnQpXG4gICAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSksXG4gICAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHtcbiAgICAgICAgICAgICAgb25DbGljazogX3dpdGhNb2RpZmllcnMoJGV2ZW50ID0+IChfY3R4LnJlbW92ZURvbWFpbihkb21haW4pKSwgW1wicHJldmVudFwiXSlcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJEZWxldGVcIilcbiAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgIF86IDFcbiAgICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm9uQ2xpY2tcIl0pXG4gICAgICAgICAgXSksXG4gICAgICAgICAgXzogMlxuICAgICAgICB9LCAxMDMyIC8qIFBST1BTLCBEWU5BTUlDX1NMT1RTICovLCBbXCJsYWJlbFwiLCBcInByb3BcIl0pKVxuICAgICAgfSksIDEyOCAvKiBLRVlFRF9GUkFHTUVOVCAqLykpLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCBudWxsLCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHtcbiAgICAgICAgICAgIHR5cGU6IFwicHJpbWFyeVwiLFxuICAgICAgICAgICAgb25DbGljazogJGV2ZW50ID0+IChfY3R4LnN1Ym1pdEZvcm0oJ2R5bmFtaWNWYWxpZGF0ZUZvcm0nKSlcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJTdWJtaXRcIilcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwgeyBvbkNsaWNrOiBfY3R4LmFkZERvbWFpbiB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJOZXcgZG9tYWluXCIpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJvbkNsaWNrXCJdKSxcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHtcbiAgICAgICAgICAgIG9uQ2xpY2s6ICRldmVudCA9PiAoX2N0eC5yZXNldEZvcm0oJ2R5bmFtaWNWYWxpZGF0ZUZvcm0nKSlcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJSZXNldFwiKVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wib25DbGlja1wiXSlcbiAgICAgICAgXSksXG4gICAgICAgIF86IDFcbiAgICAgIH0pXG4gICAgXSksXG4gICAgXzogMVxuICB9LCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFwiXSkpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGR5bmFtaWNWYWxpZGF0ZUZvcm06IHtcbiAgICAgICAgICBkb21haW5zOiBbe1xuICAgICAgICAgICAga2V5OiAxLFxuICAgICAgICAgICAgdmFsdWU6ICcnXG4gICAgICAgICAgfV0sXG4gICAgICAgICAgZW1haWw6ICcnXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICBzdWJtaXRGb3JtKGZvcm1OYW1lKSB7XG4gICAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKCh2YWxpZCkgPT4ge1xuICAgICAgICAgIGlmICh2YWxpZCkge1xuICAgICAgICAgICAgYWxlcnQoJ3N1Ym1pdCEnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIHN1Ym1pdCEhJyk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICByZXNldEZvcm0oZm9ybU5hbWUpIHtcbiAgICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0ucmVzZXRGaWVsZHMoKTtcbiAgICAgIH0sXG4gICAgICByZW1vdmVEb21haW4oaXRlbSkge1xuICAgICAgICB2YXIgaW5kZXggPSB0aGlzLmR5bmFtaWNWYWxpZGF0ZUZvcm0uZG9tYWlucy5pbmRleE9mKGl0ZW0pO1xuICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgdGhpcy5keW5hbWljVmFsaWRhdGVGb3JtLmRvbWFpbnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGFkZERvbWFpbigpIHtcbiAgICAgICAgdGhpcy5keW5hbWljVmFsaWRhdGVGb3JtLmRvbWFpbnMucHVzaCh7XG4gICAgICAgICAga2V5OiBEYXRlLm5vdygpLFxuICAgICAgICAgIHZhbHVlOiAnJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW82XCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCB3aXRoQ3R4OiBfd2l0aEN0eCwgY3JlYXRlVGV4dFZOb2RlOiBfY3JlYXRlVGV4dFZOb2RlLCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2lucHV0ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1pbnB1dFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2Zvcm1faXRlbSA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZm9ybS1pdGVtXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1idXR0b25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9mb3JtID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1mb3JtXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2Zvcm0sIHtcbiAgICBtb2RlbDogX2N0eC5udW1iZXJWYWxpZGF0ZUZvcm0sXG4gICAgcmVmOiBcIm51bWJlclZhbGlkYXRlRm9ybVwiLFxuICAgIFwibGFiZWwtd2lkdGhcIjogXCIxMDBweFwiLFxuICAgIGNsYXNzOiBcImRlbW8tcnVsZUZvcm1cIlxuICB9LCB7XG4gICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7XG4gICAgICAgIGxhYmVsOiBcImFnZVwiLFxuICAgICAgICBwcm9wOiBcImFnZVwiLFxuICAgICAgICBydWxlczogW1xuICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ2FnZSBpcyByZXF1aXJlZCd9LFxuICAgICAgeyB0eXBlOiAnbnVtYmVyJywgbWVzc2FnZTogJ2FnZSBtdXN0IGJlIGEgbnVtYmVyJ31cbiAgICBdXG4gICAgICB9LCB7XG4gICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwge1xuICAgICAgICAgICAgdHlwZTogXCJhZ2VcIixcbiAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHgubnVtYmVyVmFsaWRhdGVGb3JtLmFnZSxcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgubnVtYmVyVmFsaWRhdGVGb3JtLmFnZSA9ICRldmVudCksXG4gICAgICAgICAgICBtb2RlbE1vZGlmaWVyczogeyBudW1iZXI6IHRydWUgfSxcbiAgICAgICAgICAgIGF1dG9jb21wbGV0ZTogXCJvZmZcIlxuICAgICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIG51bGwsIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwge1xuICAgICAgICAgICAgdHlwZTogXCJwcmltYXJ5XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiAkZXZlbnQgPT4gKF9jdHguc3VibWl0Rm9ybSgnbnVtYmVyVmFsaWRhdGVGb3JtJykpXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiU3VibWl0XCIpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJvbkNsaWNrXCJdKSxcbiAgICAgICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9idXR0b24sIHtcbiAgICAgICAgICAgIG9uQ2xpY2s6ICRldmVudCA9PiAoX2N0eC5yZXNldEZvcm0oJ251bWJlclZhbGlkYXRlRm9ybScpKVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIlJlc2V0XCIpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9LCA4IC8qIFBST1BTICovLCBbXCJvbkNsaWNrXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSlcbiAgICBdKSxcbiAgICBfOiAxXG4gIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsXCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbnVtYmVyVmFsaWRhdGVGb3JtOiB7XG4gICAgICAgICAgYWdlOiAnJ1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgc3VibWl0Rm9ybShmb3JtTmFtZSkge1xuICAgICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZSgodmFsaWQpID0+IHtcbiAgICAgICAgICBpZiAodmFsaWQpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdzdWJtaXQhJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7XG4gICAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vN1wiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgd2l0aEN0eDogX3dpdGhDdHgsIGNyZWF0ZVRleHRWTm9kZTogX2NyZWF0ZVRleHRWTm9kZSwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtaW5wdXRcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWZvcm0taXRlbVwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX29wdGlvbiA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtb3B0aW9uXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfc2VsZWN0ID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1zZWxlY3RcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZGF0ZS1waWNrZXJcIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9jb2wgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWNvbFwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX3RpbWVfcGlja2VyID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC10aW1lLXBpY2tlclwiKVxuICBjb25zdCBfY29tcG9uZW50X2VsX2NoZWNrYm94X2J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtY2hlY2tib3gtYnV0dG9uXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfY2hlY2tib3hfZ3JvdXAgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWNoZWNrYm94LWdyb3VwXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfcmFkaW8gPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXJhZGlvXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfcmFkaW9fZ3JvdXAgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLXJhZGlvLWdyb3VwXCIpXG4gIGNvbnN0IF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1idXR0b25cIilcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9mb3JtID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1mb3JtXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VsX2Zvcm0sIHtcbiAgICByZWY6IFwiZm9ybVwiLFxuICAgIG1vZGVsOiBfY3R4LnNpemVGb3JtLFxuICAgIFwibGFiZWwtd2lkdGhcIjogXCIxMjBweFwiLFxuICAgIHNpemU6IFwibWluaVwiXG4gIH0sIHtcbiAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiQWN0aXZpdHkgbmFtZVwiIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnNpemVGb3JtLm5hbWUsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnNpemVGb3JtLm5hbWUgPSAkZXZlbnQpXG4gICAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBsYWJlbDogXCJBY3Rpdml0eSB6b25lXCIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfc2VsZWN0LCB7XG4gICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnNpemVGb3JtLnJlZ2lvbixcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguc2l6ZUZvcm0ucmVnaW9uID0gJGV2ZW50KSxcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcInBsZWFzZSBzZWxlY3QgeW91ciB6b25lXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX29wdGlvbiwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlpvbmUgb25lXCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwic2hhbmdoYWlcIlxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfb3B0aW9uLCB7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiWm9uZSB0d29cIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCJiZWlqaW5nXCJcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiQWN0aXZpdHkgdGltZVwiIH0sIHtcbiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NvbCwgeyBzcGFuOiAxMSB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJkYXRlXCIsXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiUGljayBhIGRhdGVcIixcbiAgICAgICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnNpemVGb3JtLmRhdGUxLFxuICAgICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguc2l6ZUZvcm0uZGF0ZTEgPSAkZXZlbnQpLFxuICAgICAgICAgICAgICAgIHN0eWxlOiB7XCJ3aWR0aFwiOlwiMTAwJVwifVxuICAgICAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NvbCwge1xuICAgICAgICAgICAgY2xhc3M6IFwibGluZVwiLFxuICAgICAgICAgICAgc3BhbjogMlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtcbiAgICAgICAgICAgICAgX2NyZWF0ZVRleHRWTm9kZShcIi1cIilcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NvbCwgeyBzcGFuOiAxMSB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3RpbWVfcGlja2VyLCB7XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiUGljayBhIHRpbWVcIixcbiAgICAgICAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnNpemVGb3JtLmRhdGUyLFxuICAgICAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguc2l6ZUZvcm0uZGF0ZTIgPSAkZXZlbnQpLFxuICAgICAgICAgICAgICAgIHN0eWxlOiB7XCJ3aWR0aFwiOlwiMTAwJVwifVxuICAgICAgICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBsYWJlbDogXCJBY3Rpdml0eSB0eXBlXCIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfY2hlY2tib3hfZ3JvdXAsIHtcbiAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguc2l6ZUZvcm0udHlwZSxcbiAgICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHguc2l6ZUZvcm0udHlwZSA9ICRldmVudClcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NoZWNrYm94X2J1dHRvbiwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIk9ubGluZSBhY3Rpdml0aWVzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJ0eXBlXCJcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2NoZWNrYm94X2J1dHRvbiwge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlByb21vdGlvbiBhY3Rpdml0aWVzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJ0eXBlXCJcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsgbGFiZWw6IFwiUmVzb3VyY2VzXCIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfcmFkaW9fZ3JvdXAsIHtcbiAgICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHguc2l6ZUZvcm0ucmVzb3VyY2UsXG4gICAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnNpemVGb3JtLnJlc291cmNlID0gJGV2ZW50KSxcbiAgICAgICAgICAgIHNpemU6IFwibWVkaXVtXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX3JhZGlvLCB7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiBcIlwiLFxuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlNwb25zb3JcIlxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfcmFkaW8sIHtcbiAgICAgICAgICAgICAgICBib3JkZXI6IFwiXCIsXG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiVmVudWVcIlxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICBfOiAxXG4gICAgICAgICAgfSwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICAgIF0pLFxuICAgICAgICBfOiAxXG4gICAgICB9KSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgeyBzaXplOiBcImxhcmdlXCIgfSwge1xuICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7XG4gICAgICAgICAgICB0eXBlOiBcInByaW1hcnlcIixcbiAgICAgICAgICAgIG9uQ2xpY2s6IF9jdHgub25TdWJtaXRcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbXG4gICAgICAgICAgICAgIF9jcmVhdGVUZXh0Vk5vZGUoXCJDcmVhdGVcIilcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgXzogMVxuICAgICAgICAgIH0sIDggLyogUFJPUFMgKi8sIFtcIm9uQ2xpY2tcIl0pLFxuICAgICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwgbnVsbCwge1xuICAgICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW1xuICAgICAgICAgICAgICBfY3JlYXRlVGV4dFZOb2RlKFwiQ2FuY2VsXCIpXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgICAgIF86IDFcbiAgICAgICAgICB9KVxuICAgICAgICBdKSxcbiAgICAgICAgXzogMVxuICAgICAgfSlcbiAgICBdKSxcbiAgICBfOiAxXG4gIH0sIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsXCJdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc2l6ZUZvcm06IHtcbiAgICAgICAgICBuYW1lOiAnJyxcbiAgICAgICAgICByZWdpb246ICcnLFxuICAgICAgICAgIGRhdGUxOiAnJyxcbiAgICAgICAgICBkYXRlMjogJycsXG4gICAgICAgICAgZGVsaXZlcnk6IGZhbHNlLFxuICAgICAgICAgIHR5cGU6IFtdLFxuICAgICAgICAgIHJlc291cmNlOiAnJyxcbiAgICAgICAgICBkZXNjOiAnJ1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgb25TdWJtaXQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzdWJtaXQhJyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIDwvc2NyaXB0PlxuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/form.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/form.md?vue&type=template&id=904181b8":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/form.md?vue&type=template&id=904181b8 ***!
  \************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h2 id=\\\"form\\\"><a class=\\\"header-anchor\\\" href=\\\"#form\\\">¶</a> Form</h2><p>Form consiste en <code>input</code>, <code>radio</code>, <code>select</code>, <code>checkbox</code>, etcétera. Con el formulario, usted puede recopilar, verificar y enviar datos.</p><h3 id=\\\"form-basico\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-basico\\\">¶</a> Form básico</h3><p>Incluye todo tipo de entradas, tales como <code>input</code>, <code>select</code>, <code>radio</code> y <code>checkbox</code>.</p>\", 4)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"En cada componente \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"form\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", necesita un campo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"form-item\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para que sea el contenedor del ítem.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-form ref=\\\"form\\\" :model=\\\"form\\\" label-width=\\\"120px\\\">\\n  <el-form-item label=\\\"Activity name\\\">\\n    <el-input v-model=\\\"form.name\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity zone\\\">\\n    <el-select v-model=\\\"form.region\\\" placeholder=\\\"please select your zone\\\">\\n      <el-option label=\\\"Zone one\\\" value=\\\"shanghai\\\"></el-option>\\n      <el-option label=\\\"Zone two\\\" value=\\\"beijing\\\"></el-option>\\n    </el-select>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity time\\\">\\n    <el-col :span=\\\"11\\\">\\n      <el-date-picker type=\\\"date\\\" placeholder=\\\"Pick a date\\\" v-model=\\\"form.date1\\\" style=\\\"width: 100%;\\\"></el-date-picker>\\n    </el-col>\\n    <el-col class=\\\"line\\\" :span=\\\"2\\\">-</el-col>\\n    <el-col :span=\\\"11\\\">\\n      <el-time-picker placeholder=\\\"Pick a time\\\" v-model=\\\"form.date2\\\" style=\\\"width: 100%;\\\"></el-time-picker>\\n    </el-col>\\n  </el-form-item>\\n  <el-form-item label=\\\"Instant delivery\\\">\\n    <el-switch v-model=\\\"form.delivery\\\"></el-switch>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity type\\\">\\n    <el-checkbox-group v-model=\\\"form.type\\\">\\n      <el-checkbox label=\\\"Online activities\\\" name=\\\"type\\\"></el-checkbox>\\n      <el-checkbox label=\\\"Promotion activities\\\" name=\\\"type\\\"></el-checkbox>\\n      <el-checkbox label=\\\"Offline activities\\\" name=\\\"type\\\"></el-checkbox>\\n      <el-checkbox label=\\\"Simple brand exposure\\\" name=\\\"type\\\"></el-checkbox>\\n    </el-checkbox-group>\\n  </el-form-item>\\n  <el-form-item label=\\\"Resources\\\">\\n    <el-radio-group v-model=\\\"form.resource\\\">\\n      <el-radio label=\\\"Sponsor\\\"></el-radio>\\n      <el-radio label=\\\"Venue\\\"></el-radio>\\n    </el-radio-group>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity form\\\">\\n    <el-input type=\\\"textarea\\\" v-model=\\\"form.desc\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item>\\n    <el-button type=\\\"primary\\\" @click=\\\"onSubmit\\\">Create</el-button>\\n    <el-button>Cancel</el-button>\\n  </el-form-item>\\n</el-form>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        form: {\\n          name: '',\\n          region: '',\\n          date1: '',\\n          date2: '',\\n          delivery: false,\\n          type: [],\\n          resource: '',\\n          desc: ''\\n        }\\n      }\\n    },\\n    methods: {\\n      onSubmit() {\\n        console.log('submit!');\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<div class=\\\"tip\\\"><p><a href=\\\"https://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2\\\">W3C</a> reglamenta que</p><blockquote><p><i>Cuando sólo hay un campo de entrada de texto de una sola línea en un formulario, el agente usuario debe aceptar <b>Enter</b> en ese campo como una solicitud para enviar el formulario.</i></p></blockquote><p>Para prevenir este comportamiento, puede agregar <code>@submit.native.prevent</code> on <code>&lt;el-form&gt;</code>.</p></div><h3 id=\\\"formulario-inline\\\"><a class=\\\"header-anchor\\\" href=\\\"#formulario-inline\\\">¶</a> Formulario inline</h3><p>Cuando el espacio vertical es limitado y la forma es relativamente simple, puede ponerlo en una unica línea.</p>\", 3)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Establezca el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"inline\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" como \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"true\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y el formulario sera inline.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-form :inline=\\\"true\\\" :model=\\\"formInline\\\" class=\\\"demo-form-inline\\\">\\n  <el-form-item label=\\\"Approved by\\\">\\n    <el-input v-model=\\\"formInline.user\\\" placeholder=\\\"Approved by\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity zone\\\">\\n    <el-select v-model=\\\"formInline.region\\\" placeholder=\\\"Activity zone\\\">\\n      <el-option label=\\\"Zone one\\\" value=\\\"shanghai\\\"></el-option>\\n      <el-option label=\\\"Zone two\\\" value=\\\"beijing\\\"></el-option>\\n    </el-select>\\n  </el-form-item>\\n  <el-form-item>\\n    <el-button type=\\\"primary\\\" @click=\\\"onSubmit\\\">Query</el-button>\\n  </el-form-item>\\n</el-form>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        formInline: {\\n          user: '',\\n          region: ''\\n        }\\n      }\\n    },\\n    methods: {\\n      onSubmit() {\\n        console.log('submit!');\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"alineamiento\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#alineamiento\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Alineamiento\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Dependiendo de su diseño, hay varias maneras diferentes de alinear el elemento de la etiqueta.\", -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"El atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label-position\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" decide cómo se alinean las etiquetas, puede estar \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"top\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" o \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"left\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Cuando se establece en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"top\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", las etiquetas se colocarán en la parte superior del campo de formulario.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-radio-group v-model=\\\"labelPosition\\\" size=\\\"small\\\">\\n  <el-radio-button label=\\\"left\\\">Left</el-radio-button>\\n  <el-radio-button label=\\\"right\\\">Right</el-radio-button>\\n  <el-radio-button label=\\\"top\\\">Top</el-radio-button>\\n</el-radio-group>\\n<div style=\\\"margin: 20px;\\\"></div>\\n<el-form :label-position=\\\"labelPosition\\\" label-width=\\\"100px\\\" :model=\\\"formLabelAlign\\\">\\n  <el-form-item label=\\\"Name\\\">\\n    <el-input v-model=\\\"formLabelAlign.name\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity zone\\\">\\n    <el-input v-model=\\\"formLabelAlign.region\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity form\\\">\\n    <el-input v-model=\\\"formLabelAlign.type\\\"></el-input>\\n  </el-form-item>\\n</el-form>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        labelPosition: 'right',\\n        formLabelAlign: {\\n          name: '',\\n          region: '',\\n          type: ''\\n        }\\n      };\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"validacion\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#validacion\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Validación\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"El componente \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"form\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" le permite verificar sus datos, ayudándole a encontrar y corregir errores.\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Sólo tiene que añadir el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"rules\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en el componente \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"Form\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", pasar las reglas de validación y establecer el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"prop\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"Form-Item\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" como una clave específica que necesita ser validada. Ver más información en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", { href: \"https://github.com/yiminghe/async-validator\" }, \"async-validator\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-form :model=\\\"ruleForm\\\" :rules=\\\"rules\\\" ref=\\\"ruleForm\\\" label-width=\\\"120px\\\" class=\\\"demo-ruleForm\\\">\\n  <el-form-item label=\\\"Activity name\\\" prop=\\\"name\\\">\\n    <el-input v-model=\\\"ruleForm.name\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity zone\\\" prop=\\\"region\\\">\\n    <el-select v-model=\\\"ruleForm.region\\\" placeholder=\\\"Activity zone\\\">\\n      <el-option label=\\\"Zone one\\\" value=\\\"shanghai\\\"></el-option>\\n      <el-option label=\\\"Zone two\\\" value=\\\"beijing\\\"></el-option>\\n    </el-select>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity time\\\" required>\\n    <el-col :span=\\\"11\\\">\\n      <el-form-item prop=\\\"date1\\\">\\n        <el-date-picker type=\\\"date\\\" placeholder=\\\"Pick a date\\\" v-model=\\\"ruleForm.date1\\\" style=\\\"width: 100%;\\\"></el-date-picker>\\n      </el-form-item>\\n    </el-col>\\n    <el-col class=\\\"line\\\" :span=\\\"2\\\">-</el-col>\\n    <el-col :span=\\\"11\\\">\\n      <el-form-item prop=\\\"date2\\\">\\n        <el-time-picker placeholder=\\\"Pick a time\\\" v-model=\\\"ruleForm.date2\\\" style=\\\"width: 100%;\\\"></el-time-picker>\\n      </el-form-item>\\n    </el-col>\\n  </el-form-item>\\n  <el-form-item label=\\\"Instant delivery\\\" prop=\\\"delivery\\\">\\n    <el-switch v-model=\\\"ruleForm.delivery\\\"></el-switch>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity type\\\" prop=\\\"type\\\">\\n    <el-checkbox-group v-model=\\\"ruleForm.type\\\">\\n      <el-checkbox label=\\\"Online activities\\\" name=\\\"type\\\"></el-checkbox>\\n      <el-checkbox label=\\\"Promotion activities\\\" name=\\\"type\\\"></el-checkbox>\\n      <el-checkbox label=\\\"Offline activities\\\" name=\\\"type\\\"></el-checkbox>\\n      <el-checkbox label=\\\"Simple brand exposure\\\" name=\\\"type\\\"></el-checkbox>\\n    </el-checkbox-group>\\n  </el-form-item>\\n  <el-form-item label=\\\"Resources\\\" prop=\\\"resource\\\">\\n    <el-radio-group v-model=\\\"ruleForm.resource\\\">\\n      <el-radio label=\\\"Sponsorship\\\"></el-radio>\\n      <el-radio label=\\\"Venue\\\"></el-radio>\\n    </el-radio-group>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity form\\\" prop=\\\"desc\\\">\\n    <el-input type=\\\"textarea\\\" v-model=\\\"ruleForm.desc\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item>\\n    <el-button type=\\\"primary\\\" @click=\\\"submitForm('ruleForm')\\\">Create</el-button>\\n    <el-button @click=\\\"resetForm('ruleForm')\\\">Reset</el-button>\\n  </el-form-item>\\n</el-form>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        ruleForm: {\\n          name: '',\\n          region: '',\\n          date1: '',\\n          date2: '',\\n          delivery: false,\\n          type: [],\\n          resource: '',\\n          desc: ''\\n        },\\n        rules: {\\n          name: [\\n            { required: true, message: 'Please input Activity name', trigger: 'blur' },\\n            { min: 3, max: 5, message: 'Length should be 3 to 5', trigger: 'blur' }\\n          ],\\n          region: [\\n            { required: true, message: 'Please select Activity zone', trigger: 'change' }\\n          ],\\n          date1: [\\n            { type: 'date', required: true, message: 'Please pick a date', trigger: 'change' }\\n          ],\\n          date2: [\\n            { type: 'date', required: true, message: 'Please pick a time', trigger: 'change' }\\n          ],\\n          type: [\\n            { type: 'array', required: true, message: 'Please select at least one activity type', trigger: 'change' }\\n          ],\\n          resource: [\\n            { required: true, message: 'Please select activity resource', trigger: 'change' }\\n          ],\\n          desc: [\\n            { required: true, message: 'Please input activity form', trigger: 'blur' }\\n          ]\\n        }\\n      };\\n    },\\n    methods: {\\n      submitForm(formName) {\\n        this.$refs[formName].validate((valid) => {\\n          if (valid) {\\n            alert('submit!');\\n          } else {\\n            console.log('error submit!!');\\n            return false;\\n          }\\n        });\\n      },\\n      resetForm(formName) {\\n        this.$refs[formName].resetFields();\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"reglas-personalizadas-de-validacion\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#reglas-personalizadas-de-validacion\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Reglas personalizadas de validación\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Este ejemplo muestra cómo personalizar sus propias reglas de validación para finalizar una verificación de contraseña de dos pasos.\", -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Aquí utilizamos el \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"status-icon\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para reflejar el resultado de la validación como un icono.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-form :model=\\\"ruleForm\\\" status-icon :rules=\\\"rules\\\" ref=\\\"ruleForm\\\" label-width=\\\"120px\\\" class=\\\"demo-ruleForm\\\">\\n  <el-form-item label=\\\"Password\\\" prop=\\\"pass\\\">\\n    <el-input type=\\\"password\\\" v-model=\\\"ruleForm.pass\\\" autocomplete=\\\"off\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Confirm\\\" prop=\\\"checkPass\\\">\\n    <el-input type=\\\"password\\\" v-model=\\\"ruleForm.checkPass\\\" autocomplete=\\\"off\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Age\\\" prop=\\\"age\\\">\\n    <el-input v-model.number=\\\"ruleForm.age\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item>\\n    <el-button type=\\\"primary\\\" @click=\\\"submitForm('ruleForm')\\\">Submit</el-button>\\n    <el-button @click=\\\"resetForm('ruleForm')\\\">Reset</el-button>\\n  </el-form-item>\\n</el-form>\\n<script>\\n  export default {\\n    data() {\\n      var checkAge = (rule, value, callback) => {\\n        if (!value) {\\n          return callback(new Error('Please input the age'));\\n        }\\n        setTimeout(() => {\\n          if (!Number.isInteger(value)) {\\n            callback(new Error('Please input digits'));\\n          } else {\\n            if (value < 18) {\\n              callback(new Error('Age must be greater than 18'));\\n            } else {\\n              callback();\\n            }\\n          }\\n        }, 1000);\\n      };\\n      var validatePass = (rule, value, callback) => {\\n        if (value === '') {\\n          callback(new Error('Please input the password'));\\n        } else {\\n          if (this.ruleForm.checkPass !== '') {\\n            this.$refs.ruleForm.validateField('checkPass');\\n          }\\n          callback();\\n        }\\n      };\\n      var validatePass2 = (rule, value, callback) => {\\n        if (value === '') {\\n          callback(new Error('Please input the password again'));\\n        } else if (value !== this.ruleForm.pass) {\\n          callback(new Error('Two inputs don\\\\'t match!'));\\n        } else {\\n          callback();\\n        }\\n      };\\n      return {\\n        ruleForm: {\\n          pass: '',\\n          checkPass: '',\\n          age: ''\\n        },\\n        rules: {\\n          pass: [\\n            { validator: validatePass, trigger: 'blur' }\\n          ],\\n          checkPass: [\\n            { validator: validatePass2, trigger: 'blur' }\\n          ],\\n          age: [\\n            { validator: checkAge, trigger: 'blur' }\\n          ]\\n        }\\n      };\\n    },\\n    methods: {\\n      submitForm(formName) {\\n        this.$refs[formName].validate((valid) => {\\n          if (valid) {\\n            alert('submit!');\\n          } else {\\n            console.log('error submit!!');\\n            return false;\\n          }\\n        });\\n      },\\n      resetForm(formName) {\\n        this.$refs[formName].resetFields();\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", { class: \"tip\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Se debe llamar a la función de validación de llamada de retorno personalizada. Ver uso más avanzado en \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", { href: \"https://github.com/yiminghe/async-validator\" }, \"async-validator\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"eliminar-o-agregar-validaciones-dinamicamente\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#eliminar-o-agregar-validaciones-dinamicamente\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Eliminar o agregar validaciones dinamicamente\")\n], -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Además de pasar todas las reglas de validación al mismo tiempo en el componente \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"form\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", también puede pasar las reglas de validación o borrar reglas en un único campo de formulario de forma dinámica.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-form :model=\\\"dynamicValidateForm\\\" ref=\\\"dynamicValidateForm\\\" label-width=\\\"120px\\\" class=\\\"demo-dynamic\\\">\\n  <el-form-item\\n    prop=\\\"email\\\"\\n    label=\\\"Email\\\"\\n    :rules=\\\"[\\n      { required: true, message: 'Please input email address', trigger: 'blur' },\\n      { type: 'email', message: 'Please input correct email address', trigger: ['blur', 'change'] }\\n    ]\\\"\\n  >\\n    <el-input v-model=\\\"dynamicValidateForm.email\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item\\n    v-for=\\\"(domain, index) in dynamicValidateForm.domains\\\"\\n    :label=\\\"'Domain' + index\\\"\\n    :key=\\\"domain.key\\\"\\n    :prop=\\\"'domains.' + index + '.value'\\\"\\n    :rules=\\\"{\\n      required: true, message: 'domain can not be null', trigger: 'blur'\\n    }\\\"\\n  >\\n    <el-input v-model=\\\"domain.value\\\"></el-input><el-button @click.prevent=\\\"removeDomain(domain)\\\">Delete</el-button>\\n  </el-form-item>\\n  <el-form-item>\\n    <el-button type=\\\"primary\\\" @click=\\\"submitForm('dynamicValidateForm')\\\">Submit</el-button>\\n    <el-button @click=\\\"addDomain\\\">New domain</el-button>\\n    <el-button @click=\\\"resetForm('dynamicValidateForm')\\\">Reset</el-button>\\n  </el-form-item>\\n</el-form>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dynamicValidateForm: {\\n          domains: [{\\n            key: 1,\\n            value: ''\\n          }],\\n          email: ''\\n        }\\n      };\\n    },\\n    methods: {\\n      submitForm(formName) {\\n        this.$refs[formName].validate((valid) => {\\n          if (valid) {\\n            alert('submit!');\\n          } else {\\n            console.log('error submit!!');\\n            return false;\\n          }\\n        });\\n      },\\n      resetForm(formName) {\\n        this.$refs[formName].resetFields();\\n      },\\n      removeDomain(item) {\\n        var index = this.dynamicValidateForm.domains.indexOf(item);\\n        if (index !== -1) {\\n          this.dynamicValidateForm.domains.splice(index, 1);\\n        }\\n      },\\n      addDomain() {\\n        this.dynamicValidateForm.domains.push({\\n          key: Date.now(),\\n          value: ''\\n        });\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_29 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"validacion-numerica\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#validacion-numerica\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Validación numerica\")\n], -1 /* HOISTED */)\nconst _hoisted_30 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"La validación numérica necesita un modificador \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \".number\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" añadido en el enlace \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"v-model\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de entrada, sirve para transformar el valor de la cadena al número proporcionado por Vuejs.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_31 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-form :model=\\\"numberValidateForm\\\" ref=\\\"numberValidateForm\\\" label-width=\\\"100px\\\" class=\\\"demo-ruleForm\\\">\\n  <el-form-item\\n    label=\\\"age\\\"\\n    prop=\\\"age\\\"\\n    :rules=\\\"[\\n      { required: true, message: 'age is required'},\\n      { type: 'number', message: 'age must be a number'}\\n    ]\\\"\\n  >\\n    <el-input type=\\\"age\\\" v-model.number=\\\"numberValidateForm.age\\\" autocomplete=\\\"off\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item>\\n    <el-button type=\\\"primary\\\" @click=\\\"submitForm('numberValidateForm')\\\">Submit</el-button>\\n    <el-button @click=\\\"resetForm('numberValidateForm')\\\">Reset</el-button>\\n  </el-form-item>\\n</el-form>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        numberValidateForm: {\\n          age: ''\\n        }\\n      };\\n    },\\n    methods: {\\n      submitForm(formName) {\\n        this.$refs[formName].validate((valid) => {\\n          if (valid) {\\n            alert('submit!');\\n          } else {\\n            console.log('error submit!!');\\n            return false;\\n          }\\n        });\\n      },\\n      resetForm(formName) {\\n        this.$refs[formName].resetFields();\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_32 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<div class=\\\"tip\\\"><p>Cuando un <code>el-form-item</code> está anidado en otro <code>el-form-item</code>, su ancho de etiqueta será 0. Si es necesario, puede establecer el ancho de etiqueta en ese <code>el-form-item</code>.</p></div><h3 id=\\\"tamano-del-control\\\"><a class=\\\"header-anchor\\\" href=\\\"#tamano-del-control\\\">¶</a> Tamaño del control</h3><p>Todos los componentes de un formulario heredan su atributo <code>size</code>. De manera similar, FormItem también tiene un atributo <code>size</code>.</p>\", 3)\nconst _hoisted_35 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Aún así, puede ajustar el \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"size\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" de cada componente si no desea que herede su tamaño de From o FormItem.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_36 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-form ref=\\\"form\\\" :model=\\\"sizeForm\\\" label-width=\\\"120px\\\" size=\\\"mini\\\">\\n  <el-form-item label=\\\"Activity name\\\">\\n    <el-input v-model=\\\"sizeForm.name\\\"></el-input>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity zone\\\">\\n    <el-select v-model=\\\"sizeForm.region\\\" placeholder=\\\"please select your zone\\\">\\n      <el-option label=\\\"Zone one\\\" value=\\\"shanghai\\\"></el-option>\\n      <el-option label=\\\"Zone two\\\" value=\\\"beijing\\\"></el-option>\\n    </el-select>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity time\\\">\\n    <el-col :span=\\\"11\\\">\\n      <el-date-picker type=\\\"date\\\" placeholder=\\\"Pick a date\\\" v-model=\\\"sizeForm.date1\\\" style=\\\"width: 100%;\\\"></el-date-picker>\\n    </el-col>\\n    <el-col class=\\\"line\\\" :span=\\\"2\\\">-</el-col>\\n    <el-col :span=\\\"11\\\">\\n      <el-time-picker placeholder=\\\"Pick a time\\\" v-model=\\\"sizeForm.date2\\\" style=\\\"width: 100%;\\\"></el-time-picker>\\n    </el-col>\\n  </el-form-item>\\n  <el-form-item label=\\\"Activity type\\\">\\n    <el-checkbox-group v-model=\\\"sizeForm.type\\\">\\n      <el-checkbox-button label=\\\"Online activities\\\" name=\\\"type\\\"></el-checkbox-button>\\n      <el-checkbox-button label=\\\"Promotion activities\\\" name=\\\"type\\\"></el-checkbox-button>\\n    </el-checkbox-group>\\n  </el-form-item>\\n  <el-form-item label=\\\"Resources\\\">\\n    <el-radio-group v-model=\\\"sizeForm.resource\\\" size=\\\"medium\\\">\\n      <el-radio border label=\\\"Sponsor\\\"></el-radio>\\n      <el-radio border label=\\\"Venue\\\"></el-radio>\\n    </el-radio-group>\\n  </el-form-item>\\n  <el-form-item size=\\\"large\\\">\\n    <el-button type=\\\"primary\\\" @click=\\\"onSubmit\\\">Create</el-button>\\n    <el-button>Cancel</el-button>\\n  </el-form-item>\\n</el-form>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        sizeForm: {\\n          name: '',\\n          region: '',\\n          date1: '',\\n          date2: '',\\n          delivery: false,\\n          type: [],\\n          resource: '',\\n          desc: ''\\n        }\\n      };\\n    },\\n    methods: {\\n      onSubmit() {\\n        console.log('submit!');\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_37 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"form-atributos\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-atributos\\\">¶</a> Form Atributos</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>model</td><td>Datos del componente</td><td>object</td><td>—</td><td>—</td></tr><tr><td>rules</td><td>Reglas de validación</td><td>object</td><td>—</td><td>—</td></tr><tr><td>inline</td><td>Si el form es inline</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>label-position</td><td>Posición de la etiqueta</td><td>string</td><td>left / right / top</td><td>right</td></tr><tr><td>label-width</td><td>anchura de la etiqueta, por ejemplo, &quot;50px&quot;. Todos sus elementos de formulario hijo directo heredarán este valor. El valor <code>auto</code> está soportado.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label-suffix</td><td>sufijo de la etiqueta</td><td>string</td><td>—</td><td>—</td></tr><tr><td>hide-required-asterisk</td><td>si los campos obligatorios deben tener un asterisco rojo (estrella) al lado de sus etiquetas</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-message</td><td>si mostrar o no el mensaje de error</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>inline-message</td><td>si desea visualizar el mensaje de error inline con la posición del form item</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>status-icon</td><td>si desea visualizar un icono que indique el resultado de la validación</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>validate-on-rule-change</td><td>si se dispara la validación cuando el prop <code>rules</code> cambia</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>el tamaño de los componentes en este form</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>disabled</td><td>si se desactivan todos los componentes del formulario. Si esta en <code>true</code> no puede ser cambiado por el prop <code>disabled</code> individual de los componentes.</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id=\\\"form-metodos\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-metodos\\\">¶</a> Form Metodos</h3><table><thead><tr><th>Metodo</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>validate</td><td>el método para validar todo el formulario. Recibe una llamada como parámetro. Después de la validación, la llamada de retorno se ejecutará con dos parámetros: un booleano que indica si la validación ha pasado, y un objeto que contiene todos los campos que fallaron en la validación. Devuelve una promesa si se omite el return</td><td>Function(callback: Function(boolean, object))</td></tr><tr><td>validateField</td><td>validar uno o varios elementos de formulario</td><td>Function(props: string | array, callback: Function(errorMessage: string))</td></tr><tr><td>resetFields</td><td>restablece todos los campos y elimina el resultado de validación</td><td>—</td></tr><tr><td>clearValidate</td><td>borra el mensaje de validación para determinados campos. El parámetro es un prop name o un array de props names de los items del formulario cuyos mensajes de validación se eliminarán. Si se omiten, se borrarán todos los mensajes de validación de los campos.</td><td>Function(props: string | array)</td></tr></tbody></table><h3 id=\\\"form-events\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-events\\\">¶</a> Form Events</h3><table><thead><tr><th>Nombre</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>validate</td><td>se dispara después de validar un ítem del formulario</td><td>la propiedad (<code>prop name</code>) nombre del ítem del form que se esta validando, si la validación paso o no, y el mensaje de error si existe.</td></tr></tbody></table><h3 id=\\\"form-item-atributos\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-item-atributos\\\">¶</a> Form-Item Atributos</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>prop</td><td>un clave del modelo. En el uso del método <code>validate</code> y <code>resetFields</code>, el atributo es obligatorio.</td><td>string</td><td>Clave del modelo que se ha pasado a <code>form</code></td><td></td></tr><tr><td>label</td><td>etiqueta</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label-width</td><td>ancho de la etiqueta, Ejemplo: &#39;50px&#39;. El valor <code>auto</code> esta soportado</td><td>string</td><td>—</td><td>—</td></tr><tr><td>required</td><td>si el campo es obligatorio o no, estará determinado por las reglas de validación si se omite.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>rules</td><td>reglas de validación del form</td><td>object</td><td>—</td><td>—</td></tr><tr><td>error</td><td>mensaje de error de campo, establezca su valor y el campo validará el error y mostrará este mensaje inmediatamente.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>show-message</td><td>si mostrar o no el mensaje de error</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>inline-message</td><td>mensaje de validación estilo inline</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>Tamaño de los componentes en este form item</td><td>string</td><td>medium / small / mini</td><td>-</td></tr></tbody></table><h3 id=\\\"form-item-slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-item-slot\\\">¶</a> Form-Item Slot</h3><table><thead><tr><th>Nombre</th><th>Descripción</th></tr></thead><tbody><tr><td>—</td><td>contenido del Form Item</td></tr><tr><td>label</td><td>contenido de la etiqueta</td></tr></tbody></table><h3 id=\\\"form-item-scoped-slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-item-scoped-slot\\\">¶</a> Form-Item Scoped Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>error</td><td>Contenido personalizado para mostrar el mensaje de validación. El parámetro del scope es { error }</td></tr></tbody></table><h3 id=\\\"form-item-metodo\\\"><a class=\\\"header-anchor\\\" href=\\\"#form-item-metodo\\\">¶</a> Form-Item Metodo</h3><table><thead><tr><th>Metodo</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>resetField</td><td>restablecer campo actual y eliminar resultado de validación</td><td>—</td></tr><tr><td>clearValidate</td><td>elimina el estado de la validación de un campo</td><td>-</td></tr></tbody></table>\", 14)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_7\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_8,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_11\n      ]),\n      _: 1\n    }),\n    _hoisted_13,\n    _hoisted_14,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_16\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      _: 1\n    }),\n    _hoisted_17,\n    _hoisted_18,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_20\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_19\n      ]),\n      _: 1\n    }),\n    _hoisted_21,\n    _hoisted_22,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_24\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_23\n      ]),\n      _: 1\n    }),\n    _hoisted_25,\n    _hoisted_26,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_28\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_27\n      ]),\n      _: 1\n    }),\n    _hoisted_29,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_31\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_30\n      ]),\n      _: 1\n    }),\n    _hoisted_32,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_36\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_35\n      ]),\n      _: 1\n    }),\n    _hoisted_37\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/form.md?vue&type=template&id=904181b8\n");

/***/ })

}]);