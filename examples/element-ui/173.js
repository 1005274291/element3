(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[173],{

/***/ "./examples/docs/fr-FR/date-picker.md":
/*!********************************************!*\
  !*** ./examples/docs/fr-FR/date-picker.md ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _date_picker_md_vue_type_template_id_48912ffe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date-picker.md?vue&type=template&id=48912ffe */ \"./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe\");\n/* harmony import */ var _date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date-picker.md?vue&type=script&lang=js */ \"./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _date_picker_md_vue_type_template_id_48912ffe__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"48912ffe\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('48912ffe', _date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('48912ffe', _date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./date-picker.md?vue&type=template&id=48912ffe */ \"./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _date_picker_md_vue_type_template_id_48912ffe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date-picker.md?vue&type=template&id=48912ffe */ \"./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe\");\n(() => {\n    api.rerender('48912ffe', _date_picker_md_vue_type_template_id_48912ffe__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/fr-FR/date-picker.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2RhdGUtcGlja2VyLm1kPzc5NWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQXVFO0FBQ1Y7QUFDTDtBQUN4RCwrRUFBTSxVQUFVLG9GQUFNO0FBQ3RCO0FBQ0EsSUFBSSxJQUFVO0FBQ2QsRUFBRSwrRUFBTTtBQUNSO0FBQ0E7QUFDQSxvQ0FBb0MsK0VBQU07QUFDMUMsMkJBQTJCLCtFQUFNO0FBQ2pDOztBQUVBLG9CQUFvQiwwSEFBZ0QsRUFBRTtBQUFBO0FBQ3RFLDZCQUE2QixvRkFBTTtBQUNuQyxHQUFHOztBQUVIOztBQUVBLCtFQUFNOztBQUVTLDhJIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9mci1GUi9kYXRlLXBpY2tlci5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL2RhdGUtcGlja2VyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTQ4OTEyZmZlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZGF0ZS1waWNrZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vZGF0ZS1waWNrZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuc2NyaXB0LnJlbmRlciA9IHJlbmRlclxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgc2NyaXB0Ll9faG1ySWQgPSBcIjQ4OTEyZmZlXCJcbiAgY29uc3QgYXBpID0gX19WVUVfSE1SX1JVTlRJTUVfX1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghYXBpLmNyZWF0ZVJlY29yZCgnNDg5MTJmZmUnLCBzY3JpcHQpKSB7XG4gICAgYXBpLnJlbG9hZCgnNDg5MTJmZmUnLCBzY3JpcHQpXG4gIH1cbiAgXG4gIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9kYXRlLXBpY2tlci5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD00ODkxMmZmZVwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCc0ODkxMmZmZScsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2ZyLUZSL2RhdGUtcGlja2VyLm1kXCJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/date-picker.md\n");

/***/ }),

/***/ "./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js":
/*!********************************************************************!*\
  !*** ./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./date-picker.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_date_picker_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2RhdGUtcGlja2VyLm1kP2M5YWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBZ04iLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2RhdGUtcGlja2VyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2RhdGUtcGlja2VyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2RhdGUtcGlja2VyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe":
/*!**************************************************************************!*\
  !*** ./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe ***!
  \**************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_date_picker_md_vue_type_template_id_48912ffe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./date-picker.md?vue&type=template&id=48912ffe */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_date_picker_md_vue_type_template_id_48912ffe__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2RhdGUtcGlja2VyLm1kP2JkNTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2RhdGUtcGlja2VyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTQ4OTEyZmZlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS01IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2RhdGUtcGlja2VyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTQ4OTEyZmZlXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js ***!
  \***************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Défaut\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value1,\n          \"onUpdate:modelValue\": $event => _ctx.value1 = $event,\n          type: \"date\",\n          placeholder: \"Choississez un jour\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Picker avec raccourcis\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value2,\n          \"onUpdate:modelValue\": $event => _ctx.value2 = $event,\n          type: \"date\",\n          placeholder: \"Choississez un jour\",\n          \"picker-options\": _ctx.pickerOptions\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"picker-options\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            pickerOptions: {\n              disabledDate(time) {\n                return time.getTime() > Date.now();\n              },\n\n              shortcuts: [{\n                text: 'Aujourd\\'hui',\n\n                onClick(picker) {\n                  picker.$emit('pick', new Date());\n                }\n\n              }, {\n                text: 'Hier',\n\n                onClick(picker) {\n                  const date = new Date();\n                  date.setTime(date.getTime() - 3600 * 1000 * 24);\n                  picker.$emit('pick', date);\n                }\n\n              }, {\n                text: 'Il y a une semaine',\n\n                onClick(picker) {\n                  const date = new Date();\n                  date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n                  picker.$emit('pick', date);\n                }\n\n              }]\n            },\n            value1: '',\n            value2: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          class: \"container\"\n        }, [_createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Semaine\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value1,\n          \"onUpdate:modelValue\": $event => _ctx.value1 = $event,\n          type: \"week\",\n          format: \"Week WW\",\n          placeholder: \"Sélectionnez une semaine\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Mois\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value2,\n          \"onUpdate:modelValue\": $event => _ctx.value2 = $event,\n          type: \"month\",\n          placeholder: \"Sélectionnez un mois\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])])]), _createVNode(\"div\", {\n          class: \"container\"\n        }, [_createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Année\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value3,\n          \"onUpdate:modelValue\": $event => _ctx.value3 = $event,\n          type: \"year\",\n          placeholder: \"Sélectionnez une année\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Dates\"), _createVNode(_component_el_date_picker, {\n          type: \"dates\",\n          modelValue: _ctx.value4,\n          \"onUpdate:modelValue\": $event => _ctx.value4 = $event,\n          placeholder: \"Sélectionnez une ou plusieurs dates\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            value1: '',\n            value2: '',\n            value3: '',\n            value4: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Défaut\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value1,\n          \"onUpdate:modelValue\": $event => _ctx.value1 = $event,\n          type: \"daterange\",\n          \"range-separator\": \"à\",\n          \"start-placeholder\": \"Date de début\",\n          \"end-placeholder\": \"Date de fin\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Avec des options\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value2,\n          \"onUpdate:modelValue\": $event => _ctx.value2 = $event,\n          type: \"daterange\",\n          align: \"right\",\n          \"unlink-panels\": \"\",\n          \"range-separator\": \"à\",\n          \"start-placeholder\": \"Date de début\",\n          \"end-placeholder\": \"Date de fin\",\n          \"picker-options\": _ctx.pickerOptions\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"picker-options\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            pickerOptions: {\n              shortcuts: [{\n                text: 'Semaine dernière',\n\n                onClick(picker) {\n                  const end = new Date();\n                  const start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                  picker.$emit('pick', [start, end]);\n                }\n\n              }, {\n                text: 'Mois dernier',\n\n                onClick(picker) {\n                  const end = new Date();\n                  const start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                  picker.$emit('pick', [start, end]);\n                }\n\n              }, {\n                text: 'Trois derniers mois',\n\n                onClick(picker) {\n                  const end = new Date();\n                  const start = new Date();\n                  start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                  picker.$emit('pick', [start, end]);\n                }\n\n              }]\n            },\n            value1: '',\n            value2: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Défaut\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value1,\n          \"onUpdate:modelValue\": $event => _ctx.value1 = $event,\n          type: \"monthrange\",\n          \"range-separator\": \"à\",\n          \"start-placeholder\": \"Mois de début\",\n          \"end-placeholder\": \"Mois de fin\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Avec options\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value2,\n          \"onUpdate:modelValue\": $event => _ctx.value2 = $event,\n          type: \"monthrange\",\n          align: \"right\",\n          \"unlink-panels\": \"\",\n          \"range-separator\": \"à\",\n          \"start-placeholder\": \"Mois de début\",\n          \"end-placeholder\": \"Mois de fin\",\n          \"picker-options\": _ctx.pickerOptions\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"picker-options\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            pickerOptions: {\n              shortcuts: [{\n                text: 'Ce mois',\n\n                onClick(picker) {\n                  picker.$emit('pick', [new Date(), new Date()]);\n                }\n\n              }, {\n                text: 'Cette année',\n\n                onClick(picker) {\n                  const end = new Date();\n                  const start = new Date(new Date().getFullYear(), 0);\n                  picker.$emit('pick', [start, end]);\n                }\n\n              }, {\n                text: 'Les derniers 6 mois',\n\n                onClick(picker) {\n                  const end = new Date();\n                  const start = new Date();\n                  start.setMonth(start.getMonth() - 6);\n                  picker.$emit('pick', [start, end]);\n                }\n\n              }]\n            },\n            value1: '',\n            value2: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Date\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value1,\n          \"onUpdate:modelValue\": $event => _ctx.value1 = $event,\n          type: \"date\",\n          placeholder: \"Sélectionnez une date\",\n          \"default-value\": \"2010-10-01\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Plage de dates\"), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value2,\n          \"onUpdate:modelValue\": $event => _ctx.value2 = $event,\n          type: \"daterange\",\n          align: \"right\",\n          \"start-placeholder\": \"Date de début\",\n          \"end-placeholder\": \"Date de fin\",\n          \"default-value\": \"2010-10-01\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            value1: '',\n            value2: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        createVNode: _createVNode,\n        toDisplayString: _toDisplayString,\n        resolveComponent: _resolveComponent,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Émet un objet Date\"), _createVNode(\"div\", {\n          class: \"demonstration\"\n        }, \"Value: \" + _toDisplayString(_ctx.value1), 1\n        /* TEXT */\n        ), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value1,\n          \"onUpdate:modelValue\": $event => _ctx.value1 = $event,\n          type: \"date\",\n          placeholder: \"Sélectionnez une date\",\n          format: \"yyyy/MM/dd\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Utilise value-format\"), _createVNode(\"div\", {\n          class: \"demonstration\"\n        }, \"Value: \" + _toDisplayString(_ctx.value2), 1\n        /* TEXT */\n        ), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value2,\n          \"onUpdate:modelValue\": $event => _ctx.value2 = $event,\n          type: \"date\",\n          placeholder: \"Sélectionnez une date\",\n          format: \"yyyy/MM/dd\",\n          \"value-format\": \"yyyy-MM-dd\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]), _createVNode(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"span\", {\n          class: \"demonstration\"\n        }, \"Timestamp\"), _createVNode(\"div\", {\n          class: \"demonstration\"\n        }, \"Value：\" + _toDisplayString(_ctx.value3), 1\n        /* TEXT */\n        ), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value3,\n          \"onUpdate:modelValue\": $event => _ctx.value3 = $event,\n          type: \"date\",\n          placeholder: \"Sélectionnez une date\",\n          format: \"yyyy/MM/dd\",\n          \"value-format\": \"timestamp\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            value1: '',\n            value2: '',\n            value3: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        toDisplayString: _toDisplayString,\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n        return _openBlock(), _createBlock(\"div\", {\n          class: \"block\"\n        }, [_createVNode(\"p\", null, \"Valeur: \" + _toDisplayString(_ctx.value), 1\n        /* TEXT */\n        ), _createVNode(_component_el_date_picker, {\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          type: \"daterange\",\n          \"start-placeholder\": \"Date de début\",\n          \"end-placeholder\": \"Date de fin\",\n          \"default-time\": ['00:00:00', '23:59:59']\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"])]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            value: ''\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL2RhdGUtcGlja2VyLm1kPzhiNGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOHpCTTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDZTtBQUNiLE1BQUksRUFBRSxlQURPO0FBRWIsWUFBVSxFQUFFO0FBQ1YscUJBQWtCLFlBQVc7QUFFbkMsWUFBTTtBQUFFLG1CQUFXLEVBQUUsWUFBZjtBQUE2Qix3QkFBZ0IsRUFBRSxpQkFBL0M7QUFBa0UsZ0JBQVEsRUFBRSxTQUE1RTtBQUF1RixpQkFBUyxFQUFFLFVBQWxHO0FBQThHLG1CQUFXLEVBQUU7QUFBM0gsVUFBNEksZ0NBQWxKOztBQUVKLGVBQVMsTUFBVCxDQUFpQixJQUFqQixFQUF1QixNQUF2QixFQUErQjtBQUM3QixjQUFNLHlCQUF3QixHQUFJLGlCQUFpQixDQUFDLGdCQUFELENBQW5EOztBQUVBLGVBQVEsVUFBVSxJQUFJLFlBQVksQ0FBQyxTQUFELEVBQVksSUFBWixFQUFrQixDQUNsRCxZQUFZLENBQUMsS0FBRCxFQUFRO0FBQUUsZUFBSyxFQUFFO0FBQVQsU0FBUixFQUE0QixDQUN0QyxZQUFZLENBQUMsTUFBRCxFQUFTO0FBQUUsZUFBSyxFQUFFO0FBQVQsU0FBVCxFQUFxQyxRQUFyQyxDQUQwQixFQUV0QyxZQUFZLENBQUMseUJBQUQsRUFBNEI7QUFDdEMsb0JBQVUsRUFBRSxJQUFJLENBQUMsTUFEcUI7QUFFdEMsaUNBQXVCLE1BQUssSUFBTSxJQUFJLENBQUMsTUFBTCxHQUFjLE1BRlY7QUFHdEMsY0FBSSxFQUFFLE1BSGdDO0FBSXRDLHFCQUFXLEVBQUU7QUFKeUIsU0FBNUIsRUFLVCxJQUxTLEVBS0g7QUFBRTtBQUxDLFVBS1ksQ0FBQyxZQUFELEVBQWUscUJBQWYsQ0FMWixDQUYwQixDQUE1QixDQURzQyxFQVVsRCxZQUFZLENBQUMsS0FBRCxFQUFRO0FBQUUsZUFBSyxFQUFFO0FBQVQsU0FBUixFQUE0QixDQUN0QyxZ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cyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/IS4vYnVpbGQvbWQtbG9hZGVyL2luZGV4LmpzIS4vZXhhbXBsZXMvZG9jcy9mci1GUi9kYXRlLXBpY2tlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIDx0ZW1wbGF0ZT5cbiAgICAgIDxzZWN0aW9uIGNsYXNzPVwiY29udGVudCBlbGVtZW50LWRvY1wiPlxuICAgICAgICA8aDIgaWQ9XCJkYXRlcGlja2VyXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNkYXRlcGlja2VyXCI+wrY8L2E+IERhdGVQaWNrZXI8L2gyPlxuPHA+VXRpbGlzZXogRGF0ZVBpY2tlciBwb3VyIGxlcyBjaGFtcHMgZGUgZGF0ZXMuPC9wPlxuPGgzIGlkPVwiZW50cmV6LWxhLWRhdGVcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2VudHJlei1sYS1kYXRlXCI+wrY8L2E+IEVudHJleiBsYSBkYXRlPC9oMz5cbjxwPkwndW5pdMOpIGRlIGJhc2UgZHUgRGF0ZVBpY2tlciBlc3QgbGUgam91ci48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5MJ3VuaXTDqSBlc3QgZMOpdGVybWluw6llIHBhciBsJ2F0dHJpYnV0IDxjb2RlPnR5cGU8L2NvZGU+LiBWb3VzIHBvdXZleiBham91dGVyIGRlcyBvcHRpb25zIGVuIGNyw6lhbnQgdW4gb2JqZXQgPGNvZGU+cGlja2VyLW9wdGlvbnM8L2NvZGU+IGF2ZWMgbGEgcHJvcHJpw6l0w6kgPGNvZGU+c2hvcnRjdXRzPC9jb2RlPi4gTCfDqXRhdCBkw6lzYWN0aXbDqSBlc3QgY29udHLDtGzDqSBwYXIgPGNvZGU+ZGlzYWJsZWREYXRlPC9jb2RlPiBxdWkgZXN0IHVuZSBmb25jdGlvbi48L3A+XG48L2Rpdj5cbiAgICAgICAgPHRlbXBsYXRlICNzb3VyY2U+PGVsZW1lbnQtZGVtbzAgLz48L3RlbXBsYXRlPlxuICAgICAgICA8dGVtcGxhdGUgI2hpZ2hsaWdodD48cHJlIHYtcHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiPiZsdDt0ZW1wbGF0ZSZndDtcbiAgJmx0O2RpdiBjbGFzcz0mcXVvdDtibG9jayZxdW90OyZndDtcbiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtkZW1vbnN0cmF0aW9uJnF1b3Q7Jmd0O0TDqWZhdXQmbHQ7L3NwYW4mZ3Q7XG4gICAgJmx0O2VsLWRhdGUtcGlja2VyXG4gICAgICB2LW1vZGVsPSZxdW90O3ZhbHVlMSZxdW90O1xuICAgICAgdHlwZT0mcXVvdDtkYXRlJnF1b3Q7XG4gICAgICBwbGFjZWhvbGRlcj0mcXVvdDtDaG9pc3Npc3NleiB1biBqb3VyJnF1b3Q7Jmd0O1xuICAgICZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7UGlja2VyIGF2ZWMgcmFjY291cmNpcyZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZWwtZGF0ZS1waWNrZXJcbiAgICAgIHYtbW9kZWw9JnF1b3Q7dmFsdWUyJnF1b3Q7XG4gICAgICB0eXBlPSZxdW90O2RhdGUmcXVvdDtcbiAgICAgIHBsYWNlaG9sZGVyPSZxdW90O0Nob2lzc2lzc2V6IHVuIGpvdXImcXVvdDtcbiAgICAgIDpwaWNrZXItb3B0aW9ucz0mcXVvdDtwaWNrZXJPcHRpb25zJnF1b3Q7Jmd0O1xuICAgICZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuJmx0Oy90ZW1wbGF0ZSZndDtcblxuJmx0O3NjcmlwdCZndDtcbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwaWNrZXJPcHRpb25zOiB7XG4gICAgICAgICAgZGlzYWJsZWREYXRlKHRpbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aW1lLmdldFRpbWUoKSAmZ3Q7IERhdGUubm93KCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzaG9ydGN1dHM6IFt7XG4gICAgICAgICAgICB0ZXh0OiAnQXVqb3VyZFxcJ2h1aScsXG4gICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikge1xuICAgICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBuZXcgRGF0ZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICB0ZXh0OiAnSGllcicsXG4gICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikge1xuICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCk7XG4gICAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIGRhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRleHQ6ICdJbCB5IGEgdW5lIHNlbWFpbmUnLFxuICAgICAgICAgICAgb25DbGljayhwaWNrZXIpIHtcbiAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiA3KTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfV1cbiAgICAgICAgfSxcbiAgICAgICAgdmFsdWUxOiAnJyxcbiAgICAgICAgdmFsdWUyOiAnJyxcbiAgICAgIH07XG4gICAgfVxuICB9O1xuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiYXV0cmVzLXVuaXRlc1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjYXV0cmVzLXVuaXRlc1wiPsK2PC9hPiBBdXRyZXMgdW5pdMOpczwvaDM+XG48cD5Wb3VzIHBvdXZleiBzw6lsZWN0aW9ubmVyIHVuZSBzZW1haW5lLCB1biBtb2lzLCB1bmUgYW5uw6llIG91IHBsdXNpZXVycyBkYXRlcyBlbiBham91dGFudCBkZXMgb3B0aW9ucyBncsOiY2UgYXV4IGF0dHJpYnV0cy48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgXG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW8xIC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7ZGl2IGNsYXNzPSZxdW90O2NvbnRhaW5lciZxdW90OyZndDtcbiAgJmx0O2RpdiBjbGFzcz0mcXVvdDtibG9jayZxdW90OyZndDtcbiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtkZW1vbnN0cmF0aW9uJnF1b3Q7Jmd0O1NlbWFpbmUmbHQ7L3NwYW4mZ3Q7XG4gICAgJmx0O2VsLWRhdGUtcGlja2VyXG4gICAgICB2LW1vZGVsPSZxdW90O3ZhbHVlMSZxdW90O1xuICAgICAgdHlwZT0mcXVvdDt3ZWVrJnF1b3Q7XG4gICAgICBmb3JtYXQ9JnF1b3Q7V2VlayBXVyZxdW90O1xuICAgICAgcGxhY2Vob2xkZXI9JnF1b3Q7U8OpbGVjdGlvbm5leiB1bmUgc2VtYWluZSZxdW90OyZndDtcbiAgICAmbHQ7L2VsLWRhdGUtcGlja2VyJmd0O1xuICAmbHQ7L2RpdiZndDtcbiAgJmx0O2RpdiBjbGFzcz0mcXVvdDtibG9jayZxdW90OyZndDtcbiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtkZW1vbnN0cmF0aW9uJnF1b3Q7Jmd0O01vaXMmbHQ7L3NwYW4mZ3Q7XG4gICAgJmx0O2VsLWRhdGUtcGlja2VyXG4gICAgICB2LW1vZGVsPSZxdW90O3ZhbHVlMiZxdW90O1xuICAgICAgdHlwZT0mcXVvdDttb250aCZxdW90O1xuICAgICAgcGxhY2Vob2xkZXI9JnF1b3Q7U8OpbGVjdGlvbm5leiB1biBtb2lzJnF1b3Q7Jmd0O1xuICAgICZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuJmx0Oy9kaXYmZ3Q7XG4mbHQ7ZGl2IGNsYXNzPSZxdW90O2NvbnRhaW5lciZxdW90OyZndDtcbiAgJmx0O2RpdiBjbGFzcz0mcXVvdDtibG9jayZxdW90OyZndDtcbiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtkZW1vbnN0cmF0aW9uJnF1b3Q7Jmd0O0FubsOpZSZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZWwtZGF0ZS1waWNrZXJcbiAgICAgIHYtbW9kZWw9JnF1b3Q7dmFsdWUzJnF1b3Q7XG4gICAgICB0eXBlPSZxdW90O3llYXImcXVvdDtcbiAgICAgIHBsYWNlaG9sZGVyPSZxdW90O1PDqWxlY3Rpb25uZXogdW5lIGFubsOpZSZxdW90OyZndDtcbiAgICAmbHQ7L2VsLWRhdGUtcGlja2VyJmd0O1xuICAmbHQ7L2RpdiZndDtcbiAgJmx0O2RpdiBjbGFzcz0mcXVvdDtibG9jayZxdW90OyZndDtcbiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtkZW1vbnN0cmF0aW9uJnF1b3Q7Jmd0O0RhdGVzJmx0Oy9zcGFuJmd0O1xuICAgICZsdDtlbC1kYXRlLXBpY2tlclxuICAgICAgdHlwZT0mcXVvdDtkYXRlcyZxdW90O1xuICAgICAgdi1tb2RlbD0mcXVvdDt2YWx1ZTQmcXVvdDtcbiAgICAgIHBsYWNlaG9sZGVyPSZxdW90O1PDqWxlY3Rpb25uZXogdW5lIG91IHBsdXNpZXVycyBkYXRlcyZxdW90OyZndDtcbiAgICAmbHQ7L2VsLWRhdGUtcGlja2VyJmd0O1xuICAmbHQ7L2RpdiZndDtcbiZsdDsvZGl2Jmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlMTogJycsXG4gICAgICAgIHZhbHVlMjogJycsXG4gICAgICAgIHZhbHVlMzogJycsXG4gICAgICAgIHZhbHVlNDogJydcbiAgICAgIH07XG4gICAgfVxuICB9O1xuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwicGxhZ2UtZGUtZGF0ZXNcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI3BsYWdlLWRlLWRhdGVzXCI+wrY8L2E+IFBsYWdlIGRlIGRhdGVzPC9oMz5cbjxwPlZvdXMgcG91dmV6IHPDqWxlY3Rpb25uZXIgdW5lIHBsYWdlIGRlIGRhdGVzLjwvcD5cbjxkZW1vLWJsb2NrPlxuICAgICAgICA8ZGl2PjxwPkxvcnNxdWUgY2UgbW9kZSBlc3QgYWN0aXbDqSwgbGVzIGRldXggcGFubmVhdXggc29udCBsacOpcyBwYXIgZMOpZmF1dC4gU2kgdm91cyBzb3VoYWl0ZXogcXUnaWxzIGNoYW5nZW50IGRlIG1vaXMgZGUgbWFuacOocmUgaW5kw6lwZW5kYW50ZSwgYWpvdXRleiBsJ2F0dHJpYnV0IDxjb2RlPnVubGluay1wYW5lbHM8L2NvZGU+LjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMiAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7RMOpZmF1dCZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZWwtZGF0ZS1waWNrZXJcbiAgICAgIHYtbW9kZWw9JnF1b3Q7dmFsdWUxJnF1b3Q7XG4gICAgICB0eXBlPSZxdW90O2RhdGVyYW5nZSZxdW90O1xuICAgICAgcmFuZ2Utc2VwYXJhdG9yPSZxdW90O8OgJnF1b3Q7XG4gICAgICBzdGFydC1wbGFjZWhvbGRlcj0mcXVvdDtEYXRlIGRlIGTDqWJ1dCZxdW90O1xuICAgICAgZW5kLXBsYWNlaG9sZGVyPSZxdW90O0RhdGUgZGUgZmluJnF1b3Q7Jmd0O1xuICAgICZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7QXZlYyBkZXMgb3B0aW9ucyZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZWwtZGF0ZS1waWNrZXJcbiAgICAgIHYtbW9kZWw9JnF1b3Q7dmFsdWUyJnF1b3Q7XG4gICAgICB0eXBlPSZxdW90O2RhdGVyYW5nZSZxdW90O1xuICAgICAgYWxpZ249JnF1b3Q7cmlnaHQmcXVvdDtcbiAgICAgIHVubGluay1wYW5lbHNcbiAgICAgIHJhbmdlLXNlcGFyYXRvcj0mcXVvdDvDoCZxdW90O1xuICAgICAgc3RhcnQtcGxhY2Vob2xkZXI9JnF1b3Q7RGF0ZSBkZSBkw6lidXQmcXVvdDtcbiAgICAgIGVuZC1wbGFjZWhvbGRlcj0mcXVvdDtEYXRlIGRlIGZpbiZxdW90O1xuICAgICAgOnBpY2tlci1vcHRpb25zPSZxdW90O3BpY2tlck9wdGlvbnMmcXVvdDsmZ3Q7XG4gICAgJmx0Oy9lbC1kYXRlLXBpY2tlciZndDtcbiAgJmx0Oy9kaXYmZ3Q7XG4mbHQ7L3RlbXBsYXRlJmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBpY2tlck9wdGlvbnM6IHtcbiAgICAgICAgICBzaG9ydGN1dHM6IFt7XG4gICAgICAgICAgICB0ZXh0OiAnU2VtYWluZSBkZXJuacOocmUnLFxuICAgICAgICAgICAgb25DbGljayhwaWNrZXIpIHtcbiAgICAgICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiA3KTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICB0ZXh0OiAnTW9pcyBkZXJuaWVyJyxcbiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogMzApO1xuICAgICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRleHQ6ICdUcm9pcyBkZXJuaWVycyBtb2lzJyxcbiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogOTApO1xuICAgICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1dXG4gICAgICAgIH0sXG4gICAgICAgIHZhbHVlMTogJycsXG4gICAgICAgIHZhbHVlMjogJydcbiAgICAgIH07XG4gICAgfVxuICB9O1xuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwicGxhZ2UtZGUtbW9pc1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjcGxhZ2UtZGUtbW9pc1wiPsK2PC9hPiBQbGFnZSBkZSBtb2lzPC9oMz5cbjxwPlZvdXMgcG91dmV6IHPDqWxlY3Rpb25uZXIgdW5lIHBsYWdlIGRlIG1vaXMuPC9wPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIDxkaXY+PHA+TG9yc3F1ZSBjZSBtb2RlIGVzdCBhY3RpdsOpLCBsZXMgcGFubmVhdXggZ2F1Y2hlIGV0IGRyb2l0IHNvbnQgbGnDqXMgcGFyIGTDqWZhdXQuIFNpIHZvdXMgdm91bGV6IHF1ZSBsZXMgZGV1eCBwYW5uZWF1eCBzd2l0Y2ggaW5kw6lwZW5kYW1tZW50IGxlcyBhbm7DqWVzIGVuIGNvdXJzLCB2b3VzIHBvdXZleiB1dGlsaXNlciBsJ2F0dHJpYnV0IDxjb2RlPnVubGluay1wYW5lbHM8L2NvZGU+LjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vMyAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7RMOpZmF1dCZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZWwtZGF0ZS1waWNrZXJcbiAgICAgIHYtbW9kZWw9JnF1b3Q7dmFsdWUxJnF1b3Q7XG4gICAgICB0eXBlPSZxdW90O21vbnRocmFuZ2UmcXVvdDtcbiAgICAgIHJhbmdlLXNlcGFyYXRvcj0mcXVvdDvDoCZxdW90O1xuICAgICAgc3RhcnQtcGxhY2Vob2xkZXI9JnF1b3Q7TW9pcyBkZSBkw6lidXQmcXVvdDtcbiAgICAgIGVuZC1wbGFjZWhvbGRlcj0mcXVvdDtNb2lzIGRlIGZpbiZxdW90OyZndDtcbiAgICAmbHQ7L2VsLWRhdGUtcGlja2VyJmd0O1xuICAmbHQ7L2RpdiZndDtcbiAgJmx0O2RpdiBjbGFzcz0mcXVvdDtibG9jayZxdW90OyZndDtcbiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtkZW1vbnN0cmF0aW9uJnF1b3Q7Jmd0O0F2ZWMgb3B0aW9ucyZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZWwtZGF0ZS1waWNrZXJcbiAgICAgIHYtbW9kZWw9JnF1b3Q7dmFsdWUyJnF1b3Q7XG4gICAgICB0eXBlPSZxdW90O21vbnRocmFuZ2UmcXVvdDtcbiAgICAgIGFsaWduPSZxdW90O3JpZ2h0JnF1b3Q7XG4gICAgICB1bmxpbmstcGFuZWxzXG4gICAgICByYW5nZS1zZXBhcmF0b3I9JnF1b3Q7w6AmcXVvdDtcbiAgICAgIHN0YXJ0LXBsYWNlaG9sZGVyPSZxdW90O01vaXMgZGUgZMOpYnV0JnF1b3Q7XG4gICAgICBlbmQtcGxhY2Vob2xkZXI9JnF1b3Q7TW9pcyBkZSBmaW4mcXVvdDtcbiAgICAgIDpwaWNrZXItb3B0aW9ucz0mcXVvdDtwaWNrZXJPcHRpb25zJnF1b3Q7Jmd0O1xuICAgICZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuJmx0Oy90ZW1wbGF0ZSZndDtcblxuJmx0O3NjcmlwdCZndDtcbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwaWNrZXJPcHRpb25zOiB7XG4gICAgICAgICAgc2hvcnRjdXRzOiBbe1xuICAgICAgICAgICAgdGV4dDogJ0NlIG1vaXMnLFxuICAgICAgICAgICAgb25DbGljayhwaWNrZXIpIHtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW25ldyBEYXRlKCksIG5ldyBEYXRlKCldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICB0ZXh0OiAnQ2V0dGUgYW5uw6llJyxcbiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUobmV3IERhdGUoKS5nZXRGdWxsWWVhcigpLCAwKTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICB0ZXh0OiAnTGVzIGRlcm5pZXJzIDYgbW9pcycsXG4gICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikge1xuICAgICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIHN0YXJ0LnNldE1vbnRoKHN0YXJ0LmdldE1vbnRoKCkgLSA2KTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XVxuICAgICAgICB9LFxuICAgICAgICB2YWx1ZTE6ICcnLFxuICAgICAgICB2YWx1ZTI6ICcnXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiZsdDsvc2NyaXB0Jmd0O1xuPC9jb2RlPjwvcHJlPjwvdGVtcGxhdGU+PC9kZW1vLWJsb2NrPjxoMyBpZD1cInZhbGV1ci1wYXItZGVmYXV0XCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiN2YWxldXItcGFyLWRlZmF1dFwiPsK2PC9hPiBWYWxldXIgcGFyIGTDqWZhdXQ8L2gzPlxuPHA+U2kgbCd1dGlsaXNhdGV1ciBuJ2EgcGFzIHPDqWxlY3Rpb25uw6kgZGUgZGF0ZSwgdm91cyBwb3V2ZXogbW9udHJlciBsYSBkYXRlIGQnYXVqb3VyZCdodWkgcGFyIGTDqWZhdXQuIFV0aWxpc2V6IDxjb2RlPmRlZmF1bHQtdmFsdWU8L2NvZGU+IHBvdXIgbW9udHJlciB1bmUgYXV0cmUgZGF0ZS4gU2EgdmFsZXVyIGRvaXQgw6p0cmUgcGFyc2FibGUgcGFyIDxjb2RlPm5ldyBEYXRlKCk8L2NvZGU+LjwvcD5cbjxwPlNpIGxlIHR5cGUgZXN0IDxjb2RlPmRhdGVyYW5nZTwvY29kZT4sIDxjb2RlPmRlZmF1bHQtdmFsdWU8L2NvZGU+IGNvbmZpZ3VyZSBsYSBwYW5uZWF1IGRlIGdhdWNoZS48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgXG4gICAgICAgIDx0ZW1wbGF0ZSAjc291cmNlPjxlbGVtZW50LWRlbW80IC8+PC90ZW1wbGF0ZT5cbiAgICAgICAgPHRlbXBsYXRlICNoaWdobGlnaHQ+PHByZSB2LXByZT48Y29kZSBjbGFzcz1cImh0bWxcIj4mbHQ7dGVtcGxhdGUmZ3Q7XG4gICZsdDtkaXYgY2xhc3M9JnF1b3Q7YmxvY2smcXVvdDsmZ3Q7XG4gICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ZGVtb25zdHJhdGlvbiZxdW90OyZndDtEYXRlJmx0Oy9zcGFuJmd0O1xuICAgICZsdDtlbC1kYXRlLXBpY2tlclxuICAgICAgdi1tb2RlbD0mcXVvdDt2YWx1ZTEmcXVvdDtcbiAgICAgIHR5cGU9JnF1b3Q7ZGF0ZSZxdW90O1xuICAgICAgcGxhY2Vob2xkZXI9JnF1b3Q7U8OpbGVjdGlvbm5leiB1bmUgZGF0ZSZxdW90O1xuICAgICAgZGVmYXVsdC12YWx1ZT0mcXVvdDsyMDEwLTEwLTAxJnF1b3Q7Jmd0O1xuICAgICZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7UGxhZ2UgZGUgZGF0ZXMmbHQ7L3NwYW4mZ3Q7XG4gICAgJmx0O2VsLWRhdGUtcGlja2VyXG4gICAgICB2LW1vZGVsPSZxdW90O3ZhbHVlMiZxdW90O1xuICAgICAgdHlwZT0mcXVvdDtkYXRlcmFuZ2UmcXVvdDtcbiAgICAgIGFsaWduPSZxdW90O3JpZ2h0JnF1b3Q7XG4gICAgICBzdGFydC1wbGFjZWhvbGRlcj0mcXVvdDtEYXRlIGRlIGTDqWJ1dCZxdW90O1xuICAgICAgZW5kLXBsYWNlaG9sZGVyPSZxdW90O0RhdGUgZGUgZmluJnF1b3Q7XG4gICAgICBkZWZhdWx0LXZhbHVlPSZxdW90OzIwMTAtMTAtMDEmcXVvdDsmZ3Q7XG4gICAgJmx0Oy9lbC1kYXRlLXBpY2tlciZndDtcbiAgJmx0Oy9kaXYmZ3Q7XG4mbHQ7L3RlbXBsYXRlJmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlMTogJycsXG4gICAgICAgIHZhbHVlMjogJydcbiAgICAgIH07XG4gICAgfVxuICB9O1xuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiZm9ybWF0cy1kZS1kYXRlXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNmb3JtYXRzLWRlLWRhdGVcIj7CtjwvYT4gRm9ybWF0cyBkZSBkYXRlPC9oMz5cbjxwPlV0aWxpc2V6IDxjb2RlPmZvcm1hdDwvY29kZT4gcG91ciBjb250csO0bGVyIGwnYWZmaWNoYWdlIGRlIGxhIGRhdGUgZGFucyBsZSBjaGFtcC4gVXRpbGlzZXogPGNvZGU+dmFsdWUtZm9ybWF0PC9jb2RlPiBwb3VyIGNvbnRyw7RsZXIgbGUgZm9ybWF0IGRlIGxhIHZhcmlhYmxlIHN0b2Nrw6llLjwvcD5cbjxwPlBhciBkw6lmYXV0LCBsZSBjb21wb3NhbnQgYWNjZXB0ZSBldCDDqW1ldCB1biBvYmpldCA8Y29kZT5EYXRlPC9jb2RlPi4gTGVzIGZvcm1hdHMgc3VwcG9ydMOpcyBzZSB0cm91dmVudCBjaS1kZXNzb3VzLCBhdmVjIGxhIGRhdGUgVVRDIDIwMTctMDEtMDIgMDM6MDQ6MDUgY29tbWUgZXhlbXBsZTo8L3A+XG48ZGl2IGNsYXNzPVwid2FybmluZ1wiPlxuPHA+QXR0ZW50aW9uIMOgIGxhIGNhcGl0YWxpc2F0aW9uICE8L3A+XG48L2Rpdj5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD5Gb3JtYXQ8L3RoPlxuPHRoPlNpZ25pZmljYXRpb248L3RoPlxuPHRoPk5vdGU8L3RoPlxuPHRoPkV4ZW1wbGU8L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+PGNvZGU+eXl5eTwvY29kZT48L3RkPlxuPHRkPkFubsOpZTwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD4yMDE3PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+PGNvZGU+TTwvY29kZT48L3RkPlxuPHRkPk1vaXM8L3RkPlxuPHRkPnBhcyBkZSAwIGF1IGTDqWJ1dDwvdGQ+XG48dGQ+MTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPk1NPC9jb2RlPjwvdGQ+XG48dGQ+TW9pczwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD4wMTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPk1NTTwvY29kZT48L3RkPlxuPHRkPk1vaXM8L3RkPlxuPHRkPjwvdGQ+XG48dGQ+SmFuPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+PGNvZGU+TU1NTTwvY29kZT48L3RkPlxuPHRkPk1vaXM8L3RkPlxuPHRkPjwvdGQ+XG48dGQ+SmFudmllcjwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPlc8L2NvZGU+PC90ZD5cbjx0ZD5TZW1haW5lPC90ZD5cbjx0ZD51bmlxdWVtZW50IHBvdXIgbGVzIDxjb2RlPmZvcm1hdDwvY29kZT4gZGVzIHR5cGVzICdzZW1haW5lJyA7IHBhcyBkZSAwIGF1IGTDqWJ1dDwvdGQ+XG48dGQ+MTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPldXPC9jb2RlPjwvdGQ+XG48dGQ+U2VtYWluZTwvdGQ+XG48dGQ+dW5pcXVlbWVudCBwb3VyIGxlcyA8Y29kZT5mb3JtYXQ8L2NvZGU+IGRlcyB0eXBlcyAnc2VtYWluZSc8L3RkPlxuPHRkPjAxPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+PGNvZGU+ZDwvY29kZT48L3RkPlxuPHRkPkpvdXI8L3RkPlxuPHRkPnBhcyBkZSAwIGF1IGTDqWJ1dDwvdGQ+XG48dGQ+MjwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPmRkPC9jb2RlPjwvdGQ+XG48dGQ+Sm91cjwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD4wMjwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPkg8L2NvZGU+PC90ZD5cbjx0ZD5IZXVyZTwvdGQ+XG48dGQ+SG9ybG9nZSAyNCBoZXVyZXM7IHBhcyBkZSAwIGF1IGTDqWJ1dDwvdGQ+XG48dGQ+MzwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPkhIPC9jb2RlPjwvdGQ+XG48dGQ+SGV1cmU8L3RkPlxuPHRkPkhvcmxvZ2UgMjQgaGV1cmVzPC90ZD5cbjx0ZD4wMzwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPmg8L2NvZGU+PC90ZD5cbjx0ZD5IZXVyZTwvdGQ+XG48dGQ+SG9ybG9nZSAxMiBoZXVyZXMgOyBkb2l0IMOqdHJlIHV0aWxpc8OpIGF2ZWMgPGNvZGU+QTwvY29kZT4gb3UgPGNvZGU+YTwvY29kZT47IHBhcyBkZSAwIGF1IGTDqWJ1dDwvdGQ+XG48dGQ+MzwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPmhoPC9jb2RlPjwvdGQ+XG48dGQ+SGV1cmU8L3RkPlxuPHRkPkhvcmxvZ2UgMTIgaGV1cmVzIDsgZG9pdCDDqnRyZSB1dGlsaXPDqSBhdmVjIDxjb2RlPkE8L2NvZGU+IG91IDxjb2RlPmE8L2NvZGU+PC90ZD5cbjx0ZD4wMzwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPm08L2NvZGU+PC90ZD5cbjx0ZD5NaW51dGU8L3RkPlxuPHRkPnBhcyBkZSAwIGF1IGTDqWJ1dDwvdGQ+XG48dGQ+NDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPm1tPC9jb2RlPjwvdGQ+XG48dGQ+TWludXRlPC90ZD5cbjx0ZD48L3RkPlxuPHRkPjA0PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+PGNvZGU+czwvY29kZT48L3RkPlxuPHRkPlNlY29uZGU8L3RkPlxuPHRkPnBhcyBkZSAwIGF1IGTDqWJ1dDwvdGQ+XG48dGQ+NTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPnNzPC9jb2RlPjwvdGQ+XG48dGQ+U2Vjb25kZTwvdGQ+XG48dGQ+PC90ZD5cbjx0ZD4wNTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPjxjb2RlPkE8L2NvZGU+PC90ZD5cbjx0ZD5BTS9QTTwvdGQ+XG48dGQ+dW5pcXVlbWVudCBwb3VyIDxjb2RlPmZvcm1hdDwvY29kZT4sIG1hanVzY3VsZXM8L3RkPlxuPHRkPkFNPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+PGNvZGU+YTwvY29kZT48L3RkPlxuPHRkPmFtL3BtPC90ZD5cbjx0ZD51bmlxdWVtZW50IHBvdXIgPGNvZGU+Zm9ybWF0PC9jb2RlPiwgbWludXNjdWxlczwvdGQ+XG48dGQ+YW08L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD48Y29kZT50aW1lc3RhbXA8L2NvZGU+PC90ZD5cbjx0ZD50aW1lc3RhbXAgSlM8L3RkPlxuPHRkPnVuaXF1ZW1lbnQgcG91ciA8Y29kZT52YWx1ZS1mb3JtYXQ8L2NvZGU+OyBsYSB2YXJpYWJsZSBzdG9ja8OpZSBzZXJhIHVuIDxjb2RlPm51bWJlcjwvY29kZT48L3RkPlxuPHRkPjE0ODMzMjYyNDUwMDA8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD48Y29kZT5bTU1dPC9jb2RlPjwvdGQ+XG48dGQ+UGFzIGRlIGNhcmFjdMOocmUgZCfDqWNoYXBwZW1lbnQ8L3RkPlxuPHRkPlBvdXIgw6ljaGFwcGVyIGRlcyBjYXJhY3TDqHJlcywgcGxhY2V6LWxlcyBlbnRyZSBjcm9jaGV0cyAoZXg6IFtBXSBbTU1dKTwvdGQ+XG48dGQ+TU08L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGRlbW8tYmxvY2s+XG4gICAgICAgIFxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNSAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7w4ltZXQgdW4gb2JqZXQgRGF0ZSZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7VmFsdWU6IHt7IHZhbHVlMSB9fSZsdDsvZGl2Jmd0O1xuICAgICZsdDtlbC1kYXRlLXBpY2tlclxuICAgICAgdi1tb2RlbD0mcXVvdDt2YWx1ZTEmcXVvdDtcbiAgICAgIHR5cGU9JnF1b3Q7ZGF0ZSZxdW90O1xuICAgICAgcGxhY2Vob2xkZXI9JnF1b3Q7U8OpbGVjdGlvbm5leiB1bmUgZGF0ZSZxdW90O1xuICAgICAgZm9ybWF0PSZxdW90O3l5eXkvTU0vZGQmcXVvdDsmZ3Q7XG4gICAgJmx0Oy9lbC1kYXRlLXBpY2tlciZndDtcbiAgJmx0Oy9kaXYmZ3Q7XG4gICZsdDtkaXYgY2xhc3M9JnF1b3Q7YmxvY2smcXVvdDsmZ3Q7XG4gICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ZGVtb25zdHJhdGlvbiZxdW90OyZndDtVdGlsaXNlIHZhbHVlLWZvcm1hdCZsdDsvc3BhbiZndDtcbiAgICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7VmFsdWU6IHt7IHZhbHVlMiB9fSZsdDsvZGl2Jmd0O1xuICAgICZsdDtlbC1kYXRlLXBpY2tlclxuICAgICAgdi1tb2RlbD0mcXVvdDt2YWx1ZTImcXVvdDtcbiAgICAgIHR5cGU9JnF1b3Q7ZGF0ZSZxdW90O1xuICAgICAgcGxhY2Vob2xkZXI9JnF1b3Q7U8OpbGVjdGlvbm5leiB1bmUgZGF0ZSZxdW90O1xuICAgICAgZm9ybWF0PSZxdW90O3l5eXkvTU0vZGQmcXVvdDtcbiAgICAgIHZhbHVlLWZvcm1hdD0mcXVvdDt5eXl5LU1NLWRkJnF1b3Q7Jmd0O1xuICAgICZsdDsvZWwtZGF0ZS1waWNrZXImZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2RlbW9uc3RyYXRpb24mcXVvdDsmZ3Q7VGltZXN0YW1wJmx0Oy9zcGFuJmd0O1xuICAgICZsdDtkaXYgY2xhc3M9JnF1b3Q7ZGVtb25zdHJhdGlvbiZxdW90OyZndDtWYWx1Ze+8mnt7IHZhbHVlMyB9fSZsdDsvZGl2Jmd0O1xuICAgICZsdDtlbC1kYXRlLXBpY2tlclxuICAgICAgdi1tb2RlbD0mcXVvdDt2YWx1ZTMmcXVvdDtcbiAgICAgIHR5cGU9JnF1b3Q7ZGF0ZSZxdW90O1xuICAgICAgcGxhY2Vob2xkZXI9JnF1b3Q7U8OpbGVjdGlvbm5leiB1bmUgZGF0ZSZxdW90O1xuICAgICAgZm9ybWF0PSZxdW90O3l5eXkvTU0vZGQmcXVvdDtcbiAgICAgIHZhbHVlLWZvcm1hdD0mcXVvdDt0aW1lc3RhbXAmcXVvdDsmZ3Q7XG4gICAgJmx0Oy9lbC1kYXRlLXBpY2tlciZndDtcbiAgJmx0Oy9kaXYmZ3Q7XG4mbHQ7L3RlbXBsYXRlJmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlMTogJycsXG4gICAgICAgIHZhbHVlMjogJycsXG4gICAgICAgIHZhbHVlMzogJydcbiAgICAgIH07XG4gICAgfVxuICB9O1xuJmx0Oy9zY3JpcHQmZ3Q7XG48L2NvZGU+PC9wcmU+PC90ZW1wbGF0ZT48L2RlbW8tYmxvY2s+PGgzIGlkPVwiaG9yYWlyZS1wYXItZGVmYXV0LXBvdXItbGVzLWRhdGVzLWRlLWZpbi1ldC1kZS1kZWJ1dFwiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjaG9yYWlyZS1wYXItZGVmYXV0LXBvdXItbGVzLWRhdGVzLWRlLWZpbi1ldC1kZS1kZWJ1dFwiPsK2PC9hPiBIb3JhaXJlIHBhciBkw6lmYXV0IHBvdXIgbGVzIGRhdGVzIGRlIGZpbiBldCBkZSBkw6lidXQ8L2gzPlxuPHA+TG9yc3F1ZSB2b3VzIGNob2lzaXNzZXogdW5lIHBsYWdlIGRlIGRhdGVzLCB2b3VzIHBvdXZleiBhc3NpZ25lciBsJ2hvcmFpcmUgZGUgZMOpcGFydCBldCBkZSBmaW4gcG91ciBjaGFjdW5lIGRlcyBkYXRlcy48L3A+XG48ZGVtby1ibG9jaz5cbiAgICAgICAgPGRpdj48cD5QYXIgZMOpZmF1dCwgbCdob3JhaXJlIHBvdXIgbGVzIGRhdGVzIGRlIGTDqWJ1dCBldCBkZSBmaW4gZXN0IDxjb2RlPjAwOjAwOjAwPC9jb2RlPi4gQ29uZmlndXJleiA8Y29kZT5kZWZhdWx0LXRpbWU8L2NvZGU+IHBvdXIgY2hhbmdlciBsJ2hvcmFpcmUuIENldCBhdHRyaWJ1dCBwcmVuZHMgdW4gdGFibGVhdSBkZSB1biBvdSBkZXV4IGhvcmFpcmVzIGF1IGZvcm1hdCA8Y29kZT4xMjowMDowMDwvY29kZT4uIExlIHByZW1pZXIgZXN0IHBvdXIgbGEgZGF0ZSBkZSBkw6lidXQsIGxlIGRldXhpw6htZSBwb3VyIGxhIGRhdGUgZGUgZmluLjwvcD5cbjwvZGl2PlxuICAgICAgICA8dGVtcGxhdGUgI3NvdXJjZT48ZWxlbWVudC1kZW1vNiAvPjwvdGVtcGxhdGU+XG4gICAgICAgIDx0ZW1wbGF0ZSAjaGlnaGxpZ2h0PjxwcmUgdi1wcmU+PGNvZGUgY2xhc3M9XCJodG1sXCI+Jmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7ZGl2IGNsYXNzPSZxdW90O2Jsb2NrJnF1b3Q7Jmd0O1xuICAgICZsdDtwJmd0O1ZhbGV1cjoge3sgdmFsdWUgfX0mbHQ7L3AmZ3Q7XG4gICAgJmx0O2VsLWRhdGUtcGlja2VyXG4gICAgICB2LW1vZGVsPSZxdW90O3ZhbHVlJnF1b3Q7XG4gICAgICB0eXBlPSZxdW90O2RhdGVyYW5nZSZxdW90O1xuICAgICAgc3RhcnQtcGxhY2Vob2xkZXI9JnF1b3Q7RGF0ZSBkZSBkw6lidXQmcXVvdDtcbiAgICAgIGVuZC1wbGFjZWhvbGRlcj0mcXVvdDtEYXRlIGRlIGZpbiZxdW90O1xuICAgICAgOmRlZmF1bHQtdGltZT0mcXVvdDtbJzAwOjAwOjAwJywgJzIzOjU5OjU5J10mcXVvdDsmZ3Q7XG4gICAgJmx0Oy9lbC1kYXRlLXBpY2tlciZndDtcbiAgJmx0Oy9kaXYmZ3Q7XG4mbHQ7L3RlbXBsYXRlJmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuICBleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlOiAnJ1xuICAgICAgfTtcbiAgICB9XG4gIH07XG4mbHQ7L3NjcmlwdCZndDtcbjwvY29kZT48L3ByZT48L3RlbXBsYXRlPjwvZGVtby1ibG9jaz48aDMgaWQ9XCJhdHRyaWJ1dHNcIj48YSBjbGFzcz1cImhlYWRlci1hbmNob3JcIiBocmVmPVwiI2F0dHJpYnV0c1wiPsK2PC9hPiBBdHRyaWJ1dHM8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPkF0dHJpYnV0PC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48dGg+VHlwZTwvdGg+XG48dGg+VmFsZXVycyBhY2NlcHTDqWVzPC90aD5cbjx0aD5Ew6lmYXV0PC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnZhbHVlIC8gdi1tb2RlbDwvdGQ+XG48dGQ+TGEgdmFsZXVyIGxpw6llLjwvdGQ+XG48dGQ+ZGF0ZShEYXRlUGlja2VyKSAvIGFycmF5KERhdGVSYW5nZVBpY2tlcik8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cmVhZG9ubHk8L3RkPlxuPHRkPlNpIGxlIERhdGVQaWNrZXIgZXN0IGVuIGxlY3R1cmUgc2V1bGUuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZGlzYWJsZWQ8L3RkPlxuPHRkPlNpIGxlIERhdGVQaWNrZXIgZXN0IGTDqXNhY3RpdsOpLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnNpemU8L3RkPlxuPHRkPlRhaWxsZSBkdSBjaGFtcHMuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPmxhcmdlL3NtYWxsL21pbmk8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmVkaXRhYmxlPC90ZD5cbjx0ZD5TaSBsZSBjaGFtcCBlc3Qgw6lkaXRhYmxlLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD50cnVlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2xlYXJhYmxlPC90ZD5cbjx0ZD5TaSBsYSBjcm9peCBkZSByZXNldCBkb2l0IGFwcGFyYcOudHJlLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD50cnVlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cGxhY2Vob2xkZXI8L3RkPlxuPHRkPkxlIHBsYWNlaG9sZGVyIGVuIG1vZGUgbm9ybWFsLjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnN0YXJ0LXBsYWNlaG9sZGVyPC90ZD5cbjx0ZD5MZSBwbGFjZWhvbGRlciBwb3VyIGxhIGRhdGUgZGUgZMOpYnV0IGVuIG1vZGUgcGxhZ2UgZGUgZGF0ZXMuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZW5kLXBsYWNlaG9sZGVyPC90ZD5cbjx0ZD5MZSBwbGFjZWhvbGRlciBwb3VyIGxhIGRhdGUgZGUgZmluIGVuIG1vZGUgcGxhZ2UgZGUgZGF0ZXMuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dHlwZTwvdGQ+XG48dGQ+VHlwZSBkdSBwaWNrZXIuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPnllYXIvbW9udGgvZGF0ZS9kYXRlcy9kYXRldGltZS8gd2Vlay9kYXRldGltZXJhbmdlL2RhdGVyYW5nZS8gbW9udGhyYW5nZTwvdGQ+XG48dGQ+ZGF0ZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmZvcm1hdDwvdGQ+XG48dGQ+Rm9ybWF0IGQnYWZmaWNoYWdlIGRhbnMgbGUgY2hhbXAuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPlZvaXIgPGEgaHJlZj1cIiMvZnItRlIvY29tcG9uZW50L2RhdGUtcGlja2VyI2Zvcm1hdHMtZGUtZGF0ZVwiPmZvcm1hdHMgZGUgZGF0ZTwvYT4uPC90ZD5cbjx0ZD55eXl5LU1NLWRkPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+YWxpZ248L3RkPlxuPHRkPkFsaWduZW1lbnQuPC90ZD5cbjx0ZD5sZWZ0L2NlbnRlci9yaWdodDwvdGQ+XG48dGQ+bGVmdDwvdGQ+XG48dGQ+PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cG9wcGVyLWNsYXNzPC90ZD5cbjx0ZD5Ob20gZGUgY2xhc3NlIHBvdXIgbGUgbWVudSBkw6lyb3VsYW50IGR1IERhdGVQaWNrZXIuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+cGlja2VyLW9wdGlvbnM8L3RkPlxuPHRkPk9wdGlvbnMgYWRkaXRpb25uZWxsZXMsIHZvaXIgbGEgdGFibGUgY2ktZGVzc291cy48L3RkPlxuPHRkPm9iamVjdDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD57fTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnJhbmdlLXNlcGFyYXRvcjwvdGQ+XG48dGQ+U8OpcGFyYXRldXIgZGUgcGxhZ2UgZGUgZGF0ZXMuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+Jy0nPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZGVmYXVsdC12YWx1ZTwvdGQ+XG48dGQ+RGF0ZSBwYXIgZMOpZmF1dCBkdSBjYWxlbmRyaWVyLCBvcHRpb25uZWxsZS48L3RkPlxuPHRkPkRhdGU8L3RkPlxuPHRkPlRvdXQgY2UgcXVpIGVzdCBhY2NlcHTDqSBwYXIgPGNvZGU+bmV3IERhdGUoKTwvY29kZT48L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmRlZmF1bHQtdGltZTwvdGQ+XG48dGQ+SG9yYWlyZSBwYXIgZMOpZmF1dCBxdWFuZCBvbiBzw6lsZWN0aW9ubmUgdW5lIHBsYWdlIGRhdGVzLCBvcHRpb25uZWwuPC90ZD5cbjx0ZD5zdHJpbmdbXTwvdGQ+XG48dGQ+VGFibGVhdSBkZSB0YWlsbGUgMiwgY2hhcXVlIHZhbGV1ciBlc3QgYXUgZm9ybWF0IDxjb2RlPjEyOjAwOjAwPC9jb2RlPi4gTGEgcHJlbWnDqHJlIHBvdXIgbGEgZGF0ZSBkZSBkw6lidXQsIGxhIGRldXhpw6htZSBwb3VyIGxhIGRhdGUgZGUgZmluLjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dmFsdWUtZm9ybWF0PC90ZD5cbjx0ZD5Gb3JtYXQgZGUgbGEgdmFyaWFibGUgc3RvY2vDqWUsIG9wdGlvbm5lbC4gU2kgbm9uIHNww6ljaWZpw6ksIGxhIHZhbGV1ciBzZXJhIHVuIG9iamV0IERhdGUuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPlZvaXIgPGEgaHJlZj1cIiMvZW4tVVMvY29tcG9uZW50L2RhdGUtcGlja2VyI2Zvcm1hdHMtZGUtZGF0ZVwiPmZvcm1hdHMgZGUgZGF0ZTwvYT48L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm5hbWU8L3RkPlxuPHRkPklkZW50aXF1ZSBhdSA8Y29kZT5uYW1lPC9jb2RlPiBkZSBsJ2lucHV0IG5hdGlmPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dW5saW5rLXBhbmVsczwvdGQ+XG48dGQ+UmVuZCBpbmTDqXBlbmRhbnRzIGxlcyBkZXV4IHBhbm5lYXV4IGRlIHBsYWdlIGRlIGRhdGVzLjwvdGQ+XG48dGQ+Ym9vbGVhbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD5mYWxzZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPnByZWZpeC1pY29uPC90ZD5cbjx0ZD5JY8O0bmUgZGUgcHLDqWZpeGUuPC90ZD5cbjx0ZD5zdHJpbmc8L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+ZWwtaWNvbi1kYXRlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Y2xlYXItaWNvbjwvdGQ+XG48dGQ+SWPDtG5lIGRlIHJlc2V0LjwvdGQ+XG48dGQ+c3RyaW5nPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPmVsLWljb24tY2lyY2xlLWNsb3NlPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+dmFsaWRhdGUtZXZlbnQ8L3RkPlxuPHRkPlNpIGxhIHZhbGlkYXRpb24gZG9pdCDDqnRyZSBkw6ljbGVuY2jDqWUuPC90ZD5cbjx0ZD5ib29sZWFuPC90ZD5cbjx0ZD4tPC90ZD5cbjx0ZD50cnVlPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMyBpZD1cIm9wdGlvbnMtZHUtcGlja2VyXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNvcHRpb25zLWR1LXBpY2tlclwiPsK2PC9hPiBPcHRpb25zIGR1IFBpY2tlcjwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+QXR0cmlidXQ8L3RoPlxuPHRoPkRlc2NyaXB0aW9uPC90aD5cbjx0aD5UeXBlPC90aD5cbjx0aD5WYWxldXJzIGFjY2VwdMOpZXM8L3RoPlxuPHRoPkTDqWZhdXQ8L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+c2hvcnRjdXRzPC90ZD5cbjx0ZD5VbiB0YWJsZWF1IGQnb2JqZXRzIHsgdGV4dCwgb25DbGljayB9IHBvdXIgY29uZmlndXJlciBsZXMgcmFjY291cmNpcywgdm9pciB0YWJsZSBjaS1kZXNzb3VzLjwvdGQ+XG48dGQ+b2JqZWN0W108L3RkPlxuPHRkPuKAlDwvdGQ+XG48dGQ+4oCUPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+ZGlzYWJsZWREYXRlPC90ZD5cbjx0ZD5VbmUgZm9uY3Rpb24gcXVpIGTDqXRlcm1pbmUgc2kgdW5lIGRhdGUgZXN0IGTDqXNhY3RpdsOpZSBvdSBwYXMsIGF2ZWMgY2V0dGUgZGF0ZSBlbiBwYXJhbcOodHJlLiBEb2l0IHJldG91cm5lciB1biBib29sw6llbi48L3RkPlxuPHRkPmZ1bmN0aW9uPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmNlbGxDbGFzc05hbWU8L3RkPlxuPHRkPnNldCBjdXN0b20gY2xhc3NOYW1lPC90ZD5cbjx0ZD5GdW5jdGlvbihEYXRlKTwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5maXJzdERheU9mV2VlazwvdGQ+XG48dGQ+UHJlbWllciBqb3VyIGR1IG1vaXMuPC90ZD5cbjx0ZD5OdW1iZXI8L3RkPlxuPHRkPjEgdG8gNzwvdGQ+XG48dGQ+NzwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPm9uUGljazwvdGQ+XG48dGQ+Q2FsbGJhY2sgc2UgZMOpY2xlbmNoYW50IHF1YW5kIGxhIGRhdGUgc8OpbGVjdGlvbm7DqWUgY2hhbmdlLiBVbmlxdWVtZW50IHBvdXIgPGNvZGU+ZGF0ZXJhbmdlPC9jb2RlPiBldCA8Y29kZT5kYXRldGltZXJhbmdlPC9jb2RlPi48L3RkPlxuPHRkPkZ1bmN0aW9uKHsgbWF4RGF0ZSwgbWluRGF0ZSB9KTwvdGQ+XG48dGQ+LTwvdGQ+XG48dGQ+LTwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJyYWNjb3VyY2lzXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNyYWNjb3VyY2lzXCI+wrY8L2E+IFJhY2NvdXJjaXM8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPkF0dHJpYnV0PC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48dGg+VHlwZTwvdGg+XG48dGg+VmFsZXVycyBhY2NlcHTDqWVzPC90aD5cbjx0aD5Ew6lmYXV0PC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnRleHQ8L3RkPlxuPHRkPlRpdHJlIGR1IHJhY2NvdXJjaS48L3RkPlxuPHRkPnN0cmluZzwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5vbkNsaWNrPC90ZD5cbjx0ZD5DYWxsYmFjayBzZSBkw6ljbGVuY2hhbnQgcXVhbmQgbGUgcmFjY291cmNpIGVzdCBjbGlxdcOpLCBhdmVjIDxjb2RlPnZtPC9jb2RlPiBlbiBwYXJhbcOodHJlLiBWb3VzIHBvdXZleiBjaGFuZ2VyIGxhIHZhbGV1ciBkdSBwaWNrZXIgZW4gw6ltZXR0YW50IGwnw6l2w6huZW1lbnQgPGNvZGU+cGljazwvY29kZT4uIEV4ZW1wbGU6IDxjb2RlPnZtLiRlbWl0KCdwaWNrJywgbmV3IERhdGUoKSk8L2NvZGU+PC90ZD5cbjx0ZD5mdW5jdGlvbjwvdGQ+XG48dGQ+4oCUPC90ZD5cbjx0ZD7igJQ8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzIGlkPVwiZXZlbmVtZW50c1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjZXZlbmVtZW50c1wiPsK2PC9hPiDDiXbDqG5lbWVudHM8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPk5vbTwvdGg+XG48dGg+RGVzY3JpcHRpb248L3RoPlxuPHRoPlBhcmFtw6h0cmVzPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPmNoYW5nZTwvdGQ+XG48dGQ+U2UgZMOpY2xlbmNoZSBxdWFuZCBsJ3V0aWxpc2F0ZXVyIGNvbmZpcm1lIGxhIHZhbGV1cjwvdGQ+XG48dGQ+Y29tcG9uZW50J3MgYmluZGluZyB2YWx1ZTwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmJsdXI8L3RkPlxuPHRkPlNlIGTDqWNsZW5jaGUgcXVhbmQgbGUgY2hhbXAgcGVyZHMgbGUgZm9jdXMuPC90ZD5cbjx0ZD5jb21wb25lbnQgaW5zdGFuY2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5mb2N1czwvdGQ+XG48dGQ+U2UgZMOpY2xlbmNoZSBxdWFuZCBsZSBjaGFtcCBhIGxlIGZvY3VzLjwvdGQ+XG48dGQ+Y29tcG9uZW50IGluc3RhbmNlPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cbjxoMyBpZD1cIm1ldGhvZGVzXCI+PGEgY2xhc3M9XCJoZWFkZXItYW5jaG9yXCIgaHJlZj1cIiNtZXRob2Rlc1wiPsK2PC9hPiBNw6l0aG9kZXM8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPk3DqXRob2RlPC90aD5cbjx0aD5EZXNjcmlwdGlvbjwvdGg+XG48dGg+UGFyYW3DqHRyZXM8L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+Zm9jdXM8L3RkPlxuPHRkPkZvY3VzIHN1ciBsZSBjaGFtcC48L3RkPlxuPHRkPuKAlDwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDMgaWQ9XCJzbG90c1wiPjxhIGNsYXNzPVwiaGVhZGVyLWFuY2hvclwiIGhyZWY9XCIjc2xvdHNcIj7CtjwvYT4gU2xvdHM8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPk5vbTwvdGg+XG48dGg+RGVzY3JpcHRpb248L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+cmFuZ2Utc2VwYXJhdG9yPC90ZD5cbjx0ZD5Tw6lwYXJhdGV1ciBkJ2ludGVydmFsbGUgcGVyc29ubmFsaXPDqS48L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuXG4gICAgICA8L3NlY3Rpb24+XG4gICAgPC90ZW1wbGF0ZT5cbiAgICA8c2NyaXB0PlxuICAgICAgaW1wb3J0IGhsanMgZnJvbSAnaGlnaGxpZ2h0LmpzJ1xuICAgICAgaW1wb3J0ICogYXMgVnVlIGZyb20gXCJ2dWVcIlxuICAgICAgZXhwb3J0IGRlZmF1bHQge1xuICAgICAgICBuYW1lOiAnY29tcG9uZW50LWRvYycsXG4gICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICBcImVsZW1lbnQtZGVtbzBcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudDogX3Jlc29sdmVDb21wb25lbnQsIEZyYWdtZW50OiBfRnJhZ21lbnQsIG9wZW5CbG9jazogX29wZW5CbG9jaywgY3JlYXRlQmxvY2s6IF9jcmVhdGVCbG9jayB9ID0gVnVlXG5cbmZ1bmN0aW9uIHJlbmRlciAoX2N0eCwgX2NhY2hlKSB7XG4gIGNvbnN0IF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIgPSBfcmVzb2x2ZUNvbXBvbmVudChcImVsLWRhdGUtcGlja2VyXCIpXG5cbiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgeyBjbGFzczogXCJibG9ja1wiIH0sIFtcbiAgICAgIF9jcmVhdGVWTm9kZShcInNwYW5cIiwgeyBjbGFzczogXCJkZW1vbnN0cmF0aW9uXCIgfSwgXCJEw6lmYXV0XCIpLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC52YWx1ZTEsXG4gICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgudmFsdWUxID0gJGV2ZW50KSxcbiAgICAgICAgdHlwZTogXCJkYXRlXCIsXG4gICAgICAgIHBsYWNlaG9sZGVyOiBcIkNob2lzc2lzc2V6IHVuIGpvdXJcIlxuICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgXSksXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiYmxvY2tcIiB9LCBbXG4gICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiUGlja2VyIGF2ZWMgcmFjY291cmNpc1wiKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyLCB7XG4gICAgICAgIG1vZGVsVmFsdWU6IF9jdHgudmFsdWUyLFxuICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMiA9ICRldmVudCksXG4gICAgICAgIHR5cGU6IFwiZGF0ZVwiLFxuICAgICAgICBwbGFjZWhvbGRlcjogXCJDaG9pc3Npc3NleiB1biBqb3VyXCIsXG4gICAgICAgIFwicGlja2VyLW9wdGlvbnNcIjogX2N0eC5waWNrZXJPcHRpb25zXG4gICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiLCBcInBpY2tlci1vcHRpb25zXCJdKVxuICAgIF0pXG4gIF0sIDY0IC8qIFNUQUJMRV9GUkFHTUVOVCAqLykpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBpY2tlck9wdGlvbnM6IHtcbiAgICAgICAgICBkaXNhYmxlZERhdGUodGltZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRpbWUuZ2V0VGltZSgpID4gRGF0ZS5ub3coKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNob3J0Y3V0czogW3tcbiAgICAgICAgICAgIHRleHQ6ICdBdWpvdXJkXFwnaHVpJyxcbiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7XG4gICAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIG5ldyBEYXRlKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRleHQ6ICdIaWVyJyxcbiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICBkYXRlLnNldFRpbWUoZGF0ZS5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0KTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgdGV4dDogJ0lsIHkgYSB1bmUgc2VtYWluZScsXG4gICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikge1xuICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDcpO1xuICAgICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBkYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XVxuICAgICAgICB9LFxuICAgICAgICB2YWx1ZTE6ICcnLFxuICAgICAgICB2YWx1ZTI6ICcnLFxuICAgICAgfTtcbiAgICB9XG4gIH07XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vMVwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgRnJhZ21lbnQ6IF9GcmFnbWVudCwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZGF0ZS1waWNrZXJcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW1xuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImNvbnRhaW5lclwiIH0sIFtcbiAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiU2VtYWluZVwiKSxcbiAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnZhbHVlMSxcbiAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMSA9ICRldmVudCksXG4gICAgICAgICAgdHlwZTogXCJ3ZWVrXCIsXG4gICAgICAgICAgZm9ybWF0OiBcIldlZWsgV1dcIixcbiAgICAgICAgICBwbGFjZWhvbGRlcjogXCJTw6lsZWN0aW9ubmV6IHVuZSBzZW1haW5lXCJcbiAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICBdKSxcbiAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiTW9pc1wiKSxcbiAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnZhbHVlMixcbiAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMiA9ICRldmVudCksXG4gICAgICAgICAgdHlwZTogXCJtb250aFwiLFxuICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlPDqWxlY3Rpb25uZXogdW4gbW9pc1wiXG4gICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgICAgXSlcbiAgICBdKSxcbiAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgeyBjbGFzczogXCJjb250YWluZXJcIiB9LCBbXG4gICAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgeyBjbGFzczogXCJibG9ja1wiIH0sIFtcbiAgICAgICAgX2NyZWF0ZVZOb2RlKFwic3BhblwiLCB7IGNsYXNzOiBcImRlbW9uc3RyYXRpb25cIiB9LCBcIkFubsOpZVwiKSxcbiAgICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnZhbHVlMyxcbiAgICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMyA9ICRldmVudCksXG4gICAgICAgICAgdHlwZTogXCJ5ZWFyXCIsXG4gICAgICAgICAgcGxhY2Vob2xkZXI6IFwiU8OpbGVjdGlvbm5leiB1bmUgYW5uw6llXCJcbiAgICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgICBdKSxcbiAgICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiRGF0ZXNcIiksXG4gICAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyLCB7XG4gICAgICAgICAgdHlwZTogXCJkYXRlc1wiLFxuICAgICAgICAgIG1vZGVsVmFsdWU6IF9jdHgudmFsdWU0LFxuICAgICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgudmFsdWU0ID0gJGV2ZW50KSxcbiAgICAgICAgICBwbGFjZWhvbGRlcjogXCJTw6lsZWN0aW9ubmV6IHVuZSBvdSBwbHVzaWV1cnMgZGF0ZXNcIlxuICAgICAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbXCJtb2RlbFZhbHVlXCIsIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiXSlcbiAgICAgIF0pXG4gICAgXSlcbiAgXSwgNjQgLyogU1RBQkxFX0ZSQUdNRU5UICovKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWUxOiAnJyxcbiAgICAgICAgdmFsdWUyOiAnJyxcbiAgICAgICAgdmFsdWUzOiAnJyxcbiAgICAgICAgdmFsdWU0OiAnJ1xuICAgICAgfTtcbiAgICB9XG4gIH07XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vMlwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyBjcmVhdGVWTm9kZTogX2NyZWF0ZVZOb2RlLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgRnJhZ21lbnQ6IF9GcmFnbWVudCwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZGF0ZS1waWNrZXJcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW1xuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKFwic3BhblwiLCB7IGNsYXNzOiBcImRlbW9uc3RyYXRpb25cIiB9LCBcIkTDqWZhdXRcIiksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciwge1xuICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnZhbHVlMSxcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC52YWx1ZTEgPSAkZXZlbnQpLFxuICAgICAgICB0eXBlOiBcImRhdGVyYW5nZVwiLFxuICAgICAgICBcInJhbmdlLXNlcGFyYXRvclwiOiBcIsOgXCIsXG4gICAgICAgIFwic3RhcnQtcGxhY2Vob2xkZXJcIjogXCJEYXRlIGRlIGTDqWJ1dFwiLFxuICAgICAgICBcImVuZC1wbGFjZWhvbGRlclwiOiBcIkRhdGUgZGUgZmluXCJcbiAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgIF0pLFxuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKFwic3BhblwiLCB7IGNsYXNzOiBcImRlbW9uc3RyYXRpb25cIiB9LCBcIkF2ZWMgZGVzIG9wdGlvbnNcIiksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciwge1xuICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnZhbHVlMixcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC52YWx1ZTIgPSAkZXZlbnQpLFxuICAgICAgICB0eXBlOiBcImRhdGVyYW5nZVwiLFxuICAgICAgICBhbGlnbjogXCJyaWdodFwiLFxuICAgICAgICBcInVubGluay1wYW5lbHNcIjogXCJcIixcbiAgICAgICAgXCJyYW5nZS1zZXBhcmF0b3JcIjogXCLDoFwiLFxuICAgICAgICBcInN0YXJ0LXBsYWNlaG9sZGVyXCI6IFwiRGF0ZSBkZSBkw6lidXRcIixcbiAgICAgICAgXCJlbmQtcGxhY2Vob2xkZXJcIjogXCJEYXRlIGRlIGZpblwiLFxuICAgICAgICBcInBpY2tlci1vcHRpb25zXCI6IF9jdHgucGlja2VyT3B0aW9uc1xuICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIiwgXCJwaWNrZXItb3B0aW9uc1wiXSlcbiAgICBdKVxuICBdLCA2NCAvKiBTVEFCTEVfRlJBR01FTlQgKi8pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwaWNrZXJPcHRpb25zOiB7XG4gICAgICAgICAgc2hvcnRjdXRzOiBbe1xuICAgICAgICAgICAgdGV4dDogJ1NlbWFpbmUgZGVybmnDqHJlJyxcbiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogNyk7XG4gICAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgdGV4dDogJ01vaXMgZGVybmllcicsXG4gICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikge1xuICAgICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDMwKTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICB0ZXh0OiAnVHJvaXMgZGVybmllcnMgbW9pcycsXG4gICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikge1xuICAgICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDkwKTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XVxuICAgICAgICB9LFxuICAgICAgICB2YWx1ZTE6ICcnLFxuICAgICAgICB2YWx1ZTI6ICcnXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW8zXCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBGcmFnbWVudDogX0ZyYWdtZW50LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1kYXRlLXBpY2tlclwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiYmxvY2tcIiB9LCBbXG4gICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiRMOpZmF1dFwiKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyLCB7XG4gICAgICAgIG1vZGVsVmFsdWU6IF9jdHgudmFsdWUxLFxuICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMSA9ICRldmVudCksXG4gICAgICAgIHR5cGU6IFwibW9udGhyYW5nZVwiLFxuICAgICAgICBcInJhbmdlLXNlcGFyYXRvclwiOiBcIsOgXCIsXG4gICAgICAgIFwic3RhcnQtcGxhY2Vob2xkZXJcIjogXCJNb2lzIGRlIGTDqWJ1dFwiLFxuICAgICAgICBcImVuZC1wbGFjZWhvbGRlclwiOiBcIk1vaXMgZGUgZmluXCJcbiAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgIF0pLFxuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKFwic3BhblwiLCB7IGNsYXNzOiBcImRlbW9uc3RyYXRpb25cIiB9LCBcIkF2ZWMgb3B0aW9uc1wiKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyLCB7XG4gICAgICAgIG1vZGVsVmFsdWU6IF9jdHgudmFsdWUyLFxuICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMiA9ICRldmVudCksXG4gICAgICAgIHR5cGU6IFwibW9udGhyYW5nZVwiLFxuICAgICAgICBhbGlnbjogXCJyaWdodFwiLFxuICAgICAgICBcInVubGluay1wYW5lbHNcIjogXCJcIixcbiAgICAgICAgXCJyYW5nZS1zZXBhcmF0b3JcIjogXCLDoFwiLFxuICAgICAgICBcInN0YXJ0LXBsYWNlaG9sZGVyXCI6IFwiTW9pcyBkZSBkw6lidXRcIixcbiAgICAgICAgXCJlbmQtcGxhY2Vob2xkZXJcIjogXCJNb2lzIGRlIGZpblwiLFxuICAgICAgICBcInBpY2tlci1vcHRpb25zXCI6IF9jdHgucGlja2VyT3B0aW9uc1xuICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIiwgXCJwaWNrZXItb3B0aW9uc1wiXSlcbiAgICBdKVxuICBdLCA2NCAvKiBTVEFCTEVfRlJBR01FTlQgKi8pKVxufVxuICBcbiAgICBjb25zdCBkZW1vY29tcG9uZW50RXhwb3J0ID0ge1xuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwaWNrZXJPcHRpb25zOiB7XG4gICAgICAgICAgc2hvcnRjdXRzOiBbe1xuICAgICAgICAgICAgdGV4dDogJ0NlIG1vaXMnLFxuICAgICAgICAgICAgb25DbGljayhwaWNrZXIpIHtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW25ldyBEYXRlKCksIG5ldyBEYXRlKCldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICB0ZXh0OiAnQ2V0dGUgYW5uw6llJyxcbiAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUobmV3IERhdGUoKS5nZXRGdWxsWWVhcigpLCAwKTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICB0ZXh0OiAnTGVzIGRlcm5pZXJzIDYgbW9pcycsXG4gICAgICAgICAgICBvbkNsaWNrKHBpY2tlcikge1xuICAgICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgIHN0YXJ0LnNldE1vbnRoKHN0YXJ0LmdldE1vbnRoKCkgLSA2KTtcbiAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XVxuICAgICAgICB9LFxuICAgICAgICB2YWx1ZTE6ICcnLFxuICAgICAgICB2YWx1ZTI6ICcnXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXCJlbGVtZW50LWRlbW80XCI6IChmdW5jdGlvbigpIHtcbiAgICBcbiAgICBjb25zdCB7IGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBGcmFnbWVudDogX0ZyYWdtZW50LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1kYXRlLXBpY2tlclwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiYmxvY2tcIiB9LCBbXG4gICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiRGF0ZVwiKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyLCB7XG4gICAgICAgIG1vZGVsVmFsdWU6IF9jdHgudmFsdWUxLFxuICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMSA9ICRldmVudCksXG4gICAgICAgIHR5cGU6IFwiZGF0ZVwiLFxuICAgICAgICBwbGFjZWhvbGRlcjogXCJTw6lsZWN0aW9ubmV6IHVuZSBkYXRlXCIsXG4gICAgICAgIFwiZGVmYXVsdC12YWx1ZVwiOiBcIjIwMTAtMTAtMDFcIlxuICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgXSksXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiYmxvY2tcIiB9LCBbXG4gICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiUGxhZ2UgZGUgZGF0ZXNcIiksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciwge1xuICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnZhbHVlMixcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC52YWx1ZTIgPSAkZXZlbnQpLFxuICAgICAgICB0eXBlOiBcImRhdGVyYW5nZVwiLFxuICAgICAgICBhbGlnbjogXCJyaWdodFwiLFxuICAgICAgICBcInN0YXJ0LXBsYWNlaG9sZGVyXCI6IFwiRGF0ZSBkZSBkw6lidXRcIixcbiAgICAgICAgXCJlbmQtcGxhY2Vob2xkZXJcIjogXCJEYXRlIGRlIGZpblwiLFxuICAgICAgICBcImRlZmF1bHQtdmFsdWVcIjogXCIyMDEwLTEwLTAxXCJcbiAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgIF0pXG4gIF0sIDY0IC8qIFNUQUJMRV9GUkFHTUVOVCAqLykpXG59XG4gIFxuICAgIGNvbnN0IGRlbW9jb21wb25lbnRFeHBvcnQgPSB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlMTogJycsXG4gICAgICAgIHZhbHVlMjogJydcbiAgICAgIH07XG4gICAgfVxuICB9O1xuICAgIHJldHVybiB7XG4gICAgICBtb3VudGVkKCl7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKCgpPT57XG4gICAgICAgICAgY29uc3QgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgncHJlIGNvZGU6bm90KC5obGpzKScpXG4gICAgICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChibG9ja3MsIGhsanMuaGlnaGxpZ2h0QmxvY2spXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVuZGVyLFxuICAgICAgLi4uZGVtb2NvbXBvbmVudEV4cG9ydFxuICAgIH1cbiAgfSkoKSxcImVsZW1lbnQtZGVtbzVcIjogKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIGNvbnN0IHsgY3JlYXRlVk5vZGU6IF9jcmVhdGVWTm9kZSwgdG9EaXNwbGF5U3RyaW5nOiBfdG9EaXNwbGF5U3RyaW5nLCByZXNvbHZlQ29tcG9uZW50OiBfcmVzb2x2ZUNvbXBvbmVudCwgRnJhZ21lbnQ6IF9GcmFnbWVudCwgb3BlbkJsb2NrOiBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jazogX2NyZWF0ZUJsb2NrIH0gPSBWdWVcblxuZnVuY3Rpb24gcmVuZGVyIChfY3R4LCBfY2FjaGUpIHtcbiAgY29uc3QgX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciA9IF9yZXNvbHZlQ29tcG9uZW50KFwiZWwtZGF0ZS1waWNrZXJcIilcblxuICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW1xuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKFwic3BhblwiLCB7IGNsYXNzOiBcImRlbW9uc3RyYXRpb25cIiB9LCBcIsOJbWV0IHVuIG9iamV0IERhdGVcIiksXG4gICAgICBfY3JlYXRlVk5vZGUoXCJkaXZcIiwgeyBjbGFzczogXCJkZW1vbnN0cmF0aW9uXCIgfSwgXCJWYWx1ZTogXCIgKyBfdG9EaXNwbGF5U3RyaW5nKF9jdHgudmFsdWUxKSwgMSAvKiBURVhUICovKSxcbiAgICAgIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyLCB7XG4gICAgICAgIG1vZGVsVmFsdWU6IF9jdHgudmFsdWUxLFxuICAgICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlMSA9ICRldmVudCksXG4gICAgICAgIHR5cGU6IFwiZGF0ZVwiLFxuICAgICAgICBwbGFjZWhvbGRlcjogXCJTw6lsZWN0aW9ubmV6IHVuZSBkYXRlXCIsXG4gICAgICAgIGZvcm1hdDogXCJ5eXl5L01NL2RkXCJcbiAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICAgIF0pLFxuICAgIF9jcmVhdGVWTm9kZShcImRpdlwiLCB7IGNsYXNzOiBcImJsb2NrXCIgfSwgW1xuICAgICAgX2NyZWF0ZVZOb2RlKFwic3BhblwiLCB7IGNsYXNzOiBcImRlbW9uc3RyYXRpb25cIiB9LCBcIlV0aWxpc2UgdmFsdWUtZm9ybWF0XCIpLFxuICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiVmFsdWU6IFwiICsgX3RvRGlzcGxheVN0cmluZyhfY3R4LnZhbHVlMiksIDEgLyogVEVYVCAqLyksXG4gICAgICBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9kYXRlX3BpY2tlciwge1xuICAgICAgICBtb2RlbFZhbHVlOiBfY3R4LnZhbHVlMixcbiAgICAgICAgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCI6ICRldmVudCA9PiAoX2N0eC52YWx1ZTIgPSAkZXZlbnQpLFxuICAgICAgICB0eXBlOiBcImRhdGVcIixcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiU8OpbGVjdGlvbm5leiB1bmUgZGF0ZVwiLFxuICAgICAgICBmb3JtYXQ6IFwieXl5eS9NTS9kZFwiLFxuICAgICAgICBcInZhbHVlLWZvcm1hdFwiOiBcInl5eXktTU0tZGRcIlxuICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgXSksXG4gICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiYmxvY2tcIiB9LCBbXG4gICAgICBfY3JlYXRlVk5vZGUoXCJzcGFuXCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiVGltZXN0YW1wXCIpLFxuICAgICAgX2NyZWF0ZVZOb2RlKFwiZGl2XCIsIHsgY2xhc3M6IFwiZGVtb25zdHJhdGlvblwiIH0sIFwiVmFsdWXvvJpcIiArIF90b0Rpc3BsYXlTdHJpbmcoX2N0eC52YWx1ZTMpLCAxIC8qIFRFWFQgKi8pLFxuICAgICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgICAgbW9kZWxWYWx1ZTogX2N0eC52YWx1ZTMsXG4gICAgICAgIFwib25VcGRhdGU6bW9kZWxWYWx1ZVwiOiAkZXZlbnQgPT4gKF9jdHgudmFsdWUzID0gJGV2ZW50KSxcbiAgICAgICAgdHlwZTogXCJkYXRlXCIsXG4gICAgICAgIHBsYWNlaG9sZGVyOiBcIlPDqWxlY3Rpb25uZXogdW5lIGRhdGVcIixcbiAgICAgICAgZm9ybWF0OiBcInl5eXkvTU0vZGRcIixcbiAgICAgICAgXCJ2YWx1ZS1mb3JtYXRcIjogXCJ0aW1lc3RhbXBcIlxuICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgW1wibW9kZWxWYWx1ZVwiLCBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIl0pXG4gICAgXSlcbiAgXSwgNjQgLyogU1RBQkxFX0ZSQUdNRU5UICovKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWUxOiAnJyxcbiAgICAgICAgdmFsdWUyOiAnJyxcbiAgICAgICAgdmFsdWUzOiAnJ1xuICAgICAgfTtcbiAgICB9XG4gIH07XG4gICAgcmV0dXJuIHtcbiAgICAgIG1vdW50ZWQoKXtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCk9PntcbiAgICAgICAgICBjb25zdCBibG9ja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwcmUgY29kZTpub3QoLmhsanMpJylcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJsb2NrcywgaGxqcy5oaWdobGlnaHRCbG9jaylcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICByZW5kZXIsXG4gICAgICAuLi5kZW1vY29tcG9uZW50RXhwb3J0XG4gICAgfVxuICB9KSgpLFwiZWxlbWVudC1kZW1vNlwiOiAoZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgY29uc3QgeyB0b0Rpc3BsYXlTdHJpbmc6IF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlOiBfY3JlYXRlVk5vZGUsIHJlc29sdmVDb21wb25lbnQ6IF9yZXNvbHZlQ29tcG9uZW50LCBvcGVuQmxvY2s6IF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrOiBfY3JlYXRlQmxvY2sgfSA9IFZ1ZVxuXG5mdW5jdGlvbiByZW5kZXIgKF9jdHgsIF9jYWNoZSkge1xuICBjb25zdCBfY29tcG9uZW50X2VsX2RhdGVfcGlja2VyID0gX3Jlc29sdmVDb21wb25lbnQoXCJlbC1kYXRlLXBpY2tlclwiKVxuXG4gIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soXCJkaXZcIiwgeyBjbGFzczogXCJibG9ja1wiIH0sIFtcbiAgICBfY3JlYXRlVk5vZGUoXCJwXCIsIG51bGwsIFwiVmFsZXVyOiBcIiArIF90b0Rpc3BsYXlTdHJpbmcoX2N0eC52YWx1ZSksIDEgLyogVEVYVCAqLyksXG4gICAgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZGF0ZV9waWNrZXIsIHtcbiAgICAgIG1vZGVsVmFsdWU6IF9jdHgudmFsdWUsXG4gICAgICBcIm9uVXBkYXRlOm1vZGVsVmFsdWVcIjogJGV2ZW50ID0+IChfY3R4LnZhbHVlID0gJGV2ZW50KSxcbiAgICAgIHR5cGU6IFwiZGF0ZXJhbmdlXCIsXG4gICAgICBcInN0YXJ0LXBsYWNlaG9sZGVyXCI6IFwiRGF0ZSBkZSBkw6lidXRcIixcbiAgICAgIFwiZW5kLXBsYWNlaG9sZGVyXCI6IFwiRGF0ZSBkZSBmaW5cIixcbiAgICAgIFwiZGVmYXVsdC10aW1lXCI6IFsnMDA6MDA6MDAnLCAnMjM6NTk6NTknXVxuICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFtcIm1vZGVsVmFsdWVcIiwgXCJvblVwZGF0ZTptb2RlbFZhbHVlXCJdKVxuICBdKSlcbn1cbiAgXG4gICAgY29uc3QgZGVtb2NvbXBvbmVudEV4cG9ydCA9IHtcbiAgICBkYXRhKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWU6ICcnXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgbW91bnRlZCgpe1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKT0+e1xuICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3ByZSBjb2RlOm5vdCguaGxqcyknKVxuICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmxvY2tzLCBobGpzLmhpZ2hsaWdodEJsb2NrKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHJlbmRlcixcbiAgICAgIC4uLmRlbW9jb21wb25lbnRFeHBvcnRcbiAgICB9XG4gIH0pKCksXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICA8L3NjcmlwdD5cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/date-picker.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe ***!
  \**********************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"datepicker\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#datepicker\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" DatePicker\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Utilisez DatePicker pour les champs de dates.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"entrez-la-date\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#entrez-la-date\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Entrez la date\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"L'unité de base du DatePicker est le jour.\", -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"L'unité est déterminée par l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Vous pouvez ajouter des options en créant un objet \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"picker-options\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" avec la propriété \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"shortcuts\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". L'état désactivé est contrôlé par \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"disabledDate\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" qui est une fonction.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Défaut</span>\\n    <el-date-picker\\n      v-model=\\\"value1\\\"\\n      type=\\\"date\\\"\\n      placeholder=\\\"Choississez un jour\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Picker avec raccourcis</span>\\n    <el-date-picker\\n      v-model=\\\"value2\\\"\\n      type=\\\"date\\\"\\n      placeholder=\\\"Choississez un jour\\\"\\n      :picker-options=\\\"pickerOptions\\\">\\n    </el-date-picker>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        pickerOptions: {\\n          disabledDate(time) {\\n            return time.getTime() > Date.now();\\n          },\\n          shortcuts: [{\\n            text: 'Aujourd\\\\'hui',\\n            onClick(picker) {\\n              picker.$emit('pick', new Date());\\n            }\\n          }, {\\n            text: 'Hier',\\n            onClick(picker) {\\n              const date = new Date();\\n              date.setTime(date.getTime() - 3600 * 1000 * 24);\\n              picker.$emit('pick', date);\\n            }\\n          }, {\\n            text: 'Il y a une semaine',\\n            onClick(picker) {\\n              const date = new Date();\\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\\n              picker.$emit('pick', date);\\n            }\\n          }]\\n        },\\n        value1: '',\\n        value2: '',\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"autres-unites\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#autres-unites\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Autres unités\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez sélectionner une semaine, un mois, une année ou plusieurs dates en ajoutant des options grâce aux attributs.\", -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<div class=\\\"container\\\">\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Semaine</span>\\n    <el-date-picker\\n      v-model=\\\"value1\\\"\\n      type=\\\"week\\\"\\n      format=\\\"Week WW\\\"\\n      placeholder=\\\"Sélectionnez une semaine\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Mois</span>\\n    <el-date-picker\\n      v-model=\\\"value2\\\"\\n      type=\\\"month\\\"\\n      placeholder=\\\"Sélectionnez un mois\\\">\\n    </el-date-picker>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Année</span>\\n    <el-date-picker\\n      v-model=\\\"value3\\\"\\n      type=\\\"year\\\"\\n      placeholder=\\\"Sélectionnez une année\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Dates</span>\\n    <el-date-picker\\n      type=\\\"dates\\\"\\n      v-model=\\\"value4\\\"\\n      placeholder=\\\"Sélectionnez une ou plusieurs dates\\\">\\n    </el-date-picker>\\n  </div>\\n</div>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        value1: '',\\n        value2: '',\\n        value3: '',\\n        value4: ''\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"plage-de-dates\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#plage-de-dates\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Plage de dates\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez sélectionner une plage de dates.\", -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Lorsque ce mode est activé, les deux panneaux sont liés par défaut. Si vous souhaitez qu'ils changent de mois de manière indépendante, ajoutez l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"unlink-panels\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Défaut</span>\\n    <el-date-picker\\n      v-model=\\\"value1\\\"\\n      type=\\\"daterange\\\"\\n      range-separator=\\\"à\\\"\\n      start-placeholder=\\\"Date de début\\\"\\n      end-placeholder=\\\"Date de fin\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Avec des options</span>\\n    <el-date-picker\\n      v-model=\\\"value2\\\"\\n      type=\\\"daterange\\\"\\n      align=\\\"right\\\"\\n      unlink-panels\\n      range-separator=\\\"à\\\"\\n      start-placeholder=\\\"Date de début\\\"\\n      end-placeholder=\\\"Date de fin\\\"\\n      :picker-options=\\\"pickerOptions\\\">\\n    </el-date-picker>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        pickerOptions: {\\n          shortcuts: [{\\n            text: 'Semaine dernière',\\n            onClick(picker) {\\n              const end = new Date();\\n              const start = new Date();\\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\\n              picker.$emit('pick', [start, end]);\\n            }\\n          }, {\\n            text: 'Mois dernier',\\n            onClick(picker) {\\n              const end = new Date();\\n              const start = new Date();\\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\\n              picker.$emit('pick', [start, end]);\\n            }\\n          }, {\\n            text: 'Trois derniers mois',\\n            onClick(picker) {\\n              const end = new Date();\\n              const start = new Date();\\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\\n              picker.$emit('pick', [start, end]);\\n            }\\n          }]\\n        },\\n        value1: '',\\n        value2: ''\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"plage-de-mois\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#plage-de-mois\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Plage de mois\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez sélectionner une plage de mois.\", -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Lorsque ce mode est activé, les panneaux gauche et droit sont liés par défaut. Si vous voulez que les deux panneaux switch indépendamment les années en cours, vous pouvez utiliser l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"unlink-panels\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Défaut</span>\\n    <el-date-picker\\n      v-model=\\\"value1\\\"\\n      type=\\\"monthrange\\\"\\n      range-separator=\\\"à\\\"\\n      start-placeholder=\\\"Mois de début\\\"\\n      end-placeholder=\\\"Mois de fin\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Avec options</span>\\n    <el-date-picker\\n      v-model=\\\"value2\\\"\\n      type=\\\"monthrange\\\"\\n      align=\\\"right\\\"\\n      unlink-panels\\n      range-separator=\\\"à\\\"\\n      start-placeholder=\\\"Mois de début\\\"\\n      end-placeholder=\\\"Mois de fin\\\"\\n      :picker-options=\\\"pickerOptions\\\">\\n    </el-date-picker>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        pickerOptions: {\\n          shortcuts: [{\\n            text: 'Ce mois',\\n            onClick(picker) {\\n              picker.$emit('pick', [new Date(), new Date()]);\\n            }\\n          }, {\\n            text: 'Cette année',\\n            onClick(picker) {\\n              const end = new Date();\\n              const start = new Date(new Date().getFullYear(), 0);\\n              picker.$emit('pick', [start, end]);\\n            }\\n          }, {\\n            text: 'Les derniers 6 mois',\\n            onClick(picker) {\\n              const end = new Date();\\n              const start = new Date();\\n              start.setMonth(start.getMonth() - 6);\\n              picker.$emit('pick', [start, end]);\\n            }\\n          }]\\n        },\\n        value1: '',\\n        value2: ''\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"valeur-par-defaut\\\"><a class=\\\"header-anchor\\\" href=\\\"#valeur-par-defaut\\\">¶</a> Valeur par défaut</h3><p>Si l&#39;utilisateur n&#39;a pas sélectionné de date, vous pouvez montrer la date d&#39;aujourd&#39;hui par défaut. Utilisez <code>default-value</code> pour montrer une autre date. Sa valeur doit être parsable par <code>new Date()</code>.</p><p>Si le type est <code>daterange</code>, <code>default-value</code> configure la panneau de gauche.</p>\", 3)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Date</span>\\n    <el-date-picker\\n      v-model=\\\"value1\\\"\\n      type=\\\"date\\\"\\n      placeholder=\\\"Sélectionnez une date\\\"\\n      default-value=\\\"2010-10-01\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Plage de dates</span>\\n    <el-date-picker\\n      v-model=\\\"value2\\\"\\n      type=\\\"daterange\\\"\\n      align=\\\"right\\\"\\n      start-placeholder=\\\"Date de début\\\"\\n      end-placeholder=\\\"Date de fin\\\"\\n      default-value=\\\"2010-10-01\\\">\\n    </el-date-picker>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        value1: '',\\n        value2: ''\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"formats-de-date\\\"><a class=\\\"header-anchor\\\" href=\\\"#formats-de-date\\\">¶</a> Formats de date</h3><p>Utilisez <code>format</code> pour contrôler l&#39;affichage de la date dans le champ. Utilisez <code>value-format</code> pour contrôler le format de la variable stockée.</p><p>Par défaut, le composant accepte et émet un objet <code>Date</code>. Les formats supportés se trouvent ci-dessous, avec la date UTC 2017-01-02 03:04:05 comme exemple:</p><div class=\\\"warning\\\"><p>Attention à la capitalisation !</p></div><table><thead><tr><th>Format</th><th>Signification</th><th>Note</th><th>Exemple</th></tr></thead><tbody><tr><td><code>yyyy</code></td><td>Année</td><td></td><td>2017</td></tr><tr><td><code>M</code></td><td>Mois</td><td>pas de 0 au début</td><td>1</td></tr><tr><td><code>MM</code></td><td>Mois</td><td></td><td>01</td></tr><tr><td><code>MMM</code></td><td>Mois</td><td></td><td>Jan</td></tr><tr><td><code>MMMM</code></td><td>Mois</td><td></td><td>Janvier</td></tr><tr><td><code>W</code></td><td>Semaine</td><td>uniquement pour les <code>format</code> des types &#39;semaine&#39; ; pas de 0 au début</td><td>1</td></tr><tr><td><code>WW</code></td><td>Semaine</td><td>uniquement pour les <code>format</code> des types &#39;semaine&#39;</td><td>01</td></tr><tr><td><code>d</code></td><td>Jour</td><td>pas de 0 au début</td><td>2</td></tr><tr><td><code>dd</code></td><td>Jour</td><td></td><td>02</td></tr><tr><td><code>H</code></td><td>Heure</td><td>Horloge 24 heures; pas de 0 au début</td><td>3</td></tr><tr><td><code>HH</code></td><td>Heure</td><td>Horloge 24 heures</td><td>03</td></tr><tr><td><code>h</code></td><td>Heure</td><td>Horloge 12 heures ; doit être utilisé avec <code>A</code> ou <code>a</code>; pas de 0 au début</td><td>3</td></tr><tr><td><code>hh</code></td><td>Heure</td><td>Horloge 12 heures ; doit être utilisé avec <code>A</code> ou <code>a</code></td><td>03</td></tr><tr><td><code>m</code></td><td>Minute</td><td>pas de 0 au début</td><td>4</td></tr><tr><td><code>mm</code></td><td>Minute</td><td></td><td>04</td></tr><tr><td><code>s</code></td><td>Seconde</td><td>pas de 0 au début</td><td>5</td></tr><tr><td><code>ss</code></td><td>Seconde</td><td></td><td>05</td></tr><tr><td><code>A</code></td><td>AM/PM</td><td>uniquement pour <code>format</code>, majuscules</td><td>AM</td></tr><tr><td><code>a</code></td><td>am/pm</td><td>uniquement pour <code>format</code>, minuscules</td><td>am</td></tr><tr><td><code>timestamp</code></td><td>timestamp JS</td><td>uniquement pour <code>value-format</code>; la variable stockée sera un <code>number</code></td><td>1483326245000</td></tr><tr><td><code>[MM]</code></td><td>Pas de caractère d&#39;échappement</td><td>Pour échapper des caractères, placez-les entre crochets (ex: [A] [MM])</td><td>MM</td></tr></tbody></table>\", 5)\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Émet un objet Date</span>\\n    <div class=\\\"demonstration\\\">Value: {{ value1 }}</div>\\n    <el-date-picker\\n      v-model=\\\"value1\\\"\\n      type=\\\"date\\\"\\n      placeholder=\\\"Sélectionnez une date\\\"\\n      format=\\\"yyyy/MM/dd\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Utilise value-format</span>\\n    <div class=\\\"demonstration\\\">Value: {{ value2 }}</div>\\n    <el-date-picker\\n      v-model=\\\"value2\\\"\\n      type=\\\"date\\\"\\n      placeholder=\\\"Sélectionnez une date\\\"\\n      format=\\\"yyyy/MM/dd\\\"\\n      value-format=\\\"yyyy-MM-dd\\\">\\n    </el-date-picker>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <span class=\\\"demonstration\\\">Timestamp</span>\\n    <div class=\\\"demonstration\\\">Value：{{ value3 }}</div>\\n    <el-date-picker\\n      v-model=\\\"value3\\\"\\n      type=\\\"date\\\"\\n      placeholder=\\\"Sélectionnez une date\\\"\\n      format=\\\"yyyy/MM/dd\\\"\\n      value-format=\\\"timestamp\\\">\\n    </el-date-picker>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        value1: '',\\n        value2: '',\\n        value3: ''\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_29 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"horaire-par-defaut-pour-les-dates-de-fin-et-de-debut\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#horaire-par-defaut-pour-les-dates-de-fin-et-de-debut\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Horaire par défaut pour les dates de fin et de début\")\n], -1 /* HOISTED */)\nconst _hoisted_30 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Lorsque vous choisissez une plage de dates, vous pouvez assigner l'horaire de départ et de fin pour chacune des dates.\", -1 /* HOISTED */)\nconst _hoisted_31 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Par défaut, l'horaire pour les dates de début et de fin est \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"00:00:00\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Configurez \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"default-time\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour changer l'horaire. Cet attribut prends un tableau de un ou deux horaires au format \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"12:00:00\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Le premier est pour la date de début, le deuxième pour la date de fin.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_32 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <div class=\\\"block\\\">\\n    <p>Valeur: {{ value }}</p>\\n    <el-date-picker\\n      v-model=\\\"value\\\"\\n      type=\\\"daterange\\\"\\n      start-placeholder=\\\"Date de début\\\"\\n      end-placeholder=\\\"Date de fin\\\"\\n      :default-time=\\\"['00:00:00', '23:59:59']\\\">\\n    </el-date-picker>\\n  </div>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        value: ''\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_33 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"attributs\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributs\\\">¶</a> Attributs</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>value / v-model</td><td>La valeur liée.</td><td>date(DatePicker) / array(DateRangePicker)</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>Si le DatePicker est en lecture seule.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>Si le DatePicker est désactivé.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>Taille du champs.</td><td>string</td><td>large/small/mini</td><td>—</td></tr><tr><td>editable</td><td>Si le champ est éditable.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>clearable</td><td>Si la croix de reset doit apparaître.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>placeholder</td><td>Le placeholder en mode normal.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>start-placeholder</td><td>Le placeholder pour la date de début en mode plage de dates.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>end-placeholder</td><td>Le placeholder pour la date de fin en mode plage de dates.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>type</td><td>Type du picker.</td><td>string</td><td>year/month/date/dates/datetime/ week/datetimerange/daterange/ monthrange</td><td>date</td></tr><tr><td>format</td><td>Format d&#39;affichage dans le champ.</td><td>string</td><td>Voir <a href=\\\"#/fr-FR/component/date-picker#formats-de-date\\\">formats de date</a>.</td><td>yyyy-MM-dd</td></tr><tr><td>align</td><td>Alignement.</td><td>left/center/right</td><td>left</td><td></td></tr><tr><td>popper-class</td><td>Nom de classe pour le menu déroulant du DatePicker.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>picker-options</td><td>Options additionnelles, voir la table ci-dessous.</td><td>object</td><td>—</td><td>{}</td></tr><tr><td>range-separator</td><td>Séparateur de plage de dates.</td><td>string</td><td>—</td><td>&#39;-&#39;</td></tr><tr><td>default-value</td><td>Date par défaut du calendrier, optionnelle.</td><td>Date</td><td>Tout ce qui est accepté par <code>new Date()</code></td><td>—</td></tr><tr><td>default-time</td><td>Horaire par défaut quand on sélectionne une plage dates, optionnel.</td><td>string[]</td><td>Tableau de taille 2, chaque valeur est au format <code>12:00:00</code>. La première pour la date de début, la deuxième pour la date de fin.</td><td>—</td></tr><tr><td>value-format</td><td>Format de la variable stockée, optionnel. Si non spécifié, la valeur sera un objet Date.</td><td>string</td><td>Voir <a href=\\\"#/en-US/component/date-picker#formats-de-date\\\">formats de date</a></td><td>—</td></tr><tr><td>name</td><td>Identique au <code>name</code> de l&#39;input natif</td><td>string</td><td>—</td><td>—</td></tr><tr><td>unlink-panels</td><td>Rend indépendants les deux panneaux de plage de dates.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>prefix-icon</td><td>Icône de préfixe.</td><td>string</td><td>—</td><td>el-icon-date</td></tr><tr><td>clear-icon</td><td>Icône de reset.</td><td>string</td><td>—</td><td>el-icon-circle-close</td></tr><tr><td>validate-event</td><td>Si la validation doit être déclenchée.</td><td>boolean</td><td>-</td><td>true</td></tr></tbody></table><h3 id=\\\"options-du-picker\\\"><a class=\\\"header-anchor\\\" href=\\\"#options-du-picker\\\">¶</a> Options du Picker</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>shortcuts</td><td>Un tableau d&#39;objets { text, onClick } pour configurer les raccourcis, voir table ci-dessous.</td><td>object[]</td><td>—</td><td>—</td></tr><tr><td>disabledDate</td><td>Une fonction qui détermine si une date est désactivée ou pas, avec cette date en paramètre. Doit retourner un booléen.</td><td>function</td><td>—</td><td>—</td></tr><tr><td>cellClassName</td><td>set custom className</td><td>Function(Date)</td><td>—</td><td>—</td></tr><tr><td>firstDayOfWeek</td><td>Premier jour du mois.</td><td>Number</td><td>1 to 7</td><td>7</td></tr><tr><td>onPick</td><td>Callback se déclenchant quand la date sélectionnée change. Uniquement pour <code>daterange</code> et <code>datetimerange</code>.</td><td>Function({ maxDate, minDate })</td><td>-</td><td>-</td></tr></tbody></table><h3 id=\\\"raccourcis\\\"><a class=\\\"header-anchor\\\" href=\\\"#raccourcis\\\">¶</a> Raccourcis</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>text</td><td>Titre du raccourci.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>onClick</td><td>Callback se déclenchant quand le raccourci est cliqué, avec <code>vm</code> en paramètre. Vous pouvez changer la valeur du picker en émettant l&#39;évènement <code>pick</code>. Exemple: <code>vm.$emit(&#39;pick&#39;, new Date())</code></td><td>function</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"evenements\\\"><a class=\\\"header-anchor\\\" href=\\\"#evenements\\\">¶</a> Évènements</h3><table><thead><tr><th>Nom</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>change</td><td>Se déclenche quand l&#39;utilisateur confirme la valeur</td><td>component&#39;s binding value</td></tr><tr><td>blur</td><td>Se déclenche quand le champ perds le focus.</td><td>component instance</td></tr><tr><td>focus</td><td>Se déclenche quand le champ a le focus.</td><td>component instance</td></tr></tbody></table><h3 id=\\\"methodes\\\"><a class=\\\"header-anchor\\\" href=\\\"#methodes\\\">¶</a> Méthodes</h3><table><thead><tr><th>Méthode</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>focus</td><td>Focus sur le champ.</td><td>—</td></tr></tbody></table><h3 id=\\\"slots\\\"><a class=\\\"header-anchor\\\" href=\\\"#slots\\\">¶</a> Slots</h3><table><thead><tr><th>Nom</th><th>Description</th></tr></thead><tbody><tr><td>range-separator</td><td>Séparateur d&#39;intervalle personnalisé.</td></tr></tbody></table>\", 12)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_7\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_8,\n    _hoisted_9,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_10\n      ]),\n      _: 1\n    }),\n    _hoisted_11,\n    _hoisted_12,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_14\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_13\n      ]),\n      _: 1\n    }),\n    _hoisted_15,\n    _hoisted_16,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_18\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      _: 1\n    }),\n    _hoisted_19,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_22\n      ]),\n      _: 1\n    }),\n    _hoisted_23,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_28\n      ]),\n      _: 1\n    }),\n    _hoisted_29,\n    _hoisted_30,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_32\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_31\n      ]),\n      _: 1\n    }),\n    _hoisted_33\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/date-picker.md?vue&type=template&id=48912ffe\n");

/***/ })

}]);