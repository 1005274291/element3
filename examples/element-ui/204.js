(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[204],{

/***/ "./examples/docs/fr-FR/tabs.md":
/*!*************************************!*\
  !*** ./examples/docs/fr-FR/tabs.md ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tabs_md_vue_type_template_id_655e9461__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs.md?vue&type=template&id=655e9461 */ \"./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461\");\n/* harmony import */ var _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tabs.md?vue&type=script&lang=js */ \"./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _tabs_md_vue_type_template_id_655e9461__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"655e9461\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('655e9461', _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('655e9461', _tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./tabs.md?vue&type=template&id=655e9461 */ \"./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _tabs_md_vue_type_template_id_655e9461__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs.md?vue&type=template&id=655e9461 */ \"./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461\");\n(() => {\n    api.rerender('655e9461', _tabs_md_vue_type_template_id_655e9461__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/fr-FR/tabs.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3RhYnMubWQ/Zjk3OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBZ0U7QUFDVjtBQUNMO0FBQ2pELHdFQUFNLFVBQVUsNkVBQU07QUFDdEI7QUFDQSxJQUFJLElBQVU7QUFDZCxFQUFFLHdFQUFNO0FBQ1I7QUFDQTtBQUNBLG9DQUFvQyx3RUFBTTtBQUMxQywyQkFBMkIsd0VBQU07QUFDakM7O0FBRUEsb0JBQW9CLDRHQUF5QyxFQUFFO0FBQUE7QUFDL0QsNkJBQTZCLDZFQUFNO0FBQ25DLEdBQUc7O0FBRUg7O0FBRUEsd0VBQU07O0FBRVMsdUkiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3RhYnMubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwiLi90YWJzLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY1NWU5NDYxXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdGFicy5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi90YWJzLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbnNjcmlwdC5yZW5kZXIgPSByZW5kZXJcbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHNjcmlwdC5fX2htcklkID0gXCI2NTVlOTQ2MVwiXG4gIGNvbnN0IGFwaSA9IF9fVlVFX0hNUl9SVU5USU1FX19cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIWFwaS5jcmVhdGVSZWNvcmQoJzY1NWU5NDYxJywgc2NyaXB0KSkge1xuICAgIGFwaS5yZWxvYWQoJzY1NWU5NDYxJywgc2NyaXB0KVxuICB9XG4gIFxuICBtb2R1bGUuaG90LmFjY2VwdChcIi4vdGFicy5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NTVlOTQ2MVwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCc2NTVlOTQ2MScsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2ZyLUZSL3RhYnMubWRcIlxuXG5leHBvcnQgZGVmYXVsdCBzY3JpcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/tabs.md\n");

/***/ }),

/***/ "./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js":
/*!*************************************************************!*\
  !*** ./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./tabs.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3RhYnMubWQ/OGIyNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUF5TSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZnItRlIvdGFicy5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi8uLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi90YWJzLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RhYnMubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461":
/*!*******************************************************************!*\
  !*** ./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461 ***!
  \*******************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_template_id_655e9461__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./tabs.md?vue&type=template&id=655e9461 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_tabs_md_vue_type_template_id_655e9461__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2ZyLUZSL3RhYnMubWQ/MzE3MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIuL2V4YW1wbGVzL2RvY3MvZnItRlIvdGFicy5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NTVlOTQ2MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvdGVtcGxhdGVMb2FkZXIuanM/P3JlZi0tNSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi8uLi9idWlsZC9tZC1sb2FkZXIvaW5kZXguanMhLi90YWJzLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY1NWU5NDYxXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          modelValue: _ctx.activeName,\n          \"onUpdate:modelValue\": $event => _ctx.activeName = $event,\n          onTabClick: _ctx.handleClick\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\",\n            name: \"first\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Utilisateur\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\",\n            name: \"second\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\",\n            name: \"third\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Rôle\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\",\n            name: \"fourth\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Tâche\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onTabClick\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            activeName: 'first'\n          };\n        },\n\n        methods: {\n          handleClick(tab, event) {\n            console.log(tab, event);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          type: \"card\",\n          onTabClick: _ctx.handleClick\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Utilisateur\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Rôle\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Tâche\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onTabClick\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            activeName: 'first'\n          };\n        },\n\n        methods: {\n          handleClick(tab, event) {\n            console.log(tab, event);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          type: \"border-card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Utilisateur\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Rôle\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Tâche\")]),\n            _: 1\n          })]),\n          _: 1\n        });\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n\n        const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(_component_el_radio_group, {\n          modelValue: _ctx.tabPosition,\n          \"onUpdate:modelValue\": $event => _ctx.tabPosition = $event,\n          style: {\n            \"margin-bottom\": \"30px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_button, {\n            label: \"top\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"En haut\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"right\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"À droite\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"bottom\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"En bas\")]),\n            _: 1\n          }), _createVNode(_component_el_radio_button, {\n            label: \"left\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"À gauche\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_tabs, {\n          \"tab-position\": _ctx.tabPosition,\n          style: {\n            \"height\": \"200px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n            label: \"User\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Utilisateur\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Rôle\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Tâche\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"tab-position\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            tabPosition: 'left'\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo4\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          type: \"border-card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_tab_pane, null, {\n            default: _withCtx(() => [_createVNode(\"span\", {\n              slot: \"label\"\n            }, [_createVNode(\"i\", {\n              class: \"el-icon-date\"\n            }), _createTextVNode(\" Route\")]), _createTextVNode(\" Route \")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Config\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Config\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Role\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Rôle\")]),\n            _: 1\n          }), _createVNode(_component_el_tab_pane, {\n            label: \"Task\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Tâche\")]),\n            _: 1\n          })]),\n          _: 1\n        });\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo5\": function () {\n      const {\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        toDisplayString: _toDisplayString,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_component_el_tabs, {\n          modelValue: _ctx.editableTabsValue,\n          \"onUpdate:modelValue\": $event => _ctx.editableTabsValue = $event,\n          type: \"card\",\n          editable: \"\",\n          onEdit: _ctx.handleTabsEdit\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.editableTabs, (item, index) => {\n            return _openBlock(), _createBlock(_component_el_tab_pane, {\n              key: item.name,\n              label: item.title,\n              name: item.name\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.content), 1\n              /* TEXT */\n              )]),\n              _: 2\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"label\", \"name\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onEdit\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            editableTabsValue: '2',\n            editableTabs: [{\n              title: 'Onglet 1',\n              name: '1',\n              content: 'Contenu de l\\'onglet 1'\n            }, {\n              title: 'Onglet 2',\n              name: '2',\n              content: 'Contenu de l\\'onglet 2'\n            }],\n            tabIndex: 2\n          };\n        },\n\n        methods: {\n          handleTabsEdit(targetName, action) {\n            if (action === 'add') {\n              let newTabName = ++this.tabIndex + '';\n              this.editableTabs.push({\n                title: 'Nouvel onglet',\n                name: newTabName,\n                content: 'Contenu du nouvel onglet'\n              });\n              this.editableTabsValue = newTabName;\n            }\n\n            if (action === 'remove') {\n              let tabs = this.editableTabs;\n              let activeName = this.editableTabsValue;\n\n              if (activeName === targetName) {\n                tabs.forEach((tab, index) => {\n                  if (tab.name === targetName) {\n                    let nextTab = tabs[index + 1] || tabs[index - 1];\n\n                    if (nextTab) {\n                      activeName = nextTab.name;\n                    }\n                  }\n                });\n              }\n\n              this.editableTabsValue = activeName;\n              this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n            }\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo6\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock,\n        toDisplayString: _toDisplayString\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n\n        const _component_el_tabs = _resolveComponent(\"el-tabs\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"div\", {\n          style: {\n            \"margin-bottom\": \"20px\"\n          }\n        }, [_createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: $event => _ctx.addTab(_ctx.editableTabsValue)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" Ajouter un onglet \")]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]), _createVNode(_component_el_tabs, {\n          modelValue: _ctx.editableTabsValue,\n          \"onUpdate:modelValue\": $event => _ctx.editableTabsValue = $event,\n          type: \"card\",\n          closable: \"\",\n          onTabRemove: _ctx.removeTab\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.editableTabs, (item, index) => {\n            return _openBlock(), _createBlock(_component_el_tab_pane, {\n              key: item.name,\n              label: item.title,\n              name: item.name\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.content), 1\n              /* TEXT */\n              )]),\n              _: 2\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"label\", \"name\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onTabRemove\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            editableTabsValue: '2',\n            editableTabs: [{\n              title: 'Onglet 1',\n              name: '1',\n              content: 'Contenu de l\\'onglet 1'\n            }, {\n              title: 'Onglet 2',\n              name: '2',\n              content: 'Contenu de l\\'onglet 2'\n            }],\n            tabIndex: 2\n          };\n        },\n\n        methods: {\n          addTab(targetName) {\n            let newTabName = ++this.tabIndex + '';\n            this.editableTabs.push({\n              title: 'Nouvel onglet',\n              name: newTabName,\n              content: 'Contenu du nouvel onglet'\n            });\n            this.editableTabsValue = newTabName;\n          },\n\n          removeTab(targetName) {\n            let tabs = this.editableTabs;\n            let activeName = this.editableTabsValue;\n\n            if (activeName === targetName) {\n              tabs.forEach((tab, index) => {\n                if (tab.name === targetName) {\n                  let nextTab = tabs[index + 1] || tabs[index - 1];\n\n                  if (nextTab) {\n                    activeName = nextTab.name;\n                  }\n                }\n              });\n            }\n\n            this.editableTabsValue = activeName;\n            this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/tabs.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461 ***!
  \***************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"tabs\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tabs\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tabs\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Divise des collections de données de types différents, mais reliées entre elles par un contexte ou un type global.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"usage\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#usage\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Usage\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Onglets basiques.\", -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Tabs fournit un outil de sélection des onglets. Par défaut, le premier onglet est sélectionné et actif mais vous pouvez activer n'importe lequel en réglant l'attribut \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"value\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-tabs v-model=\\\"activeName\\\" @tab-click=\\\"handleClick\\\">\\n    <el-tab-pane label=\\\"User\\\" name=\\\"first\\\">Utilisateur</el-tab-pane>\\n    <el-tab-pane label=\\\"Config\\\" name=\\\"second\\\">Config</el-tab-pane>\\n    <el-tab-pane label=\\\"Role\\\" name=\\\"third\\\">Rôle</el-tab-pane>\\n    <el-tab-pane label=\\\"Task\\\" name=\\\"fourth\\\">Tâche</el-tab-pane>\\n  </el-tabs>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        activeName: 'first'\\n      };\\n    },\\n    methods: {\\n      handleClick(tab, event) {\\n        console.log(tab, event);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"style-carte\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#style-carte\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Style carte\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Les onglets peuvent être stylisés comme des cartes.\", -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Mettez \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" à \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"card\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour avoir des onglets avec un style de carte.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-tabs type=\\\"card\\\" @tab-click=\\\"handleClick\\\">\\n    <el-tab-pane label=\\\"User\\\">Utilisateur</el-tab-pane>\\n    <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n    <el-tab-pane label=\\\"Role\\\">Rôle</el-tab-pane>\\n    <el-tab-pane label=\\\"Task\\\">Tâche</el-tab-pane>\\n  </el-tabs>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        activeName: 'first'\\n      };\\n    },\\n    methods: {\\n      handleClick(tab, event) {\\n        console.log(tab, event);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"style-carte-avec-bordure\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#style-carte-avec-bordure\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Style carte avec bordure\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Onglets avec style de carte et bordure.\", -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Mettez \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"type\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" à \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"border-card\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tabs type=\\\"border-card\\\">\\n  <el-tab-pane label=\\\"User\\\">Utilisateur</el-tab-pane>\\n  <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n  <el-tab-pane label=\\\"Role\\\">Rôle</el-tab-pane>\\n  <el-tab-pane label=\\\"Task\\\">Tâche</el-tab-pane>\\n</el-tabs>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"position-des-onglets\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#position-des-onglets\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Position des onglets\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Vous pouvez utiliser \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"tab-position\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" pour régler la position des onglets.\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Il y a quatre positions différentes: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"tabPosition=\\\"left|right|top|bottom\\\"\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-radio-group v-model=\\\"tabPosition\\\" style=\\\"margin-bottom: 30px;\\\">\\n    <el-radio-button label=\\\"top\\\">En haut</el-radio-button>\\n    <el-radio-button label=\\\"right\\\">À droite</el-radio-button>\\n    <el-radio-button label=\\\"bottom\\\">En bas</el-radio-button>\\n    <el-radio-button label=\\\"left\\\">À gauche</el-radio-button>\\n  </el-radio-group>\\n\\n  <el-tabs :tab-position=\\\"tabPosition\\\" style=\\\"height: 200px;\\\">\\n    <el-tab-pane label=\\\"User\\\">Utilisateur</el-tab-pane>\\n    <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n    <el-tab-pane label=\\\"Role\\\">Rôle</el-tab-pane>\\n    <el-tab-pane label=\\\"Task\\\">Tâche</el-tab-pane>\\n  </el-tabs>\\n</template>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        tabPosition: 'left'\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"onglet-personnalise\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#onglet-personnalise\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Onglet personnalisé\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Vous pouvez utiliser un slot pour customiser le label d'un onglet.\", -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tabs type=\\\"border-card\\\">\\n  <el-tab-pane>\\n    <span slot=\\\"label\\\"><i class=\\\"el-icon-date\\\"></i> Route</span>\\n    Route\\n  </el-tab-pane>\\n  <el-tab-pane label=\\\"Config\\\">Config</el-tab-pane>\\n  <el-tab-pane label=\\\"Role\\\">Rôle</el-tab-pane>\\n  <el-tab-pane label=\\\"Task\\\">Tâche</el-tab-pane>\\n</el-tabs>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"ajouter-et-supprimer-des-onglets\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#ajouter-et-supprimer-des-onglets\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Ajouter et supprimer des onglets\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Seuls les onglets de type carte supportent l'ajout et la suppression.\", -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tabs v-model=\\\"editableTabsValue\\\" type=\\\"card\\\" editable @edit=\\\"handleTabsEdit\\\">\\n  <el-tab-pane\\n    v-for=\\\"(item, index) in editableTabs\\\"\\n    :key=\\\"item.name\\\"\\n    :label=\\\"item.title\\\"\\n    :name=\\\"item.name\\\"\\n  >\\n    {{item.content}}\\n  </el-tab-pane>\\n</el-tabs>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        editableTabsValue: '2',\\n        editableTabs: [{\\n          title: 'Onglet 1',\\n          name: '1',\\n          content: 'Contenu de l\\\\'onglet 1'\\n        }, {\\n          title: 'Onglet 2',\\n          name: '2',\\n          content: 'Contenu de l\\\\'onglet 2'\\n        }],\\n        tabIndex: 2\\n      }\\n    },\\n    methods: {\\n      handleTabsEdit(targetName, action) {\\n        if (action === 'add') {\\n          let newTabName = ++this.tabIndex + '';\\n          this.editableTabs.push({\\n            title: 'Nouvel onglet',\\n            name: newTabName,\\n            content: 'Contenu du nouvel onglet'\\n          });\\n          this.editableTabsValue = newTabName;\\n        }\\n        if (action === 'remove') {\\n          let tabs = this.editableTabs;\\n          let activeName = this.editableTabsValue;\\n          if (activeName === targetName) {\\n            tabs.forEach((tab, index) => {\\n              if (tab.name === targetName) {\\n                let nextTab = tabs[index + 1] || tabs[index - 1];\\n                if (nextTab) {\\n                  activeName = nextTab.name;\\n                }\\n              }\\n            });\\n          }\\n\\n          this.editableTabsValue = activeName;\\n          this.editableTabs = tabs.filter(tab => tab.name !== targetName);\\n        }\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"personnaliser-le-bouton-d-ajout-d-onglet\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#personnaliser-le-bouton-d-ajout-d-onglet\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Personnaliser le bouton d'ajout d'onglet\")\n], -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<div style=\\\"margin-bottom: 20px;\\\">\\n  <el-button\\n    size=\\\"small\\\"\\n    @click=\\\"addTab(editableTabsValue)\\\"\\n  >\\n    Ajouter un onglet\\n  </el-button>\\n</div>\\n<el-tabs v-model=\\\"editableTabsValue\\\" type=\\\"card\\\" closable @tab-remove=\\\"removeTab\\\">\\n  <el-tab-pane\\n    v-for=\\\"(item, index) in editableTabs\\\"\\n    :key=\\\"item.name\\\"\\n    :label=\\\"item.title\\\"\\n    :name=\\\"item.name\\\"\\n  >\\n    {{item.content}}\\n  </el-tab-pane>\\n</el-tabs>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        editableTabsValue: '2',\\n        editableTabs: [{\\n          title: 'Onglet 1',\\n          name: '1',\\n          content: 'Contenu de l\\\\'onglet 1'\\n        }, {\\n          title: 'Onglet 2',\\n          name: '2',\\n          content: 'Contenu de l\\\\'onglet 2'\\n        }],\\n        tabIndex: 2\\n      }\\n    },\\n    methods: {\\n      addTab(targetName) {\\n        let newTabName = ++this.tabIndex + '';\\n        this.editableTabs.push({\\n          title: 'Nouvel onglet',\\n          name: newTabName,\\n          content: 'Contenu du nouvel onglet'\\n        });\\n        this.editableTabsValue = newTabName;\\n      },\\n      removeTab(targetName) {\\n        let tabs = this.editableTabs;\\n        let activeName = this.editableTabsValue;\\n        if (activeName === targetName) {\\n          tabs.forEach((tab, index) => {\\n            if (tab.name === targetName) {\\n              let nextTab = tabs[index + 1] || tabs[index - 1];\\n              if (nextTab) {\\n                activeName = nextTab.name;\\n              }\\n            }\\n          });\\n        }\\n\\n        this.editableTabsValue = activeName;\\n        this.editableTabs = tabs.filter(tab => tab.name !== targetName);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"attributs-de-tabs\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributs-de-tabs\\\">¶</a> Attributs de Tabs</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>value / v-model</td><td>La valeur liée, nom de l&#39;onglet sélectionné.</td><td>string</td><td>—</td><td>Nom du premier onglet.</td></tr><tr><td>type</td><td>Type de l&#39;onglet.</td><td>string</td><td>card/border-card</td><td>—</td></tr><tr><td>closable</td><td>Si des onglets peuvent être supprimés.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>addable</td><td>Si des onglets peuvent être ajoutés.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>editable</td><td>Si des onglets peuvent être ajoutés et supprimés.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>tab-position</td><td>Position des onglets.</td><td>string</td><td>top/right/bottom/left</td><td>top</td></tr><tr><td>stretch</td><td>Si la largeur des onglets s&#39;adapte au conteneur.</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>before-leave</td><td>Fonction de hook avant de changer d&#39;onglet. Si <code>false</code> est retourné ou qu&#39;une <code>Promise</code> retournée et rejetée, le changement sera annulé.</td><td>Function(activeName, oldActiveName)</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"evenements-de-tabs\\\"><a class=\\\"header-anchor\\\" href=\\\"#evenements-de-tabs\\\">¶</a> Évènements de Tabs</h3><table><thead><tr><th>Nom</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>tab-click</td><td>Se déclenche quand on clique sur un onglet.</td><td>clicked tab</td></tr><tr><td>tab-remove</td><td>Se déclenche quand on clique sur le bouton de suppression des onglets.</td><td>name of the removed tab</td></tr><tr><td>tab-add</td><td>Se déclenche quand on clique sur le bouton d&#39;ajout des onglets.</td><td>—</td></tr><tr><td>edit</td><td>Se déclenche quand on clique sur les boutons d&#39;ajout ou de suppression des onglets.</td><td>(targetName, action)</td></tr></tbody></table><h3 id=\\\"attributs-de-tab-pane\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributs-de-tab-pane\\\">¶</a> Attributs de Tab-pane</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>label</td><td>Titre de l&#39;onglet.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>Si l&#39;onglet est désactivé.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>name</td><td>Identifiant correspondant au nom des onglets, utilisé par Tabs pour savoir quel est l&#39;onglet actif.</td><td>string</td><td>—</td><td>Numéro de l&#39;onglet dans l&#39;ordre d&#39;apparition, e.g. le premier est &#39;1&#39;.</td></tr><tr><td>closable</td><td>Si l&#39;onglet est supprimable.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>lazy</td><td>Si le contenu de l&#39;onglet bénéficie du lazy-loading.</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table>\", 6)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_7\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_8,\n    _hoisted_9,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_11\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_10\n      ]),\n      _: 1\n    }),\n    _hoisted_12,\n    _hoisted_13,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_15\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_14\n      ]),\n      _: 1\n    }),\n    _hoisted_16,\n    _hoisted_17,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_19\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_18\n      ]),\n      _: 1\n    }),\n    _hoisted_20,\n    _hoisted_21,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_22\n      ]),\n      _: 1\n    }),\n    _hoisted_23,\n    _hoisted_24,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_25\n      ]),\n      _: 1\n    }),\n    _hoisted_26,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_27\n      ]),\n      _: 1\n    }),\n    _hoisted_28\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/fr-FR/tabs.md?vue&type=template&id=655e9461\n");

/***/ })

}]);