(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[153],{

/***/ "./examples/docs/es/transfer.md":
/*!**************************************!*\
  !*** ./examples/docs/es/transfer.md ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _transfer_md_vue_type_template_id_1d94b5c6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transfer.md?vue&type=template&id=1d94b5c6 */ \"./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6\");\n/* harmony import */ var _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transfer.md?vue&type=script&lang=js */ \"./examples/docs/es/transfer.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _transfer_md_vue_type_template_id_1d94b5c6__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"1d94b5c6\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('1d94b5c6', _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('1d94b5c6', _transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./transfer.md?vue&type=template&id=1d94b5c6 */ \"./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _transfer_md_vue_type_template_id_1d94b5c6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transfer.md?vue&type=template&id=1d94b5c6 */ \"./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6\");\n(() => {\n    api.rerender('1d94b5c6', _transfer_md_vue_type_template_id_1d94b5c6__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/es/transfer.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RyYW5zZmVyLm1kPzAzNGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQW9FO0FBQ1Y7QUFDTDtBQUNyRCw0RUFBTSxVQUFVLGlGQUFNO0FBQ3RCO0FBQ0EsSUFBSSxJQUFVO0FBQ2QsRUFBRSw0RUFBTTtBQUNSO0FBQ0E7QUFDQSxvQ0FBb0MsNEVBQU07QUFDMUMsMkJBQTJCLDRFQUFNO0FBQ2pDOztBQUVBLG9CQUFvQixpSEFBNkMsRUFBRTtBQUFBO0FBQ25FLDZCQUE2QixpRkFBTTtBQUNuQyxHQUFHOztBQUVIOztBQUVBLDRFQUFNOztBQUVTLDJJIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lcy90cmFuc2Zlci5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFkOTRiNWM2XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdHJhbnNmZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vdHJhbnNmZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuc2NyaXB0LnJlbmRlciA9IHJlbmRlclxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgc2NyaXB0Ll9faG1ySWQgPSBcIjFkOTRiNWM2XCJcbiAgY29uc3QgYXBpID0gX19WVUVfSE1SX1JVTlRJTUVfX1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghYXBpLmNyZWF0ZVJlY29yZCgnMWQ5NGI1YzYnLCBzY3JpcHQpKSB7XG4gICAgYXBpLnJlbG9hZCgnMWQ5NGI1YzYnLCBzY3JpcHQpXG4gIH1cbiAgXG4gIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi90cmFuc2Zlci5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xZDk0YjVjNlwiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCcxZDk0YjVjNicsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VzL3RyYW5zZmVyLm1kXCJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/es/transfer.md\n");

/***/ }),

/***/ "./examples/docs/es/transfer.md?vue&type=script&lang=js":
/*!**************************************************************!*\
  !*** ./examples/docs/es/transfer.md?vue&type=script&lang=js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./transfer.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/transfer.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RyYW5zZmVyLm1kP2Q5NTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBNk0iLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VzL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/transfer.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6":
/*!********************************************************************!*\
  !*** ./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6 ***!
  \********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_template_id_1d94b5c6__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./transfer.md?vue&type=template&id=1d94b5c6 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_transfer_md_vue_type_template_id_1d94b5c6__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VzL3RyYW5zZmVyLm1kPzc3YTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VzL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFkOTRiNWM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS01IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL3RyYW5zZmVyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTFkOTRiNWM2XCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/transfer.md?vue&type=script&lang=js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/transfer.md?vue&type=script&lang=js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_component_el_transfer, {\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          data: _ctx.data\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"data\"]);\n      }\n\n      const {\n        reactive,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            data: generateData(),\n            value: [1, 4]\n          });\n          return toRefs(state);\n        }\n\n      };\n\n      const generateData = _ => {\n        const data = [];\n\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            key: i,\n            label: `Option ${i}`,\n            disabled: i % 4 === 0\n          });\n        }\n\n        return data;\n      };\n\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_component_el_transfer, {\n          filterable: \"\",\n          \"filter-method\": _ctx.filterMethod,\n          \"filter-placeholder\": \"State Abbreviations\",\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          data: _ctx.data\n        }, null, 8\n        /* PROPS */\n        , [\"filter-method\", \"modelValue\", \"onUpdate:modelValue\", \"data\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          const generateData = _ => {\n            const data = [];\n            const states = ['California', 'Illinois', 'Maryland', 'Texas', 'Florida', 'Colorado', 'Connecticut '];\n            const initials = ['CA', 'IL', 'MD', 'TX', 'FL', 'CO', 'CT'];\n            states.forEach((city, index) => {\n              data.push({\n                label: city,\n                key: initials[index],\n                initial: initials[index]\n              });\n            });\n            return data;\n          };\n\n          return {\n            data: generateData(),\n            value: [],\n\n            filterMethod(query, item) {\n              return item.initial.toLowerCase().indexOf(query.toLowerCase()) > -1;\n            }\n\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        toDisplayString: _toDisplayString,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_button = _resolveComponent(\"el-button\");\n\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_Fragment, null, [_createVNode(\"p\", {\n          style: {\n            \"text-align\": \"center\",\n            \"margin\": \"0 0 20px\"\n          }\n        }, \"Customize data items using render-content\"), _createVNode(\"div\", {\n          style: {\n            \"text-align\": \"center\"\n          }\n        }, [_createVNode(_component_el_transfer, {\n          style: {\n            \"text-align\": \"left\",\n            \"display\": \"inline-block\"\n          },\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          filterable: \"\",\n          \"left-default-checked\": [2, 3],\n          \"right-default-checked\": [1],\n          \"render-content\": _ctx.renderFunc,\n          titles: ['Source', 'Target'],\n          \"button-texts\": ['To left', 'To right'],\n          format: {\n            noChecked: '${total}',\n            hasChecked: '${checked}/${total}'\n          },\n          onChange: _ctx.handleChange,\n          data: _ctx.data\n        }, {\n          \"left-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          \"right-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"render-content\", \"onChange\", \"data\"])]), _createVNode(\"p\", {\n          style: {\n            \"text-align\": \"center\",\n            \"margin\": \"50px 0 20px\"\n          }\n        }, \"Customize data items using scoped slot\"), _createVNode(\"div\", {\n          style: {\n            \"text-align\": \"center\"\n          }\n        }, [_createVNode(_component_el_transfer, {\n          style: {\n            \"text-align\": \"left\",\n            \"display\": \"inline-block\"\n          },\n          modelValue: _ctx.value4,\n          \"onUpdate:modelValue\": $event => _ctx.value4 = $event,\n          filterable: \"\",\n          \"left-default-checked\": [2, 3],\n          \"right-default-checked\": [1],\n          titles: ['Source', 'Target'],\n          \"button-texts\": ['To left', 'To right'],\n          format: {\n            noChecked: '${total}',\n            hasChecked: '${checked}/${total}'\n          },\n          onChange: _ctx.handleChange,\n          data: _ctx.data\n        }, {\n          default: _withCtx(({\n            option\n          }) => [_createVNode(\"span\", null, _toDisplayString(option.key) + \" - \" + _toDisplayString(option.label), 1\n          /* TEXT */\n          )]),\n          \"left-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          \"right-footer\": _withCtx(() => [_createVNode(_component_el_button, {\n            class: \"transfer-footer\",\n            size: \"small\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Operation\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onChange\", \"data\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        reactive,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            data: generateData(),\n            value: [1],\n            value4: [1]\n          });\n\n          const renderFunc = (h, option) => Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"span\", null, [option.key, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" - \"), option.label]);\n\n          const handleChange = (value, direction, movedKeys) => console.log(value, direction, movedKeys);\n\n          return { ...toRefs(state),\n            renderFunc,\n            handleChange\n          };\n        }\n\n      };\n\n      const generateData = _ => {\n        const data = [];\n\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            key: i,\n            label: `Option ${i}`,\n            disabled: i % 4 === 0\n          });\n        }\n\n        return data;\n      };\n\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo3\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_el_transfer = _resolveComponent(\"el-transfer\");\n\n        return _openBlock(), _createBlock(_component_el_transfer, {\n          modelValue: _ctx.value,\n          \"onUpdate:modelValue\": $event => _ctx.value = $event,\n          props: {\n            key: 'value',\n            label: 'desc'\n          },\n          data: _ctx.data\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"data\"]);\n      }\n\n      const {\n        reactive,\n        toRefs\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = {\n        setup() {\n          const state = reactive({\n            value: [],\n            data: generateData()\n          });\n          return toRefs(state);\n        }\n\n      };\n\n      const generateData = _ => {\n        const data = [];\n\n        for (let i = 1; i <= 15; i++) {\n          data.push({\n            value: i,\n            desc: `Option ${i}`,\n            disabled: i % 4 === 0\n          });\n        }\n\n        return data;\n      };\n\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_1___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/transfer.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6 ***!
  \****************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"transfer\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#transfer\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Transfer\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"uso-basico\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#uso-basico\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Uso básico\")\n], -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Los datos se pasan a Transfer a través del atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"data\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Los datos tienen que ser un array de objetos, y cada objeto debe tener estos atributos: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" que será el identificador del ítem, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" que será el texto a mostrar, y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"disabled\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" que indicará si el elemento esta desactivado. Los items dentro de la lista destino están sincronizados con la variable asociada a \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"v-model\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", y el valor de esa variable es un array de claves de los elementos de la lista destino. Así que si no quiere que la lista destino esté vacía inicialmente puede inicializar el \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"v-model\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" con un array.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-transfer v-model=\\\"value\\\" :data=\\\"data\\\"></el-transfer>\\n</template>\\n\\n<script>\\nimport { reactive, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      data: generateData(),\\n      value: [1, 4]\\n    })\\n\\n    return toRefs(state)\\n  }\\n}\\n\\nconst generateData = _ => {\\n  const data = []\\n  for (let i = 1; i <= 15; i++) {\\n    data.push({\\n      key: i,\\n      label: `Option ${ i }`,\\n      disabled: i % 4 === 0\\n    })\\n  }\\n  return data\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"filtrar\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#filtrar\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Filtrar\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Puede buscar y filtrar los items.\", -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Ponga el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filterable\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" a true para permitir el filtrado.Por defecto si el \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" del ítem contiene el término buscado será incluido en el resultado. También puede implementar su propio método de filtrado con el atributo \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filter-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", que recibe un método y le pasa la búsqueda y cada ítem. Los items para los que devuelva true serán incluidos en el resultado de la búsqueda.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-transfer\\n    filterable\\n    :filter-method=\\\"filterMethod\\\"\\n    filter-placeholder=\\\"State Abbreviations\\\"\\n    v-model=\\\"value\\\"\\n    :data=\\\"data\\\">\\n  </el-transfer>\\n</template>\\n\\n<script>\\n  export default {\\n    data() {\\n      const generateData = _ => {\\n        const data = []\\n        const states = ['California', 'Illinois', 'Maryland', 'Texas', 'Florida', 'Colorado', 'Connecticut ']\\n        const initials = ['CA', 'IL', 'MD', 'TX', 'FL', 'CO', 'CT']\\n        states.forEach((city, index) => {\\n          data.push({\\n            label: city,\\n            key: initials[index],\\n            initial: initials[index]\\n          })\\n        })\\n        return data\\n      }\\n      return {\\n        data: generateData(),\\n        value: [],\\n        filterMethod(query, item) {\\n          return item.initial.toLowerCase().indexOf(query.toLowerCase()) > -1\\n        }\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"personalizable\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#personalizable\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Personalizable\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Puede personalizar los títulos, botones, la función de renderizado de los items, el texto de estatus de la cabecera y el contenido del pie.\", -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"titles\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"button-texts\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"format\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" respectivamente para personalizar los títulos de las listas, el texto de los botones, la función de renderizado para los items y el texto de la cabecera que muestra el estado de los items. Además, también puede utilizar el scoped-slot para personalizar los elementos de datos. Para el pie de la lista hay dos slots: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"left-footer\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"right-footer\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Además, si quiere algunos items marcados inicialmente puede usar \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"left-default-checked\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"right-default-checked\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Finalmente este ejemplo muestra el evento \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"change\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Tenga en cuenta que este ejemplo no se puede ejecutar en jsfiddle porque no soporta sintaxis JSX. En un proyecto real \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" funcionará si las dependencias son configuradas correctamente.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <p style=\\\"text-align: center; margin: 0 0 20px\\\">Customize data items using render-content</p>\\n  <div style=\\\"text-align: center\\\">\\n    <el-transfer\\n      style=\\\"text-align: left; display: inline-block\\\"\\n      v-model=\\\"value\\\"\\n      filterable\\n      :left-default-checked=\\\"[2, 3]\\\"\\n      :right-default-checked=\\\"[1]\\\"\\n      :render-content=\\\"renderFunc\\\"\\n      :titles=\\\"['Source', 'Target']\\\"\\n      :button-texts=\\\"['To left', 'To right']\\\"\\n      :format=\\\"{\\n        noChecked: '${total}',\\n        hasChecked: '${checked}/${total}'\\n      }\\\"\\n      @change=\\\"handleChange\\\"\\n      :data=\\\"data\\\"\\n    >\\n      <template #left-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n      <template #right-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n    </el-transfer>\\n  </div>\\n  <p style=\\\"text-align: center; margin: 50px 0 20px\\\">Customize data items using scoped slot</p>\\n  <div style=\\\"text-align: center\\\">\\n    <el-transfer\\n      style=\\\"text-align: left; display: inline-block\\\"\\n      v-model=\\\"value4\\\"\\n      filterable\\n      :left-default-checked=\\\"[2, 3]\\\"\\n      :right-default-checked=\\\"[1]\\\"\\n      :titles=\\\"['Source', 'Target']\\\"\\n      :button-texts=\\\"['To left', 'To right']\\\"\\n      :format=\\\"{\\n        noChecked: '${total}',\\n        hasChecked: '${checked}/${total}'\\n      }\\\"\\n      @change=\\\"handleChange\\\"\\n      :data=\\\"data\\\"\\n    >\\n      <template #default=\\\"{ option }\\\">\\n        <span>{{ option.key }} - {{ option.label }}</span>\\n      </template>\\n      \\n      <template #left-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n      <template #right-footer>\\n        <el-button class=\\\"transfer-footer\\\" size=\\\"small\\\">Operation</el-button>\\n      </template>\\n    </el-transfer>\\n  </div>\\n</template>\\n\\n<style scoped>\\n  .transfer-footer {\\n    margin-left: 15px;\\n    padding: 6px 5px;\\n  }\\n</style>\\n\\n<script>\\nimport { reactive, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      data: generateData(),\\n      value: [1],\\n      value4: [1]\\n    })\\n\\n    const renderFunc = (h, option) => <span>{ option.key } - { option.label }</span>\\n\\n    const handleChange = (value, direction, movedKeys) => console.log(value, direction, movedKeys)\\n    \\n    return {\\n      ...toRefs(state),\\n      renderFunc,\\n      handleChange\\n    }\\n  }\\n}\\n\\nconst generateData = _ => {\\n  const data = []\\n  for (let i = 1; i <= 15; i++) {\\n    data.push({\\n      key: i,\\n      label: `Option ${ i }`,\\n      disabled: i % 4 === 0\\n    })\\n  }\\n  return data\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"prop-con-alias\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#prop-con-alias\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Prop con alias\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Por defecto Transfer busca los atributos \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", y \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"disabled\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" en cada elemento. Si sus datos tienen un nombre diferente para la clave puede usar el atributo \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"props\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" para añadir alias.\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"En este ejemplo los elementos no tienen \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\", en vez de eso tienen \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"value\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"desc\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\". Así que tiene que añadir alias para \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" y \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"label\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<template>\\n  <el-transfer\\n    v-model=\\\"value\\\"\\n    :props=\\\"{\\n      key: 'value',\\n      label: 'desc'\\n    }\\\"\\n    :data=\\\"data\\\"\\n  >\\n  </el-transfer>\\n</template>\\n\\n<script>\\nimport { reactive, toRefs } from 'vue'\\n\\nexport default {\\n  setup() {\\n    const state = reactive({\\n      value: [],\\n      data: generateData()\\n    })\\n\\n    return toRefs(state)\\n  }\\n}\\n\\nconst generateData = _ => {\\n  const data = []\\n  for (let i = 1; i <= 15; i++) {\\n    data.push({\\n      value: i,\\n      desc: `Option ${ i }`,\\n      disabled: i % 4 === 0\\n    })\\n  }\\n  return data\\n}\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"atributos\\\"><a class=\\\"header-anchor\\\" href=\\\"#atributos\\\">¶</a> Atributos</h3><table><thead><tr><th>Atriburo</th><th>Descripcion</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>value / v-model</td><td>valor enlazado</td><td>array</td><td>—</td><td>—</td></tr><tr><td>data</td><td>Origen de datos</td><td>array[{ key, label, disabled }]</td><td>—</td><td>[ ]</td></tr><tr><td>filterable</td><td>Si se puede filtrar</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>filter-placeholder</td><td>Placeholder para el input del filtro</td><td>string</td><td>—</td><td>Enter keyword</td></tr><tr><td>filter-method</td><td>Método de filtrado</td><td>function</td><td>—</td><td>—</td></tr><tr><td>target-order</td><td>estrategia de órdenes para elementos de la lista destino. Si está configurado en <code>original</code>, los elementos mantendrán el mismo orden que la fuente de datos. Si está configurado para <code>push</code>, los nuevos elementos añadidos se insertaran al final. Si se ajusta a <code>unshift</code>, los nuevos elementos añadidos se insertarán en la parte superior.</td><td>string</td><td>original / push / unshift</td><td>original</td></tr><tr><td>titles</td><td>Títulos de las listas</td><td>array</td><td>—</td><td>[&#39;List 1&#39;, &#39;List 2&#39;]</td></tr><tr><td>button-texts</td><td>Texto de los botones</td><td>array</td><td>—</td><td>[ ]</td></tr><tr><td>render-content</td><td>Función de renderizado</td><td>function(h, option)</td><td>—</td><td>—</td></tr><tr><td>format</td><td>Texto para el status en el header</td><td>object{noChecked, hasChecked}</td><td>—</td><td>{ noChecked: &#39;${checked}/${total}&#39;, hasChecked: &#39;${checked}/${total}&#39; }</td></tr><tr><td>props</td><td>prop alias para el origen de datos</td><td>object{key, label, disabled}</td><td>—</td><td>—</td></tr><tr><td>left-default-checked</td><td>Array de claves de los elementos marcados inicialmente en la lista de la izquierda</td><td>array</td><td>—</td><td>[ ]</td></tr><tr><td>right-default-checked</td><td>Array de claves de los elementos marcados inicialmente en la lista de la derecha</td><td>array</td><td>—</td><td>[ ]</td></tr></tbody></table><h3 id=\\\"slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#slot\\\">¶</a> Slot</h3><table><thead><tr><th>Nombre</th><th>Descripcion</th></tr></thead><tbody><tr><td>left-footer</td><td>Contenido del footer de la lista de la izquierda</td></tr><tr><td>right-footer</td><td>Contenido del footer de la lista de la derecha</td></tr></tbody></table><h3 id=\\\"scoped-slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#scoped-slot\\\">¶</a> Scoped Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Contenido personalizado para los datos de los items. El parámetro del scope es { option }</td></tr></tbody></table><h3 id=\\\"methods\\\"><a class=\\\"header-anchor\\\" href=\\\"#methods\\\">¶</a> Methods</h3><table><thead><tr><th>Method</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>clearQuery</td><td>borra la palabra clave del filtro de un determinado panel</td><td>&#39;left&#39; / &#39;right&#39;</td></tr></tbody></table><h3 id=\\\"eventos\\\"><a class=\\\"header-anchor\\\" href=\\\"#eventos\\\">¶</a> Eventos</h3><table><thead><tr><th>Nombre</th><th>Descripcion</th><th>Parametros</th></tr></thead><tbody><tr><td>change</td><td>se lanza cuando los elementos cambian en la lista de la derecha</td><td>array con las claves de los elementos de la lista de la derecha</td></tr><tr><td>left-check-change</td><td>se dispara cuando el usuario final cambia el estado verificado de cualquier elemento de datos en la lista izquierda</td><td>array clave de ítems actualmente verificados, array clave de ítems cuyo estado verificado ha cambiado</td></tr><tr><td>right-check-change</td><td>se dispara cuando el usuario final cambia el estado verificado de cualquier elemento de datos en la lista derecha.</td><td>array clave de ítems actualmente verificados, array clave de ítems cuyo estado verificado ha cambiado</td></tr></tbody></table>\", 10)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_5\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_4\n      ]),\n      _: 1\n    }),\n    _hoisted_6,\n    _hoisted_7,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_8\n      ]),\n      _: 1\n    }),\n    _hoisted_10,\n    _hoisted_11,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_13\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      _: 1\n    }),\n    _hoisted_14,\n    _hoisted_15,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_16\n      ]),\n      _: 1\n    }),\n    _hoisted_18\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/es/transfer.md?vue&type=template&id=1d94b5c6\n");

/***/ })

}]);