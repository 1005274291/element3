(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[58],{

/***/ "./examples/docs/en-US/collapse.md":
/*!*****************************************!*\
  !*** ./examples/docs/en-US/collapse.md ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _collapse_md_vue_type_template_id_0132c627__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collapse.md?vue&type=template&id=0132c627 */ \"./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627\");\n/* harmony import */ var _collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collapse.md?vue&type=script&lang=js */ \"./examples/docs/en-US/collapse.md?vue&type=script&lang=js\");\n/* empty/unused harmony star reexport */\n\n\n_collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _collapse_md_vue_type_template_id_0132c627__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (true) {\n  _collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__hmrId = \"0132c627\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('0132c627', _collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n    api.reload('0132c627', _collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n  }\n  \n  module.hot.accept(/*! ./collapse.md?vue&type=template&id=0132c627 */ \"./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _collapse_md_vue_type_template_id_0132c627__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collapse.md?vue&type=template&id=0132c627 */ \"./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627\");\n(() => {\n    api.rerender('0132c627', _collapse_md_vue_type_template_id_0132c627__WEBPACK_IMPORTED_MODULE_0__[\"render\"])\n  })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n\n}\n\n_collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"examples/docs/en-US/collapse.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL2NvbGxhcHNlLm1kP2FhZjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQW9FO0FBQ1Y7QUFDTDtBQUNyRCw0RUFBTSxVQUFVLGlGQUFNO0FBQ3RCO0FBQ0EsSUFBSSxJQUFVO0FBQ2QsRUFBRSw0RUFBTTtBQUNSO0FBQ0E7QUFDQSxvQ0FBb0MsNEVBQU07QUFDMUMsMkJBQTJCLDRFQUFNO0FBQ2pDOztBQUVBLG9CQUFvQixvSEFBNkMsRUFBRTtBQUFBO0FBQ25FLDZCQUE2QixpRkFBTTtBQUNuQyxHQUFHOztBQUVIOztBQUVBLDRFQUFNOztBQUVTLDJJIiwiZmlsZSI6Ii4vZXhhbXBsZXMvZG9jcy9lbi1VUy9jb2xsYXBzZS5tZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL2NvbGxhcHNlLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAxMzJjNjI3XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY29sbGFwc2UubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vY29sbGFwc2UubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuc2NyaXB0LnJlbmRlciA9IHJlbmRlclxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgc2NyaXB0Ll9faG1ySWQgPSBcIjAxMzJjNjI3XCJcbiAgY29uc3QgYXBpID0gX19WVUVfSE1SX1JVTlRJTUVfX1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghYXBpLmNyZWF0ZVJlY29yZCgnMDEzMmM2MjcnLCBzY3JpcHQpKSB7XG4gICAgYXBpLnJlbG9hZCgnMDEzMmM2MjcnLCBzY3JpcHQpXG4gIH1cbiAgXG4gIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9jb2xsYXBzZS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wMTMyYzYyN1wiLCAoKSA9PiB7XG4gICAgYXBpLnJlcmVuZGVyKCcwMTMyYzYyNycsIHJlbmRlcilcbiAgfSlcblxufVxuXG5zY3JpcHQuX19maWxlID0gXCJleGFtcGxlcy9kb2NzL2VuLVVTL2NvbGxhcHNlLm1kXCJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./examples/docs/en-US/collapse.md\n");

/***/ }),

/***/ "./examples/docs/en-US/collapse.md?vue&type=script&lang=js":
/*!*****************************************************************!*\
  !*** ./examples/docs/en-US/collapse.md?vue&type=script&lang=js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./collapse.md?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/collapse.md?vue&type=script&lang=js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_collapse_md_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ \n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL2NvbGxhcHNlLm1kPzk4NDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBNk0iLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VuLVVTL2NvbGxhcHNlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2NvbGxhcHNlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2NvbGxhcHNlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/en-US/collapse.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627":
/*!***********************************************************************!*\
  !*** ./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627 ***!
  \***********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_collapse_md_vue_type_template_id_0132c627__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../../build/md-loader!./collapse.md?vue&type=template&id=0132c627 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_build_md_loader_index_js_collapse_md_vue_type_template_id_0132c627__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy9kb2NzL2VuLVVTL2NvbGxhcHNlLm1kPzkzYWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9leGFtcGxlcy9kb2NzL2VuLVVTL2NvbGxhcHNlLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAxMzJjNjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS01IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uLy4uL2J1aWxkL21kLWxvYWRlci9pbmRleC5qcyEuL2NvbGxhcHNlLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAxMzJjNjI3XCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/collapse.md?vue&type=script&lang=js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/en-US/collapse.md?vue&type=script&lang=js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\n/* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"element-demo0\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\");\n\n        const _component_el_collapse = _resolveComponent(\"el-collapse\");\n\n        return _openBlock(), _createBlock(_component_el_collapse, {\n          modelValue: _ctx.activeNames,\n          \"onUpdate:modelValue\": $event => _ctx.activeNames = $event,\n          onChange: _ctx.handleChange\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_collapse_item, {\n            title: \"Consistency\",\n            name: \"1\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;\"), _createVNode(\"div\", null, \"Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Feedback\",\n            name: \"2\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;\"), _createVNode(\"div\", null, \"Visual feedback: reflect current state by updating or rearranging elements of the page.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Efficiency\",\n            name: \"3\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Simplify the process: keep operating process simple and intuitive;\"), _createVNode(\"div\", null, \"Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;\"), _createVNode(\"div\", null, \"Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Controllability\",\n            name: \"4\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Decision making: giving advices about operations is acceptable, but do not make decisions for the users;\"), _createVNode(\"div\", null, \"Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            activeNames: ['1']\n          };\n        },\n\n        methods: {\n          handleChange(val) {\n            console.log(val);\n          }\n\n        }\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo1\": function () {\n      const {\n        createVNode: _createVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\");\n\n        const _component_el_collapse = _resolveComponent(\"el-collapse\");\n\n        return _openBlock(), _createBlock(_component_el_collapse, {\n          modelValue: _ctx.activeName,\n          \"onUpdate:modelValue\": $event => _ctx.activeName = $event,\n          accordion: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_collapse_item, {\n            title: \"Consistency\",\n            name: \"1\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;\"), _createVNode(\"div\", null, \"Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Feedback\",\n            name: \"2\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;\"), _createVNode(\"div\", null, \"Visual feedback: reflect current state by updating or rearranging elements of the page.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Efficiency\",\n            name: \"3\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Simplify the process: keep operating process simple and intuitive;\"), _createVNode(\"div\", null, \"Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;\"), _createVNode(\"div\", null, \"Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Controllability\",\n            name: \"4\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Decision making: giving advices about operations is acceptable, but do not make decisions for the users;\"), _createVNode(\"div\", null, \"Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.\")]),\n            _: 1\n          })]),\n          _: 1\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onUpdate:modelValue\"]);\n      }\n\n      const democomponentExport = {\n        data() {\n          return {\n            activeName: '1'\n          };\n        }\n\n      };\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"element-demo2\": function () {\n      const {\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_1__;\n\n      function render(_ctx, _cache) {\n        const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\");\n\n        const _component_el_collapse = _resolveComponent(\"el-collapse\");\n\n        return _openBlock(), _createBlock(_component_el_collapse, {\n          accordion: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_collapse_item, {\n            name: \"1\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"template\", {\n              slot: \"title\"\n            }, [_createTextVNode(\" Consistency\"), _createVNode(\"i\", {\n              class: \"header-icon el-icon-info\"\n            })]), _createVNode(\"div\", null, \"Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;\"), _createVNode(\"div\", null, \"Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Feedback\",\n            name: \"2\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;\"), _createVNode(\"div\", null, \"Visual feedback: reflect current state by updating or rearranging elements of the page.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Efficiency\",\n            name: \"3\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Simplify the process: keep operating process simple and intuitive;\"), _createVNode(\"div\", null, \"Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;\"), _createVNode(\"div\", null, \"Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.\")]),\n            _: 1\n          }), _createVNode(_component_el_collapse_item, {\n            title: \"Controllability\",\n            name: \"4\"\n          }, {\n            default: _withCtx(() => [_createVNode(\"div\", null, \"Decision making: giving advices about operations is acceptable, but do not make decisions for the users;\"), _createVNode(\"div\", null, \"Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.\")]),\n            _: 1\n          })]),\n          _: 1\n        });\n      }\n\n      const democomponentExport = {};\n      return {\n        mounted() {\n          this.$nextTick(() => {\n            const blocks = document.querySelectorAll('pre code:not(.hljs)');\n            Array.prototype.forEach.call(blocks, highlight_js__WEBPACK_IMPORTED_MODULE_0___default.a.highlightBlock);\n          });\n        },\n\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/collapse.md?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./build/md-loader!./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627 ***!
  \*******************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"collapse\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#collapse\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Collapse\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Use Collapse to store contents.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"basic-usage\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#basic-usage\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Basic usage\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"You can expand multiple panels\", -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-collapse v-model=\\\"activeNames\\\" @change=\\\"handleChange\\\">\\n  <el-collapse-item title=\\\"Consistency\\\" name=\\\"1\\\">\\n    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\\n    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Feedback\\\" name=\\\"2\\\">\\n    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\\n    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Efficiency\\\" name=\\\"3\\\">\\n    <div>Simplify the process: keep operating process simple and intuitive;</div>\\n    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\\n    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Controllability\\\" name=\\\"4\\\">\\n    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\\n    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\\n  </el-collapse-item>\\n</el-collapse>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        activeNames: ['1']\\n      };\\n    },\\n    methods: {\\n      handleChange(val) {\\n        console.log(val);\\n      }\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"accordion\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#accordion\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Accordion\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"In accordion mode, only one panel can be expanded at once\", -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Activate accordion mode using the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"accordion\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" attribute.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-collapse v-model=\\\"activeName\\\" accordion>\\n  <el-collapse-item title=\\\"Consistency\\\" name=\\\"1\\\">\\n    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\\n    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Feedback\\\" name=\\\"2\\\">\\n    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\\n    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Efficiency\\\" name=\\\"3\\\">\\n    <div>Simplify the process: keep operating process simple and intuitive;</div>\\n    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\\n    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Controllability\\\" name=\\\"4\\\">\\n    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\\n    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\\n  </el-collapse-item>\\n</el-collapse>\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        activeName: '1'\\n      };\\n    }\\n  }\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"custom-title\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#custom-title\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Custom title\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Besides using the \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"title\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" attribute, you can customize panel title with named slots, which makes adding custom content, e.g. icons, possible.\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-collapse accordion>\\n  <el-collapse-item name=\\\"1\\\">\\n    <template slot=\\\"title\\\">\\n      Consistency<i class=\\\"header-icon el-icon-info\\\"></i>\\n    </template>\\n    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\\n    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Feedback\\\" name=\\\"2\\\">\\n    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\\n    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Efficiency\\\" name=\\\"3\\\">\\n    <div>Simplify the process: keep operating process simple and intuitive;</div>\\n    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\\n    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\\n  </el-collapse-item>\\n  <el-collapse-item title=\\\"Controllability\\\" name=\\\"4\\\">\\n    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\\n    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\\n  </el-collapse-item>\\n</el-collapse>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"collapse-attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#collapse-attributes\\\">¶</a> Collapse Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>value / v-model</td><td>currently active panel</td><td>string (accordion mode) / array (non-accordion mode)</td><td>—</td><td>—</td></tr><tr><td>accordion</td><td>whether to activate accordion mode</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id=\\\"collapse-events\\\"><a class=\\\"header-anchor\\\" href=\\\"#collapse-events\\\">¶</a> Collapse Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>triggers when active panels change</td><td>(activeNames: array (non-accordion mode) / string (accordion mode))</td></tr></tbody></table><h3 id=\\\"collapse-item-attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#collapse-item-attributes\\\">¶</a> Collapse Item Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>name</td><td>unique identification of the panel</td><td>string/number</td><td>—</td><td>—</td></tr><tr><td>title</td><td>title of the panel</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>disable the collapse item</td><td>boolean</td><td>—</td><td>—</td></tr></tbody></table>\", 6)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_7,\n    _hoisted_8,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_10\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      _: 1\n    }),\n    _hoisted_11,\n    _hoisted_12,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_13\n      ]),\n      _: 1\n    }),\n    _hoisted_14\n  ]))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./build/md-loader/index.js!./examples/docs/en-US/collapse.md?vue&type=template&id=0132c627\n");

/***/ })

}]);